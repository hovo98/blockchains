{"version":3,"file":"DynamicWidgets.js","sources":["../../../src/components/DynamicWidgets.js"],"sourcesContent":["import { createWidgetMixin } from '../mixins/widget';\nimport { EXPERIMENTAL_connectDynamicWidgets } from 'instantsearch.js/es/connectors';\nimport { createSuitMixin } from '../mixins/suit';\n\nfunction getWidgetAttribute(vnode) {\n  const props = vnode.componentOptions && vnode.componentOptions.propsData;\n  if (props) {\n    if (props.attribute) {\n      return props.attribute;\n    }\n    if (Array.isArray(props.attributes)) {\n      return props.attributes[0];\n    }\n  }\n\n  const children =\n    vnode.componentOptions && vnode.componentOptions.children\n      ? vnode.componentOptions.children\n      : vnode.children;\n\n  if (Array.isArray(children)) {\n    // return first child with a truthy attribute\n    return children.reduce(\n      (acc, curr) => acc || getWidgetAttribute(curr),\n      undefined\n    );\n  }\n\n  return undefined;\n}\n\nexport default {\n  name: 'AisExperimentalDynamicWidgets',\n  mixins: [\n    createWidgetMixin({ connector: EXPERIMENTAL_connectDynamicWidgets }),\n    createSuitMixin({ name: 'DynamicWidgets' }),\n  ],\n  props: {\n    transformItems: {\n      type: Function,\n      default: undefined,\n    },\n  },\n  render(createElement) {\n    const components = new Map();\n    (this.$slots.default || []).forEach(vnode => {\n      const attribute = getWidgetAttribute(vnode);\n      if (attribute) {\n        components.set(\n          attribute,\n          createElement(\n            'div',\n            { key: attribute, class: [this.suit('widget')] },\n            [vnode]\n          )\n        );\n      }\n    });\n\n    // by default, render everything, but hidden so that the routing doesn't disappear\n    if (!this.state) {\n      const allComponents = [];\n      components.forEach(component => allComponents.push(component));\n\n      return createElement(\n        'div',\n        { attrs: { hidden: true }, class: [this.suit()] },\n        allComponents\n      );\n    }\n\n    return createElement(\n      'div',\n      { class: [this.suit()] },\n      this.state.attributesToRender.map(attribute => components.get(attribute))\n    );\n  },\n  computed: {\n    widgetParams() {\n      return {\n        transformItems: this.transformItems,\n        // we do not pass \"widgets\" to the connector, since Vue is in charge of rendering\n        widgets: [],\n      };\n    },\n  },\n};\n"],"names":["name","mixins","createWidgetMixin","connector","EXPERIMENTAL_connectDynamicWidgets","createSuitMixin","props","transformItems","type","Function","default","undefined","render","createElement","components","Map","this","$slots","forEach","vnode","const","attribute","getWidgetAttribute","componentOptions","propsData","Array","isArray","attributes","children","reduce","acc","curr","set","key","class","suit","state","allComponents","component","push","attrs","hidden","attributesToRender","map","get","computed","widgetParams","widgets"],"mappings":"8MA+Be,CACbA,KAAM,gCACNC,OAAQ,CACNC,EAAkB,CAAEC,UAAWC,IAC/BC,EAAgB,CAAEL,KAAM,oBAE1BM,MAAO,CACLC,eAAgB,CACdC,KAAMC,SACNC,aAASC,IAGbC,gBAAOC,cACCC,EAAa,IAAIC,IAgBvB,IAfCC,KAAKC,OAAOP,SAAW,IAAIQ,iBAAQC,GAClCC,IAAMC,EA1CZ,SAASC,EAAmBH,GAC1BC,IAAMd,EAAQa,EAAMI,kBAAoBJ,EAAMI,iBAAiBC,UAC/D,GAAIlB,EAAO,CACT,GAAIA,EAAMe,UACR,OAAOf,EAAMe,UAEf,GAAII,MAAMC,QAAQpB,EAAMqB,YACtB,OAAOrB,EAAMqB,WAAW,GAI5BP,IAAMQ,EACJT,EAAMI,kBAAoBJ,EAAMI,iBAAiBK,SAC7CT,EAAMI,iBAAiBK,SACvBT,EAAMS,SAEZ,GAAIH,MAAMC,QAAQE,GAEhB,OAAOA,EAASC,gBACbC,EAAKC,UAASD,GAAOR,EAAmBS,SACzCpB,GAsBkBW,CAAmBH,GACjCE,GACFP,EAAWkB,IACTX,EACAR,EACE,MACA,CAAEoB,IAAKZ,EAAWa,MAAO,CAAClB,EAAKmB,KAAK,YACpC,CAAChB,QAOJH,KAAKoB,MAAO,CACfhB,IAAMiB,EAAgB,GAGtB,OAFAvB,EAAWI,iBAAQoB,UAAaD,EAAcE,KAAKD,KAE5CzB,EACL,MACA,CAAE2B,MAAO,CAAEC,QAAQ,GAAQP,MAAO,CAAClB,KAAKmB,SACxCE,GAIJ,OAAOxB,EACL,MACA,CAAEqB,MAAO,CAAClB,KAAKmB,SACfnB,KAAKoB,MAAMM,mBAAmBC,aAAItB,UAAaP,EAAW8B,IAAIvB,OAGlEwB,SAAU,CACRC,wBACE,MAAO,CACLvC,eAAgBS,KAAKT,eAErBwC,QAAS"}