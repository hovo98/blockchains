{"map":"{\"version\":3,\"sources\":[\"js/whitepaper.e3c8d6f5.js\"],\"names\":[\"window\",\"push\",\"1b22\",\"module\",\"exports\",\"__webpack_require__\",\"1c0f\",\"__webpack_exports__\",\"552c\",\"render\",\"_vm\",\"this\",\"_h\",\"$createElement\",\"_c\",\"_self\",\"staticClass\",\"_t\",\"staticRenderFns\",\"NiPageMenuvue_type_script_lang_js_\",\"name\",\"common_NiPageMenuvue_type_script_lang_js_\",\"componentNormalizer\",\"component\",\"Object\",\"a439\",\"r\",\"attrs\",\"toc-page\",\"page-title\",\"slot\",\"$route\",\"params\",\"locale\",\"NavContents\",\"NiPageMenu\",\"whitepapervue_type_template_id_f496633e_render\",\"_m\",\"whitepapervue_type_template_id_f496633e_staticRenderFns\",\"id\",\"_v\",\"href\",\"src\",\"alt\",\"pre\",\"v-pre\",\"script\",\"whitepaper\",\"whitepaper_kovue_type_template_id_22687d5e_render\",\"whitepaper_kovue_type_template_id_22687d5e_staticRenderFns\",\"whitepaper_ko_script\",\"whitepaper_ko_component\",\"whitepaper_ko\",\"whitepaper_ptvue_type_template_id_e84d265c_render\",\"whitepaper_ptvue_type_template_id_e84d265c_staticRenderFns\",\"whitepaper_pt_script\",\"whitepaper_pt_component\",\"whitepaper_pt\",\"whitepaper_zh_CNvue_type_template_id_5ba9659e_render\",\"whitepaper_zh_CNvue_type_template_id_5ba9659e_staticRenderFns\",\"whitepaper_zh_CN_script\",\"whitepaper_zh_CN_component\",\"whitepaper_zh_CN\",\"TocPage\",\"ResourcesWhitepapervue_type_script_lang_js_\",\"metaInfo\",\"title\",\"components\",\"PageMenu\",\"TextEnUs\",\"TextKo\",\"TextPt\",\"TextZhCn\",\"views_ResourcesWhitepapervue_type_script_lang_js_\",\"ResourcesWhitepaper_component\"],\"mappings\":\"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\"}","code":"(window[\"webpackJsonp\"]=window[\"webpackJsonp\"]||[]).push([[\"whitepaper\"],{\"1b22\":function(e,a,o){},\"1c0f\":function(e,a,o){\"use strict\";o(\"1b22\")},\"552c\":function(e,a,o){\"use strict\";var t=function(){var e=this,a=e.$createElement,o=e._self._c||a;return o(\"div\",{staticClass:\"ni-page-menu\"},[e._t(\"default\")],2)},r=[],n={name:\"ni-page-header-menu\"},s=n,i=(o(\"1c0f\"),o(\"2877\")),d=Object(i[\"a\"])(s,t,r,!1,null,null,null);a[\"a\"]=d.exports},a439:function(e,a,o){\"use strict\";o.r(a);var t=function(){var e=this,a=e.$createElement,o=e._self._c||a;return o(\"toc-page\",{attrs:{\"toc-page\":\"whitepaper\",\"page-title\":\"Cosmos Whitepaper\"}},[o(\"nav-contents\",{attrs:{slot:\"nav\",\"toc-page\":\"whitepaper\"},slot:\"nav\"}),\"ko\"===e.$route.params.locale?o(\"text-ko\"):\"pt\"===e.$route.params.locale?o(\"text-pt\"):\"zh-CN\"===e.$route.params.locale?o(\"text-zh-cn\"):o(\"text-en-us\")],1)},r=[],n=o(\"61b8\"),s=o(\"552c\"),i=function(){var e=this,a=e.$createElement;e._self._c;return e._m(0)},d=[function(){var e=this,a=e.$createElement,o=e._self._c||a;return o(\"section\",[o(\"h1\",{attrs:{id:\"cosmos\"}},[e._v(\"Cosmos\")]),o(\"p\",[e._v(\"A Network of Distributed Ledgers\")]),o(\"p\",[e._v(\"Jae Kwon \"),o(\"a\",{attrs:{href:\"mailto:jae@tendermint.com\"}},[e._v(\"jae@tendermint.com\")]),o(\"br\"),e._v(\"\\nEthan Buchman \"),o(\"a\",{attrs:{href:\"mailto:ethan@tendermint.com\"}},[e._v(\"ethan@tendermint.com\")])]),o(\"p\",[e._v(\"For discussions, \"),o(\"a\",{attrs:{href:\"https://discord.gg/cosmosnetwork\"}},[e._v(\"join our developer chat\")]),e._v(\"!\")]),o(\"p\",[o(\"em\",[e._v(\"NOTE: If you can read this on GitHub, then we’re still actively developing this\\ndocument. Please check regularly for updates!\")])]),o(\"p\"),o(\"div\",{staticClass:\"minimal-toc\"},[o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#introduction\"}},[e._v(\"Introduction\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#tendermint\"}},[e._v(\"Tendermint\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#validators\"}},[e._v(\"Validators\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#consensus\"}},[e._v(\"Consensus\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#light-clients\"}},[e._v(\"Light Clients\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#preventing-attacks\"}},[e._v(\"Preventing Attacks\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#abci\"}},[e._v(\"ABCI\")])])])]),o(\"li\",[o(\"a\",{attrs:{href:\"#cosmos-overview\"}},[e._v(\"Cosmos Overview\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#tendermint-bft\"}},[e._v(\"Tendermint BFT\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#governance\"}},[e._v(\"Governance\")])])])]),o(\"li\",[o(\"a\",{attrs:{href:\"#the-hub-and-zones\"}},[e._v(\"The Hub and Zones\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#the-hub\"}},[e._v(\"The Hub\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#the-zones\"}},[e._v(\"The Zones\")])])])]),o(\"li\",[o(\"a\",{attrs:{href:\"#inter-blockchain-communication-ibc\"}},[e._v(\"Inter-blockchain Communication (IBC)\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#use-cases\"}},[e._v(\"Use Cases\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#distributed-exchange\"}},[e._v(\"Distributed Exchange\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#bridging-to-other-cryptocurrencies\"}},[e._v(\"Bridging to Other Cryptocurrencies\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#sending-tokens-to-the-cosmos-hub\"}},[e._v(\"Sending Tokens to the Cosmos Hub\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#withdrawing-tokens-from-cosmos-hub\"}},[e._v(\"Withdrawing Tokens from Cosmos Hub\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#total-accountability-of-bridge-zones\"}},[e._v(\"Total Accountability of Bridge Zones\")])])])]),o(\"li\",[o(\"a\",{attrs:{href:\"#ethereum-scaling\"}},[e._v(\"Ethereum Scaling\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#multi-application-integration\"}},[e._v(\"Multi-Application Integration\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#network-partition-mitigation\"}},[e._v(\"Network Partition Mitigation\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#federated-name-resolution-system\"}},[e._v(\"Federated Name Resolution System\")])])])]),o(\"li\",[o(\"a\",{attrs:{href:\"#issuance-and-incentives\"}},[e._v(\"Issuance and Incentives\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#the-atom-token\"}},[e._v(\"The Atom Token\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#fundraiser\"}},[e._v(\"Fundraiser\")])])])]),o(\"li\",[o(\"a\",{attrs:{href:\"#limitations-on-the-number-of-validators\"}},[e._v(\"Limitations on the Number of Validators\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#becoming-a-validator-after-genesis-day\"}},[e._v(\"Becoming a Validator After Genesis Day\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#penalties-for-validators\"}},[e._v(\"Penalties for Validators\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#transaction-fees\"}},[e._v(\"Transaction Fees\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#incentivizing-hackers\"}},[e._v(\"Incentivizing Hackers\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#governance-specification\"}},[e._v(\"Governance Specification\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#parameter-change-proposal\"}},[e._v(\"Parameter Change Proposal\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#bounty-proposal\"}},[e._v(\"Bounty Proposal\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#text-proposal\"}},[e._v(\"Text Proposal\")])])])]),o(\"li\",[o(\"a\",{attrs:{href:\"#roadmap\"}},[e._v(\"Roadmap\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#related-work\"}},[e._v(\"Related Work\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#consensus-systems\"}},[e._v(\"Consensus Systems\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#classic-byzantine-fault-tolerance\"}},[e._v(\"Classic Byzantine Fault Tolerance\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#bitshares-delegated-stake\"}},[e._v(\"BitShares delegated stake\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#stellar\"}},[e._v(\"Stellar\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#bitcoinng\"}},[e._v(\"BitcoinNG\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#casper\"}},[e._v(\"Casper\")])])])]),o(\"li\",[o(\"a\",{attrs:{href:\"#horizontal-scaling\"}},[e._v(\"Horizontal Scaling\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#interledger-protocol\"}},[e._v(\"Interledger Protocol\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#sidechains\"}},[e._v(\"Sidechains\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#ethereum-scalability-efforts\"}},[e._v(\"Ethereum Scalability Efforts\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#cosmos-vs-ethereum-20-mauve\"}},[e._v(\"Cosmos vs Ethereum 2.0 Mauve\")])])])])])]),o(\"li\",[o(\"a\",{attrs:{href:\"#general-scaling\"}},[e._v(\"General Scaling\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#lightning-network\"}},[e._v(\"Lightning Network\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#segregated-witness\"}},[e._v(\"Segregated Witness\")])])])])])]),o(\"li\",[o(\"a\",{attrs:{href:\"#appendix\"}},[e._v(\"Appendix\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#fork-accountability\"}},[e._v(\"Fork Accountability\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#tendermint-consensus\"}},[e._v(\"Tendermint Consensus\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#tendermint-light-clients\"}},[e._v(\"Tendermint Light Clients\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#preventing-long-range-attacks\"}},[e._v(\"Preventing Long Range Attacks\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#overcoming-forks-and-censorship-attacks\"}},[e._v(\"Overcoming Forks and Censorship Attacks\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#abci-specification\"}},[e._v(\"ABCI Specification\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#appendtx\"}},[e._v(\"AppendTx\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#checktx\"}},[e._v(\"CheckTx\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#commit\"}},[e._v(\"Commit\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#query\"}},[e._v(\"Query\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#flush\"}},[e._v(\"Flush\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#info\"}},[e._v(\"Info\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#setoption\"}},[e._v(\"SetOption\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#initchain\"}},[e._v(\"InitChain\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#beginblock\"}},[e._v(\"BeginBlock\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#endblock\"}},[e._v(\"EndBlock\")])])])]),o(\"li\",[o(\"a\",{attrs:{href:\"#ibc-packet-delivery-acknowledgement\"}},[e._v(\"IBC Packet Delivery Acknowledgement\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#merkle-tree-proof-specification\"}},[e._v(\"Merkle Tree & Proof Specification\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#simple-tree\"}},[e._v(\"Simple Tree\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#iavl-tree\"}},[e._v(\"IAVL+ Tree\")])])])]),o(\"li\",[o(\"a\",{attrs:{href:\"#transaction-types\"}},[e._v(\"Transaction Types\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#ibcblockcommittx\"}},[e._v(\"IBCBlockCommitTx\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#ibcpackettx\"}},[e._v(\"IBCPacketTx\")])])])])])]),o(\"li\",[o(\"a\",{attrs:{href:\"#acknowledgements\"}},[e._v(\"Acknowledgements\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#citations\"}},[e._v(\"Citations\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#unsorted-links\"}},[e._v(\"Unsorted links\")])])])])])]),o(\"p\"),o(\"h2\",{attrs:{id:\"introduction\"}},[e._v(\"Introduction\")]),o(\"p\",[e._v(\"The combined success of the open-source ecosystem, decentralized\\nfile-sharing, and public cryptocurrencies has inspired an understanding that\\ndecentralized internet protocols can be used to radically improve socio-economic\\ninfrastructure. We have seen specialized blockchain applications like Bitcoin\\n\"),o(\"a\",{attrs:{href:\"https://bitcoin.org/bitcoin.pdf\"}},[e._v(\"[1]\")]),e._v(\" (a cryptocurrency), Zerocash \"),o(\"a\",{attrs:{href:\"http://zerocash-project.org/paper\"}},[e._v(\"[2]\")]),e._v(\" (a cryptocurrency for\\nprivacy), and generalized smart contract platforms such as Ethereum \"),o(\"a\",{attrs:{href:\"https://github.com/ethereum/wiki/wiki/White-Paper\"}},[e._v(\"[3]\")]),e._v(\",\\nwith countless distributed applications for the Ethereum Virtual Machine (EVM) such as Augur (a prediction\\nmarket) and TheDAO \"),o(\"a\",{attrs:{href:\"https://download.slock.it/public/DAO/WhitePaper.pdf\"}},[e._v(\"[4]\")]),e._v(\" (an investment club).\")]),o(\"p\",[e._v(\"To date, however, these blockchains have suffered from a number of drawbacks,\\nincluding their gross energy inefficiency, poor or limited performance, and\\nimmature governance mechanisms. Proposals to scale\\nBitcoin’s transaction throughput, such as Segregated-Witness \"),o(\"a\",{attrs:{href:\"https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki\"}},[e._v(\"[5]\")]),e._v(\" and\\nBitcoinNG \"),o(\"a\",{attrs:{href:\"https://arxiv.org/pdf/1510.02037v2.pdf\"}},[e._v(\"[6]\")]),e._v(\", are vertical scaling solutions that remain\\nlimited by the capacity of a single physical machine, in order to ensure the\\nproperty of complete auditability. The Lightning Network \"),o(\"a\",{attrs:{href:\"https://lightning.network/lightning-network-paper-DRAFT-0.5.pdf\"}},[e._v(\"[7]\")]),e._v(\" can help\\nscale Bitcoin transaction volume by leaving some transactions off the ledger\\ncompletely, and is well suited for micropayments and privacy-preserving payment\\nrails, but may not be suitable for more generalized scaling needs.\")]),o(\"p\",[e._v(\"An ideal solution is one that allows multiple parallel blockchains to\\ninteroperate while retaining their security properties. This has proven\\ndifficult, if not impossible, with proof-of-work. Merged mining, for instance,\\nallows the work done to secure a parent chain to be reused on a child chain,\\nbut transactions must still be validated, in order, by each node, and a\\nmerge-mined blockchain is vulnerable to attack if a majority of the hashing\\npower on the parent is not actively merge-mining the child. An academic review\\nof \"),o(\"a\",{attrs:{href:\"http://vukolic.com/iNetSec_2015.pdf\"}},[e._v(\"alternative blockchain network\\narchitectures\")]),e._v(\" is provided for additional\\ncontext, and we provide summaries of other proposals and their drawbacks in\\n\"),o(\"a\",{attrs:{href:\"#related-work\"}},[e._v(\"Related Work\")]),e._v(\".\")]),o(\"p\",[e._v(\"Here we present Cosmos, a novel blockchain network architecture that addresses all\\nof these problems. Cosmos is a network of many independent blockchains, called\\nzones. The zones are powered by Tendermint BFT \"),o(\"a\",{attrs:{href:\"https://github.com/tendermint/tendermint/wiki\"}},[e._v(\"[8]\")]),e._v(\", which provides a\\nhigh-performance, consistent, secure\\n\"),o(\"a\",{attrs:{href:\"https://blog.cosmos.network/tendermint-vs-pbft-12e9f294c9ab\"}},[e._v(\"PBFT-like\")]),e._v(\" consensus engine,\\nwhere strict \"),o(\"a\",{attrs:{href:\"#fork-accountability\"}},[e._v(\"fork-accountability\")]),e._v(\" guarantees hold over\\nthe behaviour of malicious actors. The Tendermint BFT consensus algorithm is\\nwell suited for scaling public proof-of-stake blockchains.\")]),o(\"p\",[e._v(\"The first zone on Cosmos is called the Cosmos Hub. The Cosmos Hub is a\\nmulti-asset proof-of-stake cryptocurrency with a simple governance mechanism\\nwhich enables the network to adapt and upgrade. In addition, the Cosmos Hub can be\\nextended by connecting other zones.\")]),o(\"p\",[e._v(\"The hub and zones of the Cosmos network communicate with each other via an\\ninter-blockchain communication (IBC) protocol, a kind of virtual UDP or TCP for\\nblockchains. Tokens can be transferred from one zone to another securely and\\nquickly without the need for exchange liquidity between zones. Instead, all\\ninter-zone token transfers go through the Cosmos Hub, which keeps track of the\\ntotal amount of tokens held by each zone. The hub isolates each zone from the\\nfailure of other zones. Because anyone can connect a new zone to the Cosmos Hub,\\nzones allow for future-compatibility with new blockchain innovations.\")]),o(\"h2\",{attrs:{id:\"tendermint\"}},[e._v(\"Tendermint\")]),o(\"p\",[e._v(\"In this section we describe the Tendermint consensus protocol and the interface\\nused to build applications with it. For more details, see the \"),o(\"a\",{attrs:{href:\"#appendix\"}},[e._v(\"appendix\")]),e._v(\".\")]),o(\"h3\",{attrs:{id:\"validators\"}},[e._v(\"Validators\")]),o(\"p\",[e._v(\"In classical Byzantine fault-tolerant (BFT) algorithms, each node has the same\\nweight. In Tendermint, nodes have a non-negative amount of \"),o(\"em\",[e._v(\"voting power\")]),e._v(\", and\\nnodes that have positive voting power are called \"),o(\"em\",[e._v(\"validators\")]),e._v(\". Validators\\nparticipate in the consensus protocol by broadcasting cryptographic signatures,\\nor \"),o(\"em\",[e._v(\"votes\")]),e._v(\", to agree upon the next block.\")]),o(\"p\",[e._v(\"Validators’ voting powers are determined at genesis, or are changed\\ndeterministically by the blockchain, depending on the application. For example,\\nin a proof-of-stake application such as the Cosmos Hub, the voting power may be\\ndetermined by the amount of staking tokens bonded as collateral.\")]),o(\"p\",[o(\"em\",[e._v(\"NOTE: Fractions like ⅔ and ⅓ refer to fractions of the total voting power,\\nnever the total number of validators, unless all the validators have equal\\nweight. >⅔ means “more than ⅔”, ≥⅓ means “at least ⅓”.\")])]),o(\"h3\",{attrs:{id:\"consensus\"}},[e._v(\"Consensus\")]),o(\"p\",[e._v(\"Tendermint is a partially synchronous BFT consensus protocol derived from the\\nDLS consensus algorithm \"),o(\"a\",{attrs:{href:\"http://groups.csail.mit.edu/tds/papers/Lynch/jacm88.pdf\"}},[e._v(\"[20]\")]),e._v(\". Tendermint is notable for its simplicity,\\nperformance, and \"),o(\"a\",{attrs:{href:\"#fork-accountability\"}},[e._v(\"fork-accountability\")]),e._v(\". The protocol\\nrequires a fixed known set of validators, where each validator is identified by\\ntheir public key. Validators attempt to come to consensus on one block at a time,\\nwhere a block is a list of transactions. Voting for consensus on a block proceeds in\\nrounds. Each round has a round-leader, or proposer, who proposes a block. The\\nvalidators then vote, in stages, on whether to accept the proposed block\\nor move on to the next round. The proposer for a round is chosen\\ndeterministically from the ordered list of validators, in proportion to their\\nvoting power.\")]),o(\"p\",[e._v(\"The full details of the protocol are described\\n\"),o(\"a\",{attrs:{href:\"https://github.com/tendermint/tendermint/wiki/Byzantine-Consensus-Algorithm\"}},[e._v(\"here\")]),e._v(\".\")]),o(\"p\",[e._v(\"Tendermint’s security derives from its use of optimal Byzantine fault-tolerance\\nvia super-majority (>⅔) voting and a locking mechanism. Together, they ensure\\nthat:\")]),o(\"ul\",[o(\"li\",[e._v(\"≥⅓ voting power must be Byzantine to cause a violation of safety, where more\\nthan two values are committed.\")]),o(\"li\",[e._v(\"if any set of validators ever succeeds in violating safety, or even attempts\\nto do so, they can be identified by the protocol. This includes both voting\\nfor conflicting blocks and broadcasting unjustified votes.\")])]),o(\"p\",[e._v(\"Despite its strong guarantees, Tendermint provides exceptional performance. In\\nbenchmarks of 64 nodes distributed across 7 datacenters on 5 continents, on\\ncommodity cloud instances, Tendermint consensus can process thousands of\\ntransactions per second, with commit latencies on the order of one to two\\nseconds. Notably, performance of well over a thousand transactions per second\\nis maintained even in harsh adversarial conditions, with validators crashing or\\nbroadcasting maliciously crafted votes. See the figure below for details.\")]),o(\"p\",[o(\"img\",{attrs:{src:\"https://raw.githubusercontent.com/gnuclear/atom-whitepaper/master/images/tendermint_throughput_blocksize.png\",alt:\"Figure of Tendermint throughput performance\"}})]),o(\"h3\",{attrs:{id:\"light-clients\"}},[e._v(\"Light Clients\")]),o(\"p\",[e._v(\"A major benefit of Tendermint’s consensus algorithm is simplified light client\\nsecurity, making it an ideal candidate for mobile and internet-of-things use\\ncases. While a Bitcoin light client must sync chains of block headers and find\\nthe one with the most proof of work, Tendermint light clients need only to keep\\nup with changes to the validator set, and then verify the >⅔ PreCommits\\nin the latest block to determine the latest state.\")]),o(\"p\",[e._v(\"Succinct light client proofs also enable \"),o(\"a\",{attrs:{href:\"#inter-blockchain-communication-ibc\"}},[e._v(\"inter-blockchain\\ncommunication\")]),e._v(\".\")]),o(\"h3\",{attrs:{id:\"preventing-attacks\"}},[e._v(\"Preventing Attacks\")]),o(\"p\",[e._v(\"Tendermint has protective measures for preventing certain notable\\nattacks, like \"),o(\"a\",{attrs:{href:\"#preventing-long-range-attacks\"}},[e._v(\"long-range-nothing-at-stake double\\nspends\")]),e._v(\" and\\n\"),o(\"a\",{attrs:{href:\"#overcoming-forks-and-censorship-attacks\"}},[e._v(\"censorship\")]),e._v(\". These are discussed more\\nfully in the \"),o(\"a\",{attrs:{href:\"#appendix\"}},[e._v(\"appendix\")]),e._v(\".\")]),o(\"h3\",{attrs:{id:\"abci\"}},[e._v(\"ABCI\")]),o(\"p\",[e._v(\"The Tendermint consensus algorithm is implemented in a program called Tendermint\\nCore. Tendermint BFT is an application-agnostic “consensus engine” that can\\nturn any deterministic blackbox application into a distributedly replicated\\nblockchain. Tendermint BFT connects to blockchain\\napplications via the Application Blockchain Interface (ABCI) \"),o(\"a\",{attrs:{href:\"https://github.com/tendermint/abci\"}},[e._v(\"[17]\")]),e._v(\". ABCI\\nis an interface that defines the boundary between the replication engine (the\\nblockchain), and the state machine (the application). By using a socket protocol,\\nwe enable a consensus engine running in one process to manage an application\\nstate running in another. Thus, the ABCI allows for blockchain applications to be\\nprogrammed in any language, not just the programming language that the consensus\\nengine is written in. Additionally, the ABCI makes it possible to easily swap out\\nthe consensus layer of any existing blockchain stack.\")]),o(\"p\",[e._v(\"We draw an analogy with the well-known cryptocurrency Bitcoin. Bitcoin is a\\ncryptocurrency blockchain where each node maintains a fully audited Unspent\\nTransaction Output (UTXO) database. If one wanted to create a Bitcoin-like\\nsystem on top of ABCI, Tendermint BFT would be responsible for\")]),o(\"ul\",[o(\"li\",[e._v(\"Sharing blocks and transactions between nodes\")]),o(\"li\",[e._v(\"Establishing a canonical/immutable order of transactions (the blockchain)\")])]),o(\"p\",[e._v(\"Meanwhile, the ABCI application would be responsible for\")]),o(\"ul\",[o(\"li\",[e._v(\"Maintaining the UTXO database\")]),o(\"li\",[e._v(\"Validating cryptographic signatures of transactions\")]),o(\"li\",[e._v(\"Preventing transactions from spending non-existent funds\")]),o(\"li\",[e._v(\"Allowing clients to query the UTXO database\")])]),o(\"p\",[e._v(\"Tendermint is able to decompose the blockchain design by offering a very simple\\nAPI between the application process and consensus process.\")]),o(\"h2\",{attrs:{id:\"cosmos-overview\"}},[e._v(\"Cosmos Overview\")]),o(\"p\",[e._v(\"Cosmos is a network of independent parallel blockchains that are each powered by\\nclassical BFT consensus algorithms like Tendermint\\n\"),o(\"a\",{attrs:{href:\"http://github.com/tendermint/tendermint\"}},[e._v(\"1\")]),e._v(\".\")]),o(\"p\",[e._v(\"The first blockchain in this network will be the Cosmos Hub. The Cosmos Hub\\nconnects to many other blockchains (or \"),o(\"em\",[e._v(\"zones\")]),e._v(\") via a novel inter-blockchain\\ncommunication protocol. The Cosmos Hub tracks numerous token types and keeps\\nrecord of the total number of tokens in each connected zone. Tokens can be\\ntransferred from one zone to another securely and quickly without the need for\\na liquid exchange between zones, because all inter-zone coin transfers go\\nthrough the Cosmos Hub.\")]),o(\"p\",[e._v(\"This architecture solves many problems that the blockchain space faces today,\\nsuch as application interoperability, scalability, and seamless upgradability.\\nFor example, zones derived from Bitcoind, Go-Ethereum, CryptoNote, ZCash, or any\\nblockchain system can be plugged into the Cosmos Hub. These zones allow Cosmos\\nto scale infinitely to meet global transaction demand. Zones are also a great\\nfit for a distributed exchange, which will be supported as well.\")]),o(\"p\",[e._v(\"Cosmos is not just a single distributed ledger, and the Cosmos Hub isn’t a\\nwalled garden or the center of its universe. We are designing a protocol for\\nan open network of distributed ledgers that can serve as a new foundation for\\nfuture financial systems, based on principles of cryptography, sound economics,\\nconsensus theory, transparency, and accountability.\")]),o(\"h3\",{attrs:{id:\"tendermint-bft\"}},[e._v(\"Tendermint BFT\")]),o(\"p\",[e._v(\"The Cosmos Hub is the first public blockchain in the Cosmos Network, powered by the\\nTendermint BFT consensus algorithm. The Tendermint open-source project was\\nborn in 2014 to address the speed, scalability, and environmental issues of\\nBitcoin’s proof-of-work consensus algorithm. By using and improving upon\\nproven BFT algorithms developed at MIT in 1988 \"),o(\"a\",{attrs:{href:\"http://groups.csail.mit.edu/tds/papers/Lynch/jacm88.pdf\"}},[e._v(\"[20]\")]),e._v(\", the Tendermint\\nteam was the first to conceptually demonstrate a proof-of-stake cryptocurrency\\nthat addresses the nothing-at-stake problem suffered by first-generation\\nproof-of-stake cryptocurrencies such as NXT and BitShares1.0.\")]),o(\"p\",[e._v(\"Today, practically all Bitcoin mobile wallets use trusted servers to provide\\nthem with transaction verification. This is because proof-of-work requires\\nwaiting for many confirmations before a transaction can be considered\\nirreversibly committed. Double-spend attacks have already been demonstrated on\\nservices like CoinBase.\")]),o(\"p\",[e._v(\"Unlike other blockchain consensus systems, Tendermint offers instant and\\nprovably secure mobile-client payment verification. Since the Tendermint is\\ndesigned to never fork at all, mobile wallets can receive instant transaction\\nconfirmation, which makes trustless and practical payments a reality on\\nsmartphones. This has significant ramifications for Internet of Things applications as well.\")]),o(\"p\",[e._v(\"Validators in Cosmos have a similar role to Bitcoin miners, but instead use\\ncryptographic signatures to vote. Validators are secure, dedicated machines\\nthat are responsible for committing blocks. Non-validators can delegate their\\nstaking tokens (called “atoms”) to any validator to earn a portion of block fees\\nand atom rewards, but they incur the risk of getting punished (slashed) if the\\ndelegate validator gets hacked or violates the protocol. The proven safety\\nguarantees of Tendermint BFT consensus, and the collateral deposit of\\nstakeholders–validators and delegators–provide provable, quantifiable\\nsecurity for nodes and light clients.\")]),o(\"h3\",{attrs:{id:\"governance\"}},[e._v(\"Governance\")]),o(\"p\",[e._v(\"Distributed public ledgers should have a constitution and a governance system.\\nBitcoin relies on the Bitcoin Foundation and mining to\\ncoordinate upgrades, but this is a slow process. Ethereum split into ETH and\\nETC after hard-forking to address TheDAO hack, largely because there was no\\nprior social contract nor mechanism for making such decisions.\")]),o(\"p\",[e._v(\"Validators and delegators on the Cosmos Hub can vote on proposals that can\\nchange preset parameters of the system automatically (such as the block gas\\nlimit), coordinate upgrades, as well as vote on amendments to the human-readable\\nconstitution that govern the policies of the Cosmos Hub. The constitution\\nallows for cohesion among the stakeholders on issues such as theft\\nand bugs (such as TheDAO incident), allowing for quicker and cleaner resolution.\")]),o(\"p\",[e._v(\"Each zone can also have their own constitution and governance mechanism as well.\\nFor example, the Cosmos Hub could have a constitution that enforces immutability\\nat the Hub (no roll-backs, save for bugs of the Cosmos Hub node implementation),\\nwhile each zone can set their own policies regarding roll-backs.\")]),o(\"p\",[e._v(\"By enabling interoperability among differing policy zones, the Cosmos network\\ngives its users ultimate freedom and potential for permissionless\\nexperimentation.\")]),o(\"h2\",{attrs:{id:\"the-hub-and-zones\"}},[e._v(\"The Hub and Zones\")]),o(\"p\",[e._v(\"Here we describe a novel model of decentralization and scalability. Cosmos is a\\nnetwork of many blockchains powered by Tendermint. While existing proposals aim\\nto create a “single blockchain” with total global transaction ordering, Cosmos\\npermits many blockchains to run concurrently with one another while retaining\\ninteroperability.\")]),o(\"p\",[e._v(\"At the basis, the Cosmos Hub manages many independent blockchains called “zones”\\n(sometimes referred to as “shards”, in reference to the database scaling\\ntechnique known as “sharding”). A constant stream of recent block commits from\\nzones posted on the Hub allows the Hub to keep up with the state of each zone.\\nLikewise, each zone keeps up with the state of the Hub (but zones do not keep up\\nwith each other except indirectly through the Hub). Packets of information are\\nthen communicated from one zone to another by posting Merkle-proofs as evidence\\nthat the information was sent and received. This mechanism is called\\ninter-blockchain communication, or IBC for short.\")]),o(\"p\",[o(\"img\",{attrs:{src:\"https://raw.githubusercontent.com/gnuclear/atom-whitepaper/master/images/hub_and_zones.png\",alt:\"Figure of hub and zonesacknowledgement\"}})]),o(\"p\",[e._v(\"Any of the zones can themselves be hubs to form an acyclic graph, but\\nfor the sake of clarity we will only describe the simple configuration where\\nthere is only one hub, and many non-hub zones.\")]),o(\"h3\",{attrs:{id:\"the-hub\"}},[e._v(\"The Hub\")]),o(\"p\",[e._v(\"The Cosmos Hub is a blockchain that hosts a multi-asset distributed ledger,\\nwhere tokens can be held by individual users or by zones themselves. These\\ntokens can be moved from one zone to another in a special IBC packet called a\\n“coin packet”. The hub is responsible for preserving the global invariance of\\nthe total amount of each token across the zones. IBC coin packet transactions\\nmust be committed by the sender, hub, and receiver blockchains.\")]),o(\"p\",[e._v(\"Since the Cosmos Hub acts as the central ledger for the whole\\nsystem, the security of the Hub is of paramount importance. While each\\nzone may be a Tendermint blockchain that is secured by as few as 4 (or even\\nless if BFT consensus is not needed), the Hub must be secured by a globally\\ndecentralized set of validators that can withstand the most severe attack\\nscenarios, such as a continental network partition or a nation-state sponsored\\nattack.\")]),o(\"h3\",{attrs:{id:\"the-zones\"}},[e._v(\"The Zones\")]),o(\"p\",[e._v(\"A Cosmos zone is an independent blockchain that exchanges IBC messages with the\\nHub. From the Hub’s perspective, a zone is a multi-asset dynamic-membership\\nmulti-signature account that can send and receive tokens using IBC packets. Like\\na cryptocurrency account, a zone cannot transfer more tokens than it has, but\\ncan receive tokens from others who have them. A zone may be designated as an\\n“source” of one or more token types, granting it the power to inflate that token\\nsupply.\")]),o(\"p\",[e._v(\"Atoms of the Cosmos Hub may be staked by validators of a zone connected to the\\nHub. While double-spend attacks on these zones would result in the slashing of\\natoms with Tendermint’s fork-accountability, a zone where >⅔ of the voting power\\nare Byzantine can commit invalid state. The Cosmos Hub does not verify or\\nexecute transactions committed on other zones, so it is the responsibility of\\nusers to send tokens to zones that they trust. In the future, the Cosmos Hub’s\\ngovernance system may pass Hub improvement proposals that account for zone\\nfailures. For example, outbound token transfers from some (or all) zones may be\\nthrottled to allow for the emergency circuit-breaking of zones (a temporary halt\\nof token transfers) when an attack is detected.\")]),o(\"h2\",{attrs:{id:\"inter-blockchain-communication-ibc\"}},[e._v(\"Inter-blockchain Communication (IBC)\")]),o(\"p\",[e._v(\"Now we look at how the Hub and zones communicate with each other. For example, if\\nthere are three blockchains, “Zone1”, “Zone2”, and “Hub”, and we wish for\\n“Zone1” to produce a packet destined for “Zone2” going through “Hub”. To move a\\npacket from one blockchain to another, a proof is posted on the\\nreceiving chain. The proof states that the sending chain published a packet for the alleged\\ndestination. For the receiving chain to check this proof, it must be able keep\\nup with the sender’s block headers. This mechanism is similar to that used by\\nsidechains, which requires two interacting chains to be aware of one another via a\\nbidirectional stream of proof-of-existence datagrams (transactions).\")]),o(\"p\",[e._v(\"The IBC protocol can naturally be defined using two types of transactions: an\\n\"),o(\"code\",{pre:!0},[e._v(\"IBCBlockCommitTx\")]),e._v(\" transaction, which allows a blockchain to prove to any\\nobserver of its most recent block-hash, and an \"),o(\"code\",{pre:!0},[e._v(\"IBCPacketTx\")]),e._v(\" transaction, which\\nallows a blockchain to prove to any observer that the given packet was indeed\\npublished by the sender’s application, via a Merkle-proof to the recent\\nblock-hash.\")]),o(\"p\",[e._v(\"By splitting the IBC mechanics into two separate transactions, we allow the\\nnative fee market-mechanism of the receiving chain to determine which packets\\nget committed (i.e. acknowledged), while allowing for complete freedom on the\\nsending chain as to how many outbound packets are allowed.\")]),o(\"p\",[o(\"img\",{attrs:{src:\"https://raw.githubusercontent.com/gnuclear/atom-whitepaper/master/msc/ibc_without_ack.png\",alt:\"Figure of Zone1, Zone2, and Hub IBC withoutacknowledgement\"}})]),o(\"p\",[e._v(\"In the example above, in order to update the block-hash of\\n“Zone1” on “Hub” (or of “Hub” on “Zone2”), an \"),o(\"code\",{pre:!0},[e._v(\"IBCBlockCommitTx\")]),e._v(\"\\ntransaction must be posted on “Hub” with the block-hash of “Zone1” (or on\\n“Zone2” with the block-hash of “Hub”).\")]),o(\"p\",[o(\"em\",[e._v(\"See \"),o(\"a\",{attrs:{href:\"#ibcblockcommittx\"}},[e._v(\"IBCBlockCommitTx\")]),e._v(\" and \"),o(\"a\",{attrs:{href:\"#ibcpacketcommit\"}},[e._v(\"IBCPacketTx\")]),e._v(\"\\nfor for more information on the two IBC transaction types.\")])]),o(\"h2\",{attrs:{id:\"use-cases\"}},[e._v(\"Use Cases\")]),o(\"h3\",{attrs:{id:\"distributed-exchange\"}},[e._v(\"Distributed Exchange\")]),o(\"p\",[e._v(\"In the same way that Bitcoin is more secure by being a distributed,\\nmass-replicated ledger, we can make exchanges less vulnerable to external and\\ninternal hacks by running it on the blockchain. We call this a distributed\\nexchange.\")]),o(\"p\",[e._v(\"What the cryptocurrency community calls a decentralized exchange today are\\nbased on something called “atomic cross-chain” (AXC) transactions. With an AXC\\ntransaction, two users on two different chains can make two transfer\\ntransactions that are committed together on both ledgers, or none at all (i.e.\\natomically). For example, two users can trade bitcoins for ether (or any two\\ntokens on two different ledgers) using AXC transactions, even though Bitcoin\\nand Ethereum are not connected to each other. The benefit of running an\\nexchange on AXC transactions is that neither users need to trust each other or\\nthe trade-matching service. The downside is that both parties need to be\\nonline for the trade to occur.\")]),o(\"p\",[e._v(\"Another type of decentralized exchange is a mass-replicated distributed\\nexchange that runs on its own blockchain. Users on this kind of exchange can\\nsubmit a limit order and turn their computer off, and the trade can execute\\nwithout the user being online. The blockchain matches and completes the trade\\non behalf of the trader.\")]),o(\"p\",[e._v(\"A centralized exchange can create a deep orderbook of limit orders and thereby\\nattract more traders. Liquidity begets more liquidity in the exchange world,\\nand so there is a strong network effect (or at least a winner-take-most effect)\\nin the exchange business. The current leader for cryptocurrency exchanges\\ntoday is Poloniex with a 24-hour volume of $20M, and in second place is\\nBitfinex with a 24-hour volume of $5M. Given such strong network effects, it\\nis unlikely for AXC-based decentralized exchanges to win volume over the\\ncentralized exchanges. For a decentralized exchange to compete with a\\ncentralized exchange, it would need to support deep orderbooks with limit\\norders. Only a distributed exchange on a blockchain can provide that.\")]),o(\"p\",[e._v(\"Tendermint provides additional benefits of faster transaction commits. By\\nprioritizing fast finality without sacrificing consistency, zones in Cosmos can\\nfinalize transactions fast – for both exchange order transactions as well as\\nIBC token transfers to and from other zones.\")]),o(\"p\",[e._v(\"Given the state of cryptocurrency exchanges today, a great application for\\nCosmos is the distributed exchange (aka the Cosmos DEX). The transaction\\nthroughput capacity as well as commit latency can be comparable to those of\\ncentralized exchanges. Traders can submit limit orders that can be executed\\nwithout both parties having to be online. And with Tendermint, the Cosmos hub,\\nand IBC, traders can move funds in and out of the exchange to and from other\\nzones with speed.\")]),o(\"h3\",{attrs:{id:\"bridging-to-other-cryptocurrencies\"}},[e._v(\"Bridging to Other Cryptocurrencies\")]),o(\"p\",[e._v(\"A privileged zone can act as the source of a bridged token of another\\ncryptocurrency. A bridge is similar to the relationship between a\\nCosmos hub and zone; both must keep up with the latest blocks of the\\nother in order to verify proofs that tokens have moved from one to the other. A\\n“bridge-zone” on the Cosmos network keeps up with the Hub as well as the\\nother cryptocurrency. The indirection through the bridge-zone allows the logic of\\nthe Hub to remain simple and agnostic to other blockchain consensus strategies\\nsuch as Bitcoin’s proof-of-work mining.\")]),o(\"h4\",{attrs:{id:\"sending-tokens-to-the-cosmos-hub\"}},[e._v(\"Sending Tokens to the Cosmos Hub\")]),o(\"p\",[e._v(\"Each bridge-zone validator would run a Tendermint-powered blockchain with a special\\nABCI bridge-app, but also a full-node of the “origin” blockchain.\")]),o(\"p\",[e._v(\"When new blocks are mined on the origin, the bridge-zone validators will come\\nto agreement on committed blocks by signing and sharing their respective local\\nview of the origin’s blockchain tip. When a bridge-zone receives payment on the\\norigin (and sufficient confirmations were agreed to have been seen in the case\\nof a PoW chain such as Ethereum or Bitcoin), a corresponding account is created\\non the bridge-zone with that balance.\")]),o(\"p\",[e._v(\"In the case of Ethereum, the bridge-zone can share the same validator-set as the\\nCosmos Hub. On the Ethereum side (the origin), a bridge-contract would allow\\nether holders to send ether to the bridge-zone by sending it to the bridge-contract\\non Ethereum. Once ether is received by the bridge-contract, the ether cannot be\\nwithdrawn unless an appropriate IBC packet is received by the bridge-contract from\\nthe bridge-zone. The bridge-contract tracks the validator-set of the bridge-zone, which\\nmay be identical to the Cosmos Hub’s validator-set.\")]),o(\"p\",[e._v(\"In the case of Bitcoin, the concept is similar except that instead of a single\\nbridge-contract, each UTXO would be controlled by a threshold multisignature P2SH\\npubscript. Due to the limitations of the P2SH system, the signers cannot be\\nidentical to the Cosmos Hub validator-set.\")]),o(\"h4\",{attrs:{id:\"withdrawing-tokens-from-cosmos-hub\"}},[e._v(\"Withdrawing Tokens from Cosmos Hub\")]),o(\"p\",[e._v(\"Ether on the bridge-zone (“bridged-ether”) can be transferred to and from the\\nHub, and later be destroyed with a transaction that sends it to a particular\\nwithdrawal address on Ethereum. An IBC packet proving that the transaction\\noccurred on the bridge-zone can be posted to the Ethereum bridge-contract to\\nallow the ether to be withdrawn.\")]),o(\"p\",[e._v(\"In the case of Bitcoin, the restricted scripting system makes it difficult to\\nmirror the IBC coin-transfer mechanism. Each UTXO has its own independent\\npubscript, so every UTXO must be migrated to a new UTXO when there is a change\\nin the set of Bitcoin escrow signers. One solution is to compress and\\ndecompress the UTXO-set as necessary to keep the total number of UTXOs down.\")]),o(\"h4\",{attrs:{id:\"total-accountability-of-bridge-zones\"}},[e._v(\"Total Accountability of Bridge Zones\")]),o(\"p\",[e._v(\"The risk of such a bridgeging contract is a rogue validator set. ≥⅓ Byzantine\\nvoting power could cause a fork, withdrawing ether from the bridge-contract on\\nEthereum while keeping the bridged-ether on the bridge-zone. Worse, >⅔ Byzantine\\nvoting power can steal ether outright from those who sent it to the\\nbridge-contract by deviating from the original bridgeging logic of the bridge-zone.\")]),o(\"p\",[e._v(\"It is possible to address these issues by designing the bridge to be totally\\naccountable. For example, all IBC packets, from the hub and the origin, might\\nrequire acknowledgement by the bridge-zone in such a way that all state\\ntransitions of the bridge-zone can be efficiently challenged and verified by\\neither the hub or the origin’s bridge-contract. The Hub and the origin should\\nallow the bridge-zone validators to post collateral, and token transfers out of\\nthe bridge-contract should be delayed (and collateral unbonding period\\nsufficiently long) to allow for any challenges to be made by independent\\nauditors. We leave the design of the specification and implementation of this\\nsystem open as a future Cosmos improvement proposal, to be passed by the Cosmos\\nHub’s governance system.\")]),o(\"h3\",{attrs:{id:\"ethereum-scaling\"}},[e._v(\"Ethereum Scaling\")]),o(\"p\",[e._v(\"Solving the scaling problem is an open issue for Ethereum. Currently,\\nEthereum nodes process every single transaction and also store all the states.\\n\"),o(\"a\",{attrs:{href:\"https://docs.google.com/presentation/d/1CjD0W4l4-CwHKUvfF5Vlps76fKLEC6pIwu1a_kC_YRQ/mobilepresent?slide=id.gd284b9333_0_28\"}},[e._v(\"link\")]),e._v(\".\")]),o(\"p\",[e._v(\"Since Tendermint can commit blocks much faster than Ethereum’s proof-of-work,\\nEVM zones powered by Tendermint consensus and operating on bridged-ether can\\nprovide higher performance to Ethereum blockchains. Additionally, though the\\nCosmos Hub and IBC packet mechanics does not allow for arbitrary contract logic\\nexecution per se, it can be used to coordinate token movements between Ethereum\\ncontracts running on different zones, providing a foundation for token-centric\\nEthereum scaling via sharding.\")]),o(\"h3\",{attrs:{id:\"multi-application-integration\"}},[e._v(\"Multi-Application Integration\")]),o(\"p\",[e._v(\"Cosmos zones run arbitrary application logic, which is defined at the beginning of the\\nzone’s life and can potentially be updated over time by governance. Such flexibility\\nallows Cosmos zones to act as bridges to other cryptocurrencies such as Ethereum or\\nBitcoin, and it also permits derivatives of those blockchains, utilizing the\\nsame codebase but with a different validator set and initial distribution. This\\nallows many existing cryptocurrency frameworks, such as those of Ethereum,\\nZerocash, Bitcoin, CryptoNote and so on, to be used with Tendermint BFT,\\nwhich is a higher performance consensus engine, on a common network, opening tremendous\\nopportunity for interoperability across platforms. Furthermore, as a\\nmulti-asset blockchain, a single transaction may contain multiple inputs and\\noutputs, where each input can be any token type, enabling Cosmos to serve\\ndirectly as a platform for decentralized exchange, though orders are assumed to\\nbe matched via other platforms. Alternatively, a zone can serve as a distributed\\nfault-tolerant exchange (with orderbooks), which can be a strict improvement\\nover existing centralized cryptocurrency exchanges which tend to get hacked over\\ntime.\")]),o(\"p\",[e._v(\"Zones can also serve as blockchain-backed versions of enterprise and government\\nsystems, where pieces of a particular service that are traditionally run by an\\norganization or group of organizations are instead run as a ABCI application on\\na certain zone, which allows it to inherit the security and interoperability of the\\npublic Cosmos network without sacrificing control over the underlying service.\\nThus, Cosmos may offer the best of both worlds for organizations looking to\\nutilize blockchain technology but who are wary of relinquishing control completely\\nto a distributed third party.\")]),o(\"h3\",{attrs:{id:\"network-partition-mitigation\"}},[e._v(\"Network Partition Mitigation\")]),o(\"p\",[e._v(\"Some claim that a major problem with consistency-favouring consensus algorithms\\nlike Tendermint is that any network partition which causes there to be no single\\npartition with >⅔ voting power (e.g. ≥⅓ going offline) will halt consensus\\naltogether. The Cosmos architecture can help mitigate this problem by using a global\\nhub with regional autonomous zones, where voting power for each zone are\\ndistributed based on a common geographic region. For instance, a common\\nparadigm may be for individual cities, or regions, to operate their own zones\\nwhile sharing a common hub (e.g. the Cosmos Hub), enabling municipal activity to\\npersist in the event that the hub halts due to a temporary network partition.\\nNote that this allows real geological, political, and network-topological\\nfeatures to be considered in designing robust federated fault-tolerant systems.\")]),o(\"h3\",{attrs:{id:\"federated-name-resolution-system\"}},[e._v(\"Federated Name Resolution System\")]),o(\"p\",[e._v(\"NameCoin was one of the first blockchains to attempt to solve the\\nname-resolution problem by adapting the Bitcoin blockchain. Unfortunately there\\nhave been several issues with this approach.\")]),o(\"p\",[e._v(\"With Namecoin, we can verify that, for example, \"),o(\"em\",[e._v(\"@satoshi\")]),e._v(\" was registered with a\\nparticular public key at some point in the past, but we wouldn’t know whether\\nthe public key had since been updated recently unless we download all the blocks\\nsince the last update of that name. This is due to the limitation of Bitcoin’s\\nUTXO transaction Merkle-ization model, where only the transactions (but not\\nmutable application state) are Merkle-ized into the block-hash. This lets us\\nprove existence, but not the non-existence of later updates to a name. Thus, we\\ncan’t know for certain the most recent value of a name without trusting a full\\nnode, or incurring significant costs in bandwidth by downloading the whole\\nblockchain.\")]),o(\"p\",[e._v(\"Even if a Merkle-ized search tree were implemented in NameCoin, its dependency\\non proof-of-work makes light client verification problematic. Light clients must\\ndownload a complete copy of the headers for all blocks in the entire blockchain\\n(or at least all the headers since the last update to a name). This means that\\nthe bandwidth requirements scale linearly with the amount of time \"),o(\"a\",{attrs:{href:\"https://en.bitcoin.it/wiki/Thin_Client_Security\"}},[e._v(\"[21]\")]),e._v(\".\\nIn addition, name-changes on a proof-of-work blockchain requires waiting for\\nadditional proof-of-work confirmation blocks, which can take up to an hour on\\nBitcoin.\")]),o(\"p\",[e._v(\"With Tendermint, all we need is the most recent block-hash signed by a quorum of\\nvalidators (by voting power), and a Merkle proof to the current value associated\\nwith the name. This makes it possible to have a succinct, quick, and secure\\nlight-client verification of name values.\")]),o(\"p\",[e._v(\"In Cosmos, we can take this concept and extend it further. Each\\nname-registration zone in Cosmos can have an associated top-level-domain\\n(TLD) name such as “.com” or “.org”, and each name-registration zone can have\\nits own governance and registration rules.\")]),o(\"h2\",{attrs:{id:\"issuance-and-incentives\"}},[e._v(\"Issuance and Incentives\")]),o(\"h3\",{attrs:{id:\"the-atom-token\"}},[e._v(\"The Atom Token\")]),o(\"p\",[e._v(\"While the Cosmos Hub is a multi-asset distributed ledger, there is a special\\nnative token called the \"),o(\"em\",[e._v(\"atom\")]),e._v(\". Atoms are the only staking token of the Cosmos\\nHub. Atoms are a license for the holder to vote, validate, or delegate to other\\nvalidators. Like Ethereum’s ether, atoms can also be used to pay for\\ntransaction fees to mitigate spam. Additional inflationary atoms and block\\ntransaction fees are rewarded to validators and delegators who delegate to\\nvalidators.\")]),o(\"p\",[e._v(\"The \"),o(\"code\",{pre:!0},[e._v(\"BurnAtomTx\")]),e._v(\" transaction can be used to recover any proportionate amount of\\ntokens from the reserve pool.\")]),o(\"h4\",{attrs:{id:\"fundraiser\"}},[e._v(\"Fundraiser\")]),o(\"p\",[e._v(\"The initial distribution of atom tokens and validators on Genesis will go to the\\ndonors of the Cosmos Fundraiser (75%), lead donors (5%), Cosmos Network\\nFoundation (10%), and ALL IN BITS, Inc (10%). From genesis onward, 1/3 of the\\ntotal amount of atoms will be rewarded to bonded validators and delegators\\nevery year.\")]),o(\"p\",[e._v(\"See the \"),o(\"a\",{attrs:{href:\"https://github.com/cosmos/cosmos/blob/master/PLAN.md\"}},[e._v(\"Cosmos Plan\")]),e._v(\"\\nfor additional details.\")]),o(\"h3\",{attrs:{id:\"limitations-on-the-number-of-validators\"}},[e._v(\"Limitations on the Number of Validators\")]),o(\"p\",[e._v(\"Unlike Bitcoin or other proof-of-work blockchains, a Tendermint blockchain gets\\nslower with more validators due to the increased communication complexity.\\nFortunately, we can support enough validators to make for a robust globally\\ndistributed blockchain with very fast transaction confirmation times, and, as\\nbandwidth, storage, and parallel compute capacity increases, we will be able to\\nsupport more validators in the future.\")]),o(\"p\",[e._v(\"On genesis day, the maximum number of validators will be set to 100, and this\\nnumber will increase at a rate of 13% for 10 years, and settle at 300\\nvalidators.\")]),o(\"pre\",{pre:!0},[o(\"code\",{pre:!0,attrs:{\"v-pre\":\"\"}},[e._v(\"Year 0: 100\\nYear 1: 113\\nYear 2: 127\\nYear 3: 144\\nYear 4: 163\\nYear 5: 184\\nYear 6: 208\\nYear 7: 235\\nYear 8: 265\\nYear 9: 300\\nYear 10: 300\\n...\\n\")])]),o(\"h3\",{attrs:{id:\"becoming-a-validator-after-genesis-day\"}},[e._v(\"Becoming a Validator After Genesis Day\")]),o(\"p\",[e._v(\"Atom holders who are not already can become validators by signing and\\nsubmitting a \"),o(\"code\",{pre:!0},[e._v(\"BondTx\")]),e._v(\" transaction. The amount of atoms provided as collateral\\nmust be nonzero. Anyone can become a validator at any time, except when the\\nsize of the current validator set is greater than the maximum number of\\nvalidators allowed. In that case, the transaction is only valid if the amount\\nof atoms is greater than the amount of effective atoms held by the smallest\\nvalidator, where effective atoms include delegated atoms. When a new validator\\nreplaces an existing validator in such a way, the existing validator becomes\\ninactive and all the atoms and delegated atoms enter the unbonding state.\")]),o(\"h3\",{attrs:{id:\"penalties-for-validators\"}},[e._v(\"Penalties for Validators\")]),o(\"p\",[e._v(\"There must be some penalty imposed on the validators for any intentional\\nor unintentional deviation from the sanctioned protocol. Some evidence is\\nimmediately admissible, such as a double-sign at the same height and round, or a\\nviolation of “prevote-the-lock” (a rule of the Tendermint consensus protocol).\\nSuch evidence will result in the validator losing its good standing and its\\nbonded atoms as well its proportionate share of tokens in the reserve pool –\\ncollectively called its “stake” – will get slashed.\")]),o(\"p\",[e._v(\"Sometimes, validators will not be available, either due to regional network\\ndisruptions, power failure, or other reasons. If, at any point in the past\\n\"),o(\"code\",{pre:!0},[e._v(\"ValidatorTimeoutWindow\")]),e._v(\" blocks, a validator’s commit vote is not included in\\nthe blockchain more than \"),o(\"code\",{pre:!0},[e._v(\"ValidatorTimeoutMaxAbsent\")]),e._v(\" times, that validator will\\nbecome inactive, and lose \"),o(\"code\",{pre:!0},[e._v(\"ValidatorTimeoutPenalty\")]),e._v(\" (DEFAULT 1%) of its stake.\")]),o(\"p\",[e._v(\"Some “malicious” behavior does not produce obviously discernable evidence on the\\nblockchain. In these cases, the validators can coordinate out of band to force\\nthe timeout of these malicious validators, if there is a supermajority\\nconsensus.\")]),o(\"p\",[e._v(\"In situations where the Cosmos Hub halts due to a ≥⅓ coalition of voting power\\ngoing offline, or in situations where a ≥⅓ coalition of voting power censor\\nevidence of malicious behavior from entering the blockchain, the hub must\\nrecover with a hard-fork reorg-proposal. (Link to “Forks and Censorship\\nAttacks”).\")]),o(\"h3\",{attrs:{id:\"transaction-fees\"}},[e._v(\"Transaction Fees\")]),o(\"p\",[e._v(\"Cosmos Hub validators can accept any token type or combination of types as fees\\nfor processing a transaction. Each validator can subjectively set whatever\\nexchange rate it wants, and choose whatever transactions it wants, as long as\\nthe \"),o(\"code\",{pre:!0},[e._v(\"BlockGasLimit\")]),e._v(\" is not exceeded. The collected fees, minus any taxes\\nspecified below, are redistributed to the bonded stakeholders in proportion to\\ntheir bonded atoms, every \"),o(\"code\",{pre:!0},[e._v(\"ValidatorPayoutPeriod\")]),e._v(\" (DEFAULT 1 hour).\")]),o(\"p\",[e._v(\"Of the collected transaction fees, \"),o(\"code\",{pre:!0},[e._v(\"ReserveTax\")]),e._v(\" (DEFAULT 2%) will go toward the\\nreserve pool to increase the reserve pool and increase the security and value of\\nthe Cosmos network. These funds can also be distributed in accordance with the\\ndecisions made by the governance system.\")]),o(\"p\",[e._v(\"Atom holders who delegate their voting power to other validators pay a\\ncommission to the delegated validator. The commission can be set by each\\nvalidator.\")]),o(\"h3\",{attrs:{id:\"incentivizing-hackers\"}},[e._v(\"Incentivizing Hackers\")]),o(\"p\",[e._v(\"The security of the Cosmos Hub is a function of the security of the underlying\\nvalidators and the choice of delegation by delegators. In order to encourage\\nthe discovery and early reporting of found vulnerabilities, the Cosmos Hub\\nencourages hackers to publish successful exploits via a \"),o(\"code\",{pre:!0},[e._v(\"ReportHackTx\")]),e._v(\"\\ntransaction that says, “This validator got hacked. Please send\\nbounty to this address”. Upon such an exploit, the validator and delegators\\nwill become inactive, \"),o(\"code\",{pre:!0},[e._v(\"HackPunishmentRatio\")]),e._v(\" (default 5%) of everyone’s atoms\\nwill get slashed, and \"),o(\"code\",{pre:!0},[e._v(\"HackRewardRatio\")]),e._v(\" (default 5%) of everyone’s atoms will\\nget rewarded to the hacker’s bounty address. The validator must recover the\\nremaining atoms by using their backup key.\")]),o(\"p\",[e._v(\"In order to prevent this feature from being abused to transfer unvested atoms,\\nthe portion of vested vs unvested atoms of validators and delegators before and\\nafter the \"),o(\"code\",{pre:!0},[e._v(\"ReportHackTx\")]),e._v(\" will remain the same, and the hacker bounty will\\ninclude some unvested atoms, if any.\")]),o(\"h3\",{attrs:{id:\"governance-specification\"}},[e._v(\"Governance Specification\")]),o(\"p\",[e._v(\"The Cosmos Hub is operated by a distributed organization that requires a well-defined\\ngovernance mechanism in order to coordinate various changes to the blockchain,\\nsuch as the variable parameters of the system, as well as software upgrades and\\nconstitutional amendments.\")]),o(\"p\",[e._v(\"All validators are responsible for voting on all proposals. Failing to vote on\\na proposal in a timely manner will result in the validator being deactivated\\nautomatically for a period of time called the \"),o(\"code\",{pre:!0},[e._v(\"AbsenteeismPenaltyPeriod\")]),e._v(\"\\n(DEFAULT 1 week).\")]),o(\"p\",[e._v(\"Delegators automatically inherit the vote of the delegated validator. This vote\\nmay be overridden manually. Unbonded atoms get no vote.\")]),o(\"p\",[e._v(\"Each proposal requires a deposit of \"),o(\"code\",{pre:!0},[e._v(\"MinimumProposalDeposit\")]),e._v(\" tokens, which may\\nbe a combination of one or more tokens including atoms. For each proposal, the\\nvoters may vote to take the deposit. If more than half of the voters choose to\\ntake the deposit (e.g. because the proposal was spam), the deposit goes to the\\nreserve pool, except any atoms which are burned.\")]),o(\"p\",[e._v(\"For each proposal, voters may vote with the following options:\")]),o(\"ul\",[o(\"li\",[e._v(\"Yea\")]),o(\"li\",[e._v(\"YeaWithForce\")]),o(\"li\",[e._v(\"Nay\")]),o(\"li\",[e._v(\"NayWithForce\")]),o(\"li\",[e._v(\"Abstain\")])]),o(\"p\",[e._v(\"A strict majority of Yea or YeaWithForce votes (or Nay or NayWithForce votes) is\\nrequired for the proposal to be decided as passed (or decided as failed), but\\n1/3+ can veto the majority decision by voting “with force”. When a strict\\nmajority is vetoed, everyone gets punished by losing \"),o(\"code\",{pre:!0},[e._v(\"VetoPenaltyFeeBlocks\")]),e._v(\"\\n(DEFAULT 1 day’s worth of blocks) worth of fees (except taxes which will not be\\naffected), and the party that vetoed the majority decision will be additionally\\npunished by losing \"),o(\"code\",{pre:!0},[e._v(\"VetoPenaltyAtoms\")]),e._v(\" (DEFAULT 0.1%) of its atoms.\")]),o(\"h3\",{attrs:{id:\"parameter-change-proposal\"}},[e._v(\"Parameter Change Proposal\")]),o(\"p\",[e._v(\"Any of the parameters defined here can be changed with the passing of a\\n\"),o(\"code\",{pre:!0},[e._v(\"ParameterChangeProposal\")]),e._v(\".\")]),o(\"h3\",{attrs:{id:\"bounty-proposal\"}},[e._v(\"Bounty Proposal\")]),o(\"p\",[e._v(\"Atoms can be inflated and reserve pool funds spent with the passing of a \"),o(\"code\",{pre:!0},[e._v(\"BountyProposal\")]),e._v(\".\")]),o(\"h3\",{attrs:{id:\"text-proposal\"}},[e._v(\"Text Proposal\")]),o(\"p\",[e._v(\"All other proposals, such as a proposal to upgrade the protocol, will be\\ncoordinated via the generic \"),o(\"code\",{pre:!0},[e._v(\"TextProposal\")]),e._v(\".\")]),o(\"h2\",{attrs:{id:\"roadmap\"}},[e._v(\"Roadmap\")]),o(\"p\",[e._v(\"See \"),o(\"a\",{attrs:{href:\"https://github.com/cosmos/cosmos/blob/master/PLAN.md\"}},[e._v(\"the Plan\")]),e._v(\".\")]),o(\"h2\",{attrs:{id:\"related-work\"}},[e._v(\"Related Work\")]),o(\"p\",[e._v(\"There have been many innovations in blockchain consensus and scalability in the\\npast couple of years. This section provides a brief survey of a select number\\nof important ones.\")]),o(\"h3\",{attrs:{id:\"consensus-systems\"}},[e._v(\"Consensus Systems\")]),o(\"h4\",{attrs:{id:\"classic-byzantine-fault-tolerance\"}},[e._v(\"Classic Byzantine Fault Tolerance\")]),o(\"p\",[e._v(\"Consensus in the presence of malicious participants is a problem dating back to\\nthe early 1980s, when Leslie Lamport coined the phrase “Byzantine fault” to\\nrefer to arbitrary process behavior that deviates from the intended behavior,\\nin contrast to a “crash fault”, wherein a process simply crashes. Early\\nsolutions were discovered for synchronous networks where there is an upper\\nbound on message latency, though practical use was limited to highly controlled\\nenvironments such as airplane controllers and datacenters synchronized via\\natomic clocks. It was not until the late 90s that Practical Byzantine Fault\\nTolerance (PBFT) \"),o(\"a\",{attrs:{href:\"http://pmg.csail.mit.edu/papers/osdi99.pdf\"}},[e._v(\"[11]\")]),e._v(\" was introduced as an efficient partially\\nsynchronous consensus algorithm able to tolerate up to ⅓ of processes behaving\\narbitrarily. PBFT became the standard algorithm, spawning many variations,\\nincluding most recently one created by IBM as part of their contribution to\\nHyperledger.\")]),o(\"p\",[e._v(\"The main benefit of Tendermint consensus over PBFT is that Tendermint has an\\nimproved and simplified underlying structure, some of which is a result of\\nembracing the blockchain paradigm. Tendermint blocks must commit in order,\\nwhich obviates the complexity and communication overhead associated with PBFT’s\\nview-changes. In Cosmos and many cryptocurrencies, there is no need to allow\\nfor block \"),o(\"em\",[e._v(\"N+i\")]),e._v(\" where \"),o(\"em\",[e._v(\"i >= 1\")]),e._v(\" to commit, when block \"),o(\"em\",[e._v(\"N\")]),e._v(\"\\nitself hasn’t yet committed. If bandwidth is the reason why block \"),o(\"em\",[e._v(\"N\")]),e._v(\"\\nhasn’t committed in a Cosmos zone, then it doesn’t help to use bandwidth sharing\\nvotes for blocks \"),o(\"em\",[e._v(\"N+i\")]),e._v(\". If a network partition or offline nodes is the\\nreason why block \"),o(\"em\",[e._v(\"N\")]),e._v(\" hasn’t committed, then \"),o(\"em\",[e._v(\"N+i\")]),e._v(\" won’t commit\\nanyway.\")]),o(\"p\",[e._v(\"In addition, the batching of transactions into blocks allows for regular\\nMerkle-hashing of the application state, rather than periodic digests as with\\nPBFT’s checkpointing scheme. This allows for faster provable transaction\\ncommits for light-clients and faster inter-blockchain communication.\")]),o(\"p\",[e._v(\"Tendermint BFT also includes many optimizations and features that go above and\\nbeyond what is specified in PBFT. For example, the blocks proposed by\\nvalidators are split into parts, Merkle-ized, and gossipped in such a way that\\nimproves broadcasting performance (see LibSwift \"),o(\"a\",{attrs:{href:\"http://www.ds.ewi.tudelft.nl/fileadmin/pds/papers/PerformanceAnalysisOfLibswift.pdf\"}},[e._v(\"[19]\")]),e._v(\" for inspiration).\\nAlso, Tendermint BFT doesn’t make any assumption about point-to-point\\nconnectivity, and functions for as long as the P2P network is weakly connected.\")]),o(\"h4\",{attrs:{id:\"bitshares-delegated-stake\"}},[e._v(\"BitShares delegated stake\")]),o(\"p\",[e._v(\"While not the first to deploy proof-of-stake (PoS), BitShares1.0 \"),o(\"a\",{attrs:{href:\"https://bitshares.org/technology/delegated-proof-of-stake-consensus/\"}},[e._v(\"[12]\")]),e._v(\"\\ncontributed considerably to research and adoption of PoS blockchains,\\nparticularly those known as “delegated” PoS. In BitShares, stake holders elect\\n“witnesses”, responsible for ordering and committing transactions, and\\n“delegates”, responsible for coordinating software updates and parameter\\nchanges. BitShares2.0 aims to achieve high performance (100k tx/s, 1s latency)\\nin ideal conditions, with each block signed by a single signer, and transaction\\nfinality taking quite a bit longer than the block interval. A canonical\\nspecification is still in development. Stakeholders can remove or replace\\nmisbehaving witnesses on a daily basis, but there is no significant collateral\\nof witnesses or delegators in the likeness of Tendermint PoS that get slashed\\nin the case of a successful double-spend attack.\")]),o(\"h4\",{attrs:{id:\"stellar\"}},[e._v(\"Stellar\")]),o(\"p\",[e._v(\"Building on an approach pioneered by Ripple, Stellar \"),o(\"a\",{attrs:{href:\"https://www.stellar.org/papers/stellar-consensus-protocol.pdf\"}},[e._v(\"[13]\")]),e._v(\" refined a\\nmodel of Federated Byzantine Agreement wherein the processes participating in\\nconsensus do not constitute a fixed and globally known set. Rather, each\\nprocess node curates one or more “quorum slices”, each constituting a set of\\ntrusted processes. A “quorum” in Stellar is defined to be a set of nodes that\\ncontain at least one quorum slice for each node in the set, such that agreement\\ncan be reached.\")]),o(\"p\",[e._v(\"The security of the Stellar mechanism relies on the assumption that the\\nintersection of \"),o(\"em\",[e._v(\"any\")]),e._v(\" two quorums is non-empty, while the availability of a node\\nrequires at least one of its quorum slices to consist entirely of correct nodes,\\ncreating a trade-off between using large or small quorum-slices that may be\\ndifficult to balance without imposing significant assumptions about trust.\\nUltimately, nodes must somehow choose adequate quorum slices for there to be\\nsufficient fault-tolerance (or any “intact nodes” at all, of which much of the\\nresults of the paper depend on), and the only provided strategy for ensuring\\nsuch a configuration is hierarchical and similar to the Border Gateway Protocol\\n(BGP), used by top-tier ISPs on the internet to establish global routing tables,\\nand by that used by browsers to manage TLS certificates; both notorious for\\ntheir insecurity.\")]),o(\"p\",[e._v(\"The criticism in the Stellar paper of the Tendermint-based proof-of-stake\\nsystems is mitigated by the token strategy described here, wherein a new type of\\ntoken called the \"),o(\"em\",[e._v(\"atom\")]),e._v(\" is issued that represent claims to future portions of\\nfees and rewards. The advantage of Tendermint-based proof-of-stake, then, is its\\nrelative simplicity, while still providing sufficient and provable security\\nguarantees.\")]),o(\"h4\",{attrs:{id:\"bitcoinng\"}},[e._v(\"BitcoinNG\")]),o(\"p\",[e._v(\"BitcoinNG is a proposed improvement to Bitcoin that would allow for forms of\\nvertical scalability, such as increasing the block size, without the negative\\neconomic consequences typically associated with such a change, such as the\\ndisproportionately large impact on small miners. This improvement is achieved\\nby separating leader election from transaction broadcast: leaders are first\\nelected by proof-of-work in “micro-blocks”, and then able to broadcast\\ntransactions to be committed until a new micro-block is found. This reduces the\\nbandwidth requirements necessary to win the PoW race, allowing small miners to\\nmore fairly compete, and allowing transactions to be committed more regularly by\\nthe last miner to find a micro-block.\")]),o(\"h4\",{attrs:{id:\"casper\"}},[e._v(\"Casper\")]),o(\"p\",[e._v(\"Casper \"),o(\"a\",{attrs:{href:\"https://blog.ethereum.org/2015/08/01/introducing-casper-friendly-ghost/\"}},[e._v(\"[16]\")]),e._v(\" is a proposed proof-of-stake consensus algorithm for\\nEthereum. Its prime mode of operation is “consensus-by-bet”. By letting\\nvalidators iteratively bet on which block they believe will become committed\\ninto the blockchain based on the other bets that they have seen so far,\\nfinality can be achieved eventually.\\n\"),o(\"a\",{attrs:{href:\"https://blog.ethereum.org/2015/12/28/understanding-serenity-part-2-casper/\"}},[e._v(\"link\")]),e._v(\".\\nThis is an active area of research by the Casper team. The challenge is in\\nconstructing a betting mechanism that can be proven to be an evolutionarily\\nstable strategy. The main benefit of Casper as compared to Tendermint may be in\\noffering “availability over consistency” – consensus does not require a >⅔\\nquorum of voting power – perhaps at the cost of commit speed or\\nimplementation complexity.\")]),o(\"h3\",{attrs:{id:\"horizontal-scaling\"}},[e._v(\"Horizontal Scaling\")]),o(\"h4\",{attrs:{id:\"interledger-protocol\"}},[e._v(\"Interledger Protocol\")]),o(\"p\",[e._v(\"The Interledger Protocol \"),o(\"a\",{attrs:{href:\"https://interledger.org/rfcs/0001-interledger-architecture/\"}},[e._v(\"[14]\")]),e._v(\" is not strictly a scalability solution.\\nIt provides an ad hoc interoperation between different ledger systems through a\\nloosely coupled bilateral relationship network. Like the Lightning Network,\\nthe purpose of ILP is to facilitate payments, but it specifically focuses on\\npayments across disparate ledger types, and extends the atomic transaction\\nmechanism to include not only hash-locks, but also a quorum of notaries (called\\nthe Atomic Transport Protocol). The latter mechanism for enforcing atomicity\\nin inter-ledger transactions is similar to Tendermint’s light-client SPV\\nmechanism, so an illustration of the distinction between ILP and Cosmos/IBC is\\nwarranted, and provided below.\")]),o(\"ol\",[o(\"li\",[o(\"p\",[e._v(\"The notaries of a connector in ILP do not support membership changes, and\\ndo not allow for flexible weighting between notaries. On the other hand,\\nIBC is designed specifically for blockchains, where validators can have\\ndifferent weights, and where membership can change over the course of the\\nblockchain.\")])]),o(\"li\",[o(\"p\",[e._v(\"As in the Lightning Network, the receiver of payment in ILP must be online to\\nsend a confirmation back to the sender. In a token transfer over IBC, the\\nvalidator-set of the receiver’s blockchain is responsible for providing\\nconfirmation, not the receiving user.\")])]),o(\"li\",[o(\"p\",[e._v(\"The most striking difference is that ILP’s connectors are not responsible or\\nkeeping authoritative state about payments, whereas in Cosmos, the validators\\nof a hub are the authority of the state of IBC token transfers as well as the\\nauthority of the amount of tokens held by each zone (but not the amount of\\ntokens held by each account within a zone). This is the fundamental innovation\\nthat allows for secure asymmetric transfer of tokens from zone to zone; the\\nanalog to ILP’s connector in Cosmos is a persistent and maximally secure\\nblockchain ledger, the Cosmos Hub.\")])]),o(\"li\",[o(\"p\",[e._v(\"The inter-ledger payments in ILP need to be backed by an exchange orderbook,\\nas there is no asymmetric transfer of coins from one ledger to another, only\\nthe transfer of value or market equivalents.\")])])]),o(\"h4\",{attrs:{id:\"sidechains\"}},[e._v(\"Sidechains\")]),o(\"p\",[e._v(\"Sidechains \"),o(\"a\",{attrs:{href:\"https://blockstream.com/sidechains.pdf\"}},[e._v(\"[15]\")]),e._v(\" are a proposed mechanism for scaling the Bitcoin\\nnetwork via alternative blockchains that are “two-way pegged” to the Bitcoin\\nblockchain. (Two-way pegging is equivalent to bridging. In Cosmos we say\\n“bridging” to distinguish from market-pegging). Sidechains allow bitcoins to\\neffectively move from the Bitcoin blockchain to the sidechain and back, and\\nallow for experimentation in new features on the sidechain. As in the Cosmos\\nHub, the sidechain and Bitcoin serve as light-clients of each other, using SPV\\nproofs to determine when coins should be transferred to the sidechain and back.\\nOf course, since Bitcoin uses proof-of-work, sidechains centered around Bitcoin\\nsuffer from the many problems and risks of proof-of-work as a consensus\\nmechanism. Furthermore, this is a Bitcoin-maximalist solution that doesn’t\\nnatively support a variety of tokens and inter-zone network topology as Cosmos\\ndoes. That said, the core mechanism of the two-way peg is in principle the same\\nas that employed by the Cosmos network.\")]),o(\"h4\",{attrs:{id:\"ethereum-scalability-efforts\"}},[e._v(\"Ethereum Scalability Efforts\")]),o(\"p\",[e._v(\"Ethereum is currently researching a number of different strategies to shard the\\nstate of the Ethereum blockchain to address scalability needs. These efforts\\nhave the goal of maintaining the abstraction layer offered by the current\\nEthereum Virtual Machine across the shared state space. Multiple research\\nefforts are underway at this time. \"),o(\"a\",{attrs:{href:\"https://github.com/ethereum/EIPs/issues/53\"}},[e._v(\"[18]\")]),o(\"a\",{attrs:{href:\"http://vitalik.ca/files/mauve_paper.html\"}},[e._v(\"[22]\")])]),o(\"h5\",{attrs:{id:\"cosmos-vs-ethereum-20-mauve\"}},[e._v(\"Cosmos vs Ethereum 2.0 Mauve\")]),o(\"p\",[e._v(\"Cosmos and Ethereum 2.0 Mauve \"),o(\"a\",{attrs:{href:\"http://vitalik.ca/files/mauve_paper.html\"}},[e._v(\"[22]\")]),e._v(\" have different design goals.\")]),o(\"ul\",[o(\"li\",[e._v(\"Cosmos is specifically about tokens. Mauve is about scaling general computation.\")]),o(\"li\",[e._v(\"Cosmos is not bound to the EVM, so even different VMs can interoperate.\")]),o(\"li\",[e._v(\"Cosmos lets the zone creator determine who validates the zone.\")]),o(\"li\",[e._v(\"Anyone can start a new zone in Cosmos (unless governance decides otherwise).\")]),o(\"li\",[e._v(\"The hub isolates zone failures so global token invariants are preserved.\")])]),o(\"h3\",{attrs:{id:\"general-scaling\"}},[e._v(\"General Scaling\")]),o(\"h4\",{attrs:{id:\"lightning-network\"}},[e._v(\"Lightning Network\")]),o(\"p\",[e._v(\"The Lightning Network is a proposed token transfer network operating at a layer\\nabove the Bitcoin blockchain (and other public blockchains), enabling improvement of many\\norders of magnitude in transaction throughput by moving the majority\\nof transactions outside of the consensus ledger into so-called “payment\\nchannels”. This is made possible by on-chain cryptocurrency scripts, which\\nenable parties to enter into bilateral stateful contracts where the state can\\nbe updated by sharing digital signatures, and contracts can be closed by finally\\npublishing evidence onto the blockchain, a mechanism first popularized by\\ncross-chain atomic swaps. By opening payment channels with many parties,\\nparticipants in the Lightning Network can become focal points for routing the\\npayments of others, leading to a fully connected payment channel network, at the\\ncost of capital being tied up on payment channels.\")]),o(\"p\",[e._v(\"While the Lightning Network can also easily extend across multiple independent\\nblockchains to allow for the transfer of \"),o(\"em\",[e._v(\"value\")]),e._v(\" via an exchange market, it\\ncannot be used to asymmetrically transfer \"),o(\"em\",[e._v(\"tokens\")]),e._v(\" from one blockchain to\\nanother. The main benefit of the Cosmos network described here is to enable\\nsuch direct token transfers. That said, we expect payment channels and the\\nLightning Network to become widely adopted along with our token transfer\\nmechanism, for cost-saving and privacy reasons.\")]),o(\"h4\",{attrs:{id:\"segregated-witness\"}},[e._v(\"Segregated Witness\")]),o(\"p\",[e._v(\"Segregated Witness is a Bitcoin improvement proposal\\n\"),o(\"a\",{attrs:{href:\"https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki\"}},[e._v(\"link\")]),e._v(\" that aims\\nto increase the per-block transaction throughput 2X or 3X, while simultaneously\\nmaking block syncing faster for new nodes. The brilliance of this solution is\\nin how it works within the limitations of Bitcoin’s current protocol and allows\\nfor a soft-fork upgrade (i.e. clients with older versions of the software will\\ncontinue to function after the upgrade). Tendermint, being a new protocol, has no\\ndesign restrictions, so it has a different scaling priorities. Primarily,\\nTendermint uses a BFT round-robin algorithm based on cryptographic signatures\\ninstead of mining, which trivially allows horizontal scaling through multiple\\nparallel blockchains, while regular, more frequent block commits allow for\\nvertical scaling as well.\")]),o(\"hr\"),o(\"h2\",{attrs:{id:\"appendix\"}},[e._v(\"Appendix\")]),o(\"h3\",{attrs:{id:\"fork-accountability\"}},[e._v(\"Fork Accountability\")]),o(\"p\",[e._v(\"A well designed consensus protocol should provide some guarantees in the event that the tolerance\\ncapacity is exceeded and the consensus fails. This is especially necessary in\\neconomic systems, where Byzantine behaviour can have substantial financial\\nreward. The most important such guarantee is a form of \"),o(\"em\",[e._v(\"fork-accountability\")]),e._v(\",\\nwhere the processes that caused the consensus to fail (ie. caused clients of\\nthe protocol to accept different values - a fork) can be identified and punished\\naccording to the rules of the protocol, or, possibly, the legal system. When\\nthe legal system is unreliable or excessively expensive to invoke, validators can be forced to make security\\ndeposits in order to participate, and those deposits can be revoked, or slashed,\\nwhen malicious behaviour is detected \"),o(\"a\",{attrs:{href:\"https://blog.ethereum.org/2014/01/15/slasher-a-punitive-proof-of-stake-algorithm/\"}},[e._v(\"[10]\")]),e._v(\".\")]),o(\"p\",[e._v(\"Note this is unlike Bitcoin, where forking is a regular occurence due to\\nnetwork asynchrony and the probabilistic nature of finding partial hash\\ncollisions. Since in many cases a malicious fork is indistinguishable from a\\nfork due to asynchrony, Bitcoin cannot reliably implement fork-accountability,\\nother than the implicit opportunity cost paid by miners for mining an orphaned\\nblock.\")]),o(\"h3\",{attrs:{id:\"tendermint-consensus\"}},[e._v(\"Tendermint Consensus\")]),o(\"p\",[e._v(\"We call the voting stages \"),o(\"em\",[e._v(\"PreVote\")]),e._v(\" and \"),o(\"em\",[e._v(\"PreCommit\")]),e._v(\". A vote can be for a\\nparticular block or for \"),o(\"em\",[e._v(\"Nil\")]),e._v(\". We call a collection of >⅔ PreVotes for a single\\nblock in the same round a \"),o(\"em\",[e._v(\"Polka\")]),e._v(\", and a collection of >⅔ PreCommits for a\\nsingle block in the same round a \"),o(\"em\",[e._v(\"Commit\")]),e._v(\". If >⅔ PreCommit for Nil in the same\\nround, they move to the next round.\")]),o(\"p\",[e._v(\"Note that strict determinism in the protocol incurs a weak synchrony assumption\\nas faulty leaders must be detected and skipped. Thus, validators wait some\\namount of time, \"),o(\"em\",[e._v(\"TimeoutPropose\")]),e._v(\", before they Prevote Nil, and the value of\\nTimeoutPropose increases with each round. Progression through the rest of a\\nround is fully asynchronous, in that progress is only made once a validator hears\\nfrom >⅔ of the network. In practice, it would take an extremely strong\\nadversary to indefinitely thwart the weak synchrony assumption (causing the\\nconsensus to fail to ever commit a block), and doing so can be made even more\\ndifficult by using randomized values of TimeoutPropose on each validator.\")]),o(\"p\",[e._v(\"An additional set of constraints, or Locking Rules, ensure that the network will\\neventually commit just one block at each height. Any malicious attempt to cause\\nmore than one block to be committed at a given height can be identified. First,\\na PreCommit for a block must come with justification, in the form of a Polka for\\nthat block. If the validator has already PreCommit a block at round\\n\"),o(\"em\",[e._v(\"R\"),o(\"em\",[e._v(\"1\")]),e._v(\", we say they are _locked\")]),e._v(\" on that block, and the Polka used to\\njustify the new PreCommit at round \"),o(\"em\",[e._v(\"R_2\")]),e._v(\" must come in a round\\n\"),o(\"em\",[e._v(\"R_polka\")]),e._v(\" where \"),o(\"em\",[e._v(\"R_1 < R_polka <= R_2\")]),e._v(\". Second, validators\\nmust Propose and/or PreVote the block they are locked on. Together, these\\nconditions ensure that a validator does not PreCommit without sufficient\\nevidence as justification, and that validators which have already PreCommit\\ncannot contribute to evidence to PreCommit something else. This ensures both\\nsafety and liveness of the consensus algorithm.\")]),o(\"p\",[e._v(\"The full details of the protocol are described\\n\"),o(\"a\",{attrs:{href:\"https://github.com/tendermint/tendermint/wiki/Byzantine-Consensus-Algorithm\"}},[e._v(\"here\")]),e._v(\".\")]),o(\"h3\",{attrs:{id:\"tendermint-light-clients\"}},[e._v(\"Tendermint Light Clients\")]),o(\"p\",[e._v(\"The need to sync all block headers is eliminated in Tendermint-PoS as the\\nexistence of an alternative chain (a fork) means ≥⅓ of bonded stake can be\\nslashed. Of course, since slashing requires that \"),o(\"em\",[e._v(\"someone\")]),e._v(\" share evidence of a\\nfork, light clients should store any block-hash commits that it sees.\\nAdditionally, light clients could periodically stay synced with changes to the\\nvalidator set, in order to avoid \"),o(\"a\",{attrs:{href:\"#preventing-long-range-attacks\"}},[e._v(\"long range\\nattacks\")]),e._v(\" (but other solutions are possible).\")]),o(\"p\",[e._v(\"In spirit similar to Ethereum, Tendermint enables applications to embed a\\nglobal Merkle root hash in each block, allowing easily verifiable state queries\\nfor things like account balances, the value stored in a contract, or the\\nexistence of an unspent transaction output, depending on the nature of the\\napplication.\")]),o(\"h3\",{attrs:{id:\"preventing-long-range-attacks\"}},[e._v(\"Preventing Long Range Attacks\")]),o(\"p\",[e._v(\"Assuming a sufficiently resilient collection of broadcast networks and a static\\nvalidator set, any fork in the blockchain can be detected and the deposits of\\nthe offending validators slashed. This innovation, first suggested by Vitalik\\nButerin in early 2014, solves the nothing-at-stake problem of other\\nproof-of-stake cryptocurrencies (see \"),o(\"a\",{attrs:{href:\"#related-work\"}},[e._v(\"Related Work\")]),e._v(\"). However,\\nsince validator sets must be able to change, over a long range of time the\\noriginal validators may all become unbonded, and hence would be free to create a\\nnew chain from the genesis block, incurring no cost as they no longer have\\ndeposits locked up. This attack came to be known as the Long Range Attack (LRA),\\nin contrast to a Short Range Attack, where validators who are currently bonded\\ncause a fork and are hence punishable (assuming a fork-accountable BFT algorithm\\nlike Tendermint consensus). Long Range Attacks are often thought to be a\\ncritical blow to proof-of-stake.\")]),o(\"p\",[e._v(\"Fortunately, the LRA can be mitigated as follows. First, for a validator to\\nunbond (thereby recovering their collateral deposit and no longer earning fees\\nto participate in the consensus), the deposit must be made untransferable for an\\namount of time known as the “unbonding period”, which may be on the order of\\nweeks or months. Second, for a light client to be secure, the first time it\\nconnects to the network it must verify a recent block-hash against a trusted\\nsource, or preferably multiple sources. This condition is sometimes referred to\\nas “weak subjectivity”. Finally, to remain secure, it must sync up with the\\nlatest validator set at least as frequently as the length of the unbonding\\nperiod. This ensures that the light client knows about changes to the validator\\nset before a validator has its capital unbonded and thus no longer at stake,\\nwhich would allow it to deceive the client by carrying out a long range attack\\nby creating new blocks beginning back at a height where it was bonded (assuming\\nit has control of sufficiently many of the early private keys).\")]),o(\"p\",[e._v(\"Note that overcoming the LRA in this way requires an overhaul of the original\\nsecurity model of proof-of-work. In PoW, it is assumed that a light client can\\nsync to the current height from the trusted genesis block at any time simply by\\nprocessing the proof-of-work in every block header. To overcome the LRA,\\nhowever, we require that a light client come online with some regularity to\\ntrack changes in the validator set, and that the first time they come online\\nthey must be particularly careful to authenticate what they hear from the\\nnetwork against trusted sources. Of course, this latter requirement is similar\\nto that of Bitcoin, where the protocol and software must also be obtained from a\\ntrusted source.\")]),o(\"p\",[e._v(\"The above method for preventing LRA is well suited for validators and full nodes\\nof a Tendermint-powered blockchain because these nodes are meant to remain\\nconnected to the network. The method is also suitable for light clients that\\ncan be expected to sync with the network frequently. However, for light clients\\nthat are not expected to have frequent access to the internet or the blockchain\\nnetwork, yet another solution can be used to overcome the LRA. Non-validator\\ntoken holders can post their tokens as collateral with a very long unbonding\\nperiod (e.g. much longer than the unbonding period for validators) and serve\\nlight clients with a secondary method of attesting to the validity of current\\nand past block-hashes. While these tokens do not count toward the security of\\nthe blockchain’s consensus, they nevertheless can provide strong guarantees for\\nlight clients. If historical block-hash querying were supported in Ethereum,\\nanyone could bond their tokens in a specially designed smart contract and\\nprovide attestation services for pay, effectively creating a market for\\nlight-client LRA security.\")]),o(\"h3\",{attrs:{id:\"overcoming-forks-and-censorship-attacks\"}},[e._v(\"Overcoming Forks and Censorship Attacks\")]),o(\"p\",[e._v(\"Due to the definition of a block commit, any ≥⅓ coalition of voting power can\\nhalt the blockchain by going offline or not broadcasting their votes. Such a\\ncoalition can also censor particular transactions by rejecting blocks that\\ninclude these transactions, though this would result in a significant proportion\\nof block proposals to be rejected, which would slow down the rate of block\\ncommits of the blockchain, reducing its utility and value. The malicious\\ncoalition might also broadcast votes in a trickle so as to grind blockchain\\nblock commits to a near halt, or engage in any combination of these attacks.\\nFinally, it can cause the blockchain to fork, by double-signing or violating the\\nlocking rules.\")]),o(\"p\",[e._v(\"If a globally active adversary were also involved, it could partition the network in\\nsuch a way that it may appear that the wrong subset of validators were\\nresponsible for the slowdown. This is not just a limitation of Tendermint, but\\nrather a limitation of all consensus protocols whose network is potentially\\ncontrolled by an active adversary.\")]),o(\"p\",[e._v(\"For these types of attacks, a subset of the validators should coordinate through\\nexternal means to sign a reorg-proposal that chooses a fork (and any evidence\\nthereof) and the initial subset of validators with their signatures. Validators\\nwho sign such a reorg-proposal forego their collateral on all other forks.\\nClients should verify the signatures on the reorg-proposal, verify any evidence,\\nand make a judgement or prompt the end-user for a decision. For example, a\\nphone wallet app may prompt the user with a security warning, while a\\nrefrigerator may accept any reorg-proposal signed by +½ of the original\\nvalidators by voting power.\")]),o(\"p\",[e._v(\"No non-synchronous Byzantine fault-tolerant algorithm can come to consensus when\\n≥⅓ of voting power are dishonest, yet a fork assumes that ≥⅓ of voting power\\nhave already been dishonest by double-signing or lock-changing without\\njustification. So, signing the reorg-proposal is a coordination problem that\\ncannot be solved by any non-synchronous protocol (i.e. automatically, and\\nwithout making assumptions about the reliability of the underlying network).\\nFor now, we leave the problem of reorg-proposal coordination to human\\ncoordination via social consensus on internet media. Validators must take care\\nto ensure that there are no remaining network partitions prior to signing a\\nreorg-proposal, to avoid situations where two conflicting reorg-proposals are\\nsigned.\")]),o(\"p\",[e._v(\"Assuming that the external coordination medium and protocol is robust, it\\nfollows that forks are less of a concern than censorship attacks.\")]),o(\"p\",[e._v(\"In addition to forks and censorship, which require ≥⅓ Byzantine voting power, a\\ncoalition of >⅔ voting power may commit arbitrary, invalid state. This is\\ncharacteristic of any (BFT) consensus system. Unlike double-signing, which\\ncreates forks with easily verifiable evidence, detecting committment of an\\ninvalid state requires non-validating peers to verify whole blocks, which\\nimplies that they keep a local copy of the state and execute each transaction,\\ncomputing the state root independently for themselves. Once detected, the only\\nway to handle such a failure is via social consensus. For instance, in\\nsituations where Bitcoin has failed, whether forking due to software bugs (as in\\nMarch 2013), or committing invalid state due to Byzantine behavior of miners (as\\nin July 2015), the well connected community of businesses, developers, miners,\\nand other organizations established a social consensus as to what manual actions\\nwere required by participants to heal the network. Furthermore, since\\nvalidators of a Tendermint blockchain may be expected to be identifiable,\\ncommitment of an invalid state may even be punishable by law or some external\\njurisprudence, if desired.\")]),o(\"h3\",{attrs:{id:\"abci-specification\"}},[e._v(\"ABCI Specification\")]),o(\"p\",[e._v(\"ABCI consists of 3 primary message types that get delivered from the core to the\\napplication. The application replies with corresponding response messages.\")]),o(\"p\",[e._v(\"The \"),o(\"code\",{pre:!0},[e._v(\"AppendTx\")]),e._v(\" message is the work horse of the application. Each transaction in\\nthe blockchain is delivered with this message. The application needs to validate\\neach transactions received with the AppendTx message against the current state,\\napplication protocol, and the cryptographic credentials of the transaction. A\\nvalidated transaction then needs to update the application state — by binding a\\nvalue into a key values store, or by updating the UTXO database.\")]),o(\"p\",[e._v(\"The \"),o(\"code\",{pre:!0},[e._v(\"CheckTx\")]),e._v(\" message is similar to AppendTx, but it’s only for validating\\ntransactions. Tendermint BFT’s mempool first checks the validity of a\\ntransaction with CheckTx, and only relays valid transactions to its peers.\\nApplications may check an incrementing nonce in the transaction and return an\\nerror upon CheckTx if the nonce is old.\")]),o(\"p\",[e._v(\"The \"),o(\"code\",{pre:!0},[e._v(\"Commit\")]),e._v(\" message is used to compute a cryptographic commitment to the\\ncurrent application state, to be placed into the next block header. This has\\nsome handy properties. Inconsistencies in updating that state will now appear as\\nblockchain forks which catches a whole class of programming errors. This also\\nsimplifies the development of secure lightweight clients, as Merkle-hash proofs\\ncan be verified by checking against the block-hash, and the block-hash is signed\\nby a quorum of validators (by voting power).\")]),o(\"p\",[e._v(\"Additional ABCI messages allow the application to keep track of and change the\\nvalidator set, and for the application to receive the block information, such as\\nthe height and the commit votes.\")]),o(\"p\",[e._v(\"ABCI requests/responses are simple Protobuf messages. Check out the \"),o(\"a\",{attrs:{href:\"https://github.com/tendermint/abci/blob/master/types/types.proto\"}},[e._v(\"schema\\nfile\")]),e._v(\".\")]),o(\"h5\",{attrs:{id:\"appendtx\"}},[e._v(\"AppendTx\")]),o(\"ul\",[o(\"li\",[o(\"strong\",[e._v(\"Arguments\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Data ([]byte)\")]),e._v(\": The request transaction bytes\")])])]),o(\"li\",[o(\"strong\",[e._v(\"Returns\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Code (uint32)\")]),e._v(\": Response code\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Data ([]byte)\")]),e._v(\": Result bytes, if any\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Log (string)\")]),e._v(\": Debug or error message\")])])]),o(\"li\",[o(\"strong\",[e._v(\"Usage\")]),e._v(\":\"),o(\"br\"),e._v(\"\\nAppend and run a transaction. If the transaction is valid, returns\\nCodeType.OK\")])]),o(\"h5\",{attrs:{id:\"checktx\"}},[e._v(\"CheckTx\")]),o(\"ul\",[o(\"li\",[o(\"strong\",[e._v(\"Arguments\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Data ([]byte)\")]),e._v(\": The request transaction bytes\")])])]),o(\"li\",[o(\"strong\",[e._v(\"Returns\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Code (uint32)\")]),e._v(\": Response code\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Data ([]byte)\")]),e._v(\": Result bytes, if any\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Log (string)\")]),e._v(\": Debug or error message\")])])]),o(\"li\",[o(\"strong\",[e._v(\"Usage\")]),e._v(\":\"),o(\"br\"),e._v(\"\\nValidate a transaction. This message should not mutate the state.\\nTransactions are first run through CheckTx before broadcast to peers in the\\nmempool layer.\\nYou can make CheckTx semi-stateful and clear the state upon \"),o(\"code\",{pre:!0},[e._v(\"Commit\")]),e._v(\" or\\n\"),o(\"code\",{pre:!0},[e._v(\"BeginBlock\")]),e._v(\",\\nto allow for dependent sequences of transactions in the same block.\")])]),o(\"h5\",{attrs:{id:\"commit\"}},[e._v(\"Commit\")]),o(\"ul\",[o(\"li\",[o(\"strong\",[e._v(\"Returns\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Data ([]byte)\")]),e._v(\": The Merkle root hash\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Log (string)\")]),e._v(\": Debug or error message\")])])]),o(\"li\",[o(\"strong\",[e._v(\"Usage\")]),e._v(\":\"),o(\"br\"),e._v(\"\\nReturn a Merkle root hash of the application state.\")])]),o(\"h5\",{attrs:{id:\"query\"}},[e._v(\"Query\")]),o(\"ul\",[o(\"li\",[o(\"strong\",[e._v(\"Arguments\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Data ([]byte)\")]),e._v(\": The query request bytes\")])])]),o(\"li\",[o(\"strong\",[e._v(\"Returns\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Code (uint32)\")]),e._v(\": Response code\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Data ([]byte)\")]),e._v(\": The query response bytes\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Log (string)\")]),e._v(\": Debug or error message\")])])])]),o(\"h5\",{attrs:{id:\"flush\"}},[e._v(\"Flush\")]),o(\"ul\",[o(\"li\",[o(\"strong\",[e._v(\"Usage\")]),e._v(\":\"),o(\"br\"),e._v(\"\\nFlush the response queue. Applications that implement \"),o(\"code\",{pre:!0},[e._v(\"types.Application\")]),e._v(\"\\nneed not implement this message – it’s handled by the project.\")])]),o(\"h5\",{attrs:{id:\"info\"}},[e._v(\"Info\")]),o(\"ul\",[o(\"li\",[o(\"strong\",[e._v(\"Returns\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Data ([]byte)\")]),e._v(\": The info bytes\")])])]),o(\"li\",[o(\"strong\",[e._v(\"Usage\")]),e._v(\":\"),o(\"br\"),e._v(\"\\nReturn information about the application state. Application specific.\")])]),o(\"h5\",{attrs:{id:\"setoption\"}},[e._v(\"SetOption\")]),o(\"ul\",[o(\"li\",[o(\"strong\",[e._v(\"Arguments\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Key (string)\")]),e._v(\": Key to set\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Value (string)\")]),e._v(\": Value to set for key\")])])]),o(\"li\",[o(\"strong\",[e._v(\"Returns\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Log (string)\")]),e._v(\": Debug or error message\")])])]),o(\"li\",[o(\"strong\",[e._v(\"Usage\")]),e._v(\":\"),o(\"br\"),e._v(\"\\nSet application options. E.g. Key=“mode”, Value=“mempool” for a mempool\\nconnection, or Key=“mode”, Value=“consensus” for a consensus connection.\\nOther options are application specific.\")])]),o(\"h5\",{attrs:{id:\"initchain\"}},[e._v(\"InitChain\")]),o(\"ul\",[o(\"li\",[o(\"strong\",[e._v(\"Arguments\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Validators ([]Validator)\")]),e._v(\": Initial genesis-validators\")])])]),o(\"li\",[o(\"strong\",[e._v(\"Usage\")]),e._v(\":\"),o(\"br\"),e._v(\"\\nCalled once upon genesis\")])]),o(\"h5\",{attrs:{id:\"beginblock\"}},[e._v(\"BeginBlock\")]),o(\"ul\",[o(\"li\",[o(\"strong\",[e._v(\"Arguments\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Height (uint64)\")]),e._v(\": The block height that is starting\")])])]),o(\"li\",[o(\"strong\",[e._v(\"Usage\")]),e._v(\":\"),o(\"br\"),e._v(\"\\nSignals the beginning of a new block. Called prior to any AppendTxs.\")])]),o(\"h5\",{attrs:{id:\"endblock\"}},[e._v(\"EndBlock\")]),o(\"ul\",[o(\"li\",[o(\"strong\",[e._v(\"Arguments\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Height (uint64)\")]),e._v(\": The block height that ended\")])])]),o(\"li\",[o(\"strong\",[e._v(\"Returns\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Validators ([]Validator)\")]),e._v(\": Changed validators with new voting powers (0\\nto remove)\")])])]),o(\"li\",[o(\"strong\",[e._v(\"Usage\")]),e._v(\":\"),o(\"br\"),e._v(\"\\nSignals the end of a block. Called prior to each Commit after all\\ntransactions\")])]),o(\"p\",[e._v(\"See \"),o(\"a\",{attrs:{href:\"https://github.com/tendermint/abci#message-types\"}},[e._v(\"the ABCI repository\")]),e._v(\" for more details.\")]),o(\"h3\",{attrs:{id:\"ibc-packet-delivery-acknowledgement\"}},[e._v(\"IBC Packet Delivery Acknowledgement\")]),o(\"p\",[e._v(\"There are several reasons why a sender may want the acknowledgement of delivery\\nof a packet by the receiving chain. For example, the sender may not know the\\nstatus of the destination chain, if it is expected to be faulty. Or, the sender\\nmay want to impose a timeout on the packet (with the \"),o(\"code\",{pre:!0},[e._v(\"MaxHeight\")]),e._v(\" packet field),\\nwhile any destination chain may suffer from a denial-of-service attack with a\\nsudden spike in the number of incoming packets.\")]),o(\"p\",[e._v(\"In these cases, the sender can require delivery acknowledgement by setting the\\ninitial packet status to \"),o(\"code\",{pre:!0},[e._v(\"AckPending\")]),e._v(\". Then, it is the receiving chain’s\\nresponsibility to confirm delivery by including an abbreviated \"),o(\"code\",{pre:!0},[e._v(\"IBCPacket\")]),e._v(\" in the\\napp Merkle hash.\")]),o(\"p\",[o(\"img\",{attrs:{src:\"https://raw.githubusercontent.com/gnuclear/atom-whitepaper/master/msc/ibc_with_ack.png\",alt:\"Figure of Zone1, Zone2, and Hub IBC withacknowledgement\"}})]),o(\"p\",[e._v(\"First, an \"),o(\"code\",{pre:!0},[e._v(\"IBCBlockCommit\")]),e._v(\" and \"),o(\"code\",{pre:!0},[e._v(\"IBCPacketTx\")]),e._v(\" are posted on “Hub” that proves\\nthe existence of an \"),o(\"code\",{pre:!0},[e._v(\"IBCPacket\")]),e._v(\" on “Zone1”. Say that \"),o(\"code\",{pre:!0},[e._v(\"IBCPacketTx\")]),e._v(\" has the\\nfollowing value:\")]),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"FromChainID\")]),e._v(\": “Zone1”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"FromBlockHeight\")]),e._v(\": 100 (say)\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Packet\")]),e._v(\": an \"),o(\"code\",{pre:!0},[e._v(\"IBCPacket\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Header\")]),e._v(\": an \"),o(\"code\",{pre:!0},[e._v(\"IBCPacketHeader\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"SrcChainID\")]),e._v(\": “Zone1”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"DstChainID\")]),e._v(\": “Zone2”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Number\")]),e._v(\": 200 (say)\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Status\")]),e._v(\": \"),o(\"code\",{pre:!0},[e._v(\"AckPending\")])]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Type\")]),e._v(\": “coin”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"MaxHeight\")]),e._v(\": 350 (say “Hub” is currently at height 300)\")])])]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Payload\")]),e._v(\": <The bytes of a “coin” payload>\")])])])]),o(\"p\",[e._v(\"Next, an \"),o(\"code\",{pre:!0},[e._v(\"IBCBlockCommit\")]),e._v(\" and \"),o(\"code\",{pre:!0},[e._v(\"IBCPacketTx\")]),e._v(\" are posted on “Zone2” that proves\\nthe existence of an \"),o(\"code\",{pre:!0},[e._v(\"IBCPacket\")]),e._v(\" on “Hub”. Say that \"),o(\"code\",{pre:!0},[e._v(\"IBCPacketTx\")]),e._v(\" has the\\nfollowing value:\")]),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"FromChainID\")]),e._v(\": “Hub”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"FromBlockHeight\")]),e._v(\": 300\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Packet\")]),e._v(\": an \"),o(\"code\",{pre:!0},[e._v(\"IBCPacket\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Header\")]),e._v(\": an \"),o(\"code\",{pre:!0},[e._v(\"IBCPacketHeader\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"SrcChainID\")]),e._v(\": “Zone1”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"DstChainID\")]),e._v(\": “Zone2”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Number\")]),e._v(\": 200\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Status\")]),e._v(\": \"),o(\"code\",{pre:!0},[e._v(\"AckPending\")])]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Type\")]),e._v(\": “coin”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"MaxHeight\")]),e._v(\": 350\")])])]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Payload\")]),e._v(\": <The same bytes of a “coin” payload>\")])])])]),o(\"p\",[e._v(\"Next, “Zone2” must include in its app-hash an abbreviated packet that shows the\\nnew status of \"),o(\"code\",{pre:!0},[e._v(\"AckSent\")]),e._v(\". An \"),o(\"code\",{pre:!0},[e._v(\"IBCBlockCommit\")]),e._v(\" and \"),o(\"code\",{pre:!0},[e._v(\"IBCPacketTx\")]),e._v(\" are posted back\\non “Hub” that proves the existence of an abbreviated \"),o(\"code\",{pre:!0},[e._v(\"IBCPacket\")]),e._v(\" on\\n“Zone2”. Say that \"),o(\"code\",{pre:!0},[e._v(\"IBCPacketTx\")]),e._v(\" has the following value:\")]),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"FromChainID\")]),e._v(\": “Zone2”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"FromBlockHeight\")]),e._v(\": 400 (say)\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Packet\")]),e._v(\": an \"),o(\"code\",{pre:!0},[e._v(\"IBCPacket\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Header\")]),e._v(\": an \"),o(\"code\",{pre:!0},[e._v(\"IBCPacketHeader\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"SrcChainID\")]),e._v(\": “Zone1”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"DstChainID\")]),e._v(\": “Zone2”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Number\")]),e._v(\": 200\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Status\")]),e._v(\": \"),o(\"code\",{pre:!0},[e._v(\"AckSent\")])]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Type\")]),e._v(\": “coin”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"MaxHeight\")]),e._v(\": 350\")])])]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"PayloadHash\")]),e._v(\": <The hash bytes of the same “coin” payload>\")])])])]),o(\"p\",[e._v(\"Finally, “Hub” must update the status of the packet from \"),o(\"code\",{pre:!0},[e._v(\"AckPending\")]),e._v(\" to\\n\"),o(\"code\",{pre:!0},[e._v(\"AckReceived\")]),e._v(\". Evidence of this new finalized status should go back to\\n“Zone2”. Say that \"),o(\"code\",{pre:!0},[e._v(\"IBCPacketTx\")]),e._v(\" has the following value:\")]),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"FromChainID\")]),e._v(\": “Hub”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"FromBlockHeight\")]),e._v(\": 301\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Packet\")]),e._v(\": an \"),o(\"code\",{pre:!0},[e._v(\"IBCPacket\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Header\")]),e._v(\": an \"),o(\"code\",{pre:!0},[e._v(\"IBCPacketHeader\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"SrcChainID\")]),e._v(\": “Zone1”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"DstChainID\")]),e._v(\": “Zone2”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Number\")]),e._v(\": 200\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Status\")]),e._v(\": \"),o(\"code\",{pre:!0},[e._v(\"AckReceived\")])]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Type\")]),e._v(\": “coin”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"MaxHeight\")]),e._v(\": 350\")])])]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"PayloadHash\")]),e._v(\": <The hash bytes of the same “coin” payload>\")])])])]),o(\"p\",[e._v(\"Meanwhile, “Zone1” may optimistically assume successful delivery of a “coin”\\npacket unless evidence to the contrary is proven on “Hub”. In the example\\nabove, if “Hub” had not received an \"),o(\"code\",{pre:!0},[e._v(\"AckSent\")]),e._v(\" status from “Zone2” by block\\n350, it would have set the status automatically to \"),o(\"code\",{pre:!0},[e._v(\"Timeout\")]),e._v(\". This evidence of\\na timeout can get posted back on “Zone1”, and any tokens can be returned.\")]),o(\"p\",[o(\"img\",{attrs:{src:\"https://raw.githubusercontent.com/gnuclear/atom-whitepaper/master/msc/ibc_with_ack_timeout.png\",alt:\"Figure of Zone1, Zone2, and Hub IBC with acknowledgement andtimeout\"}})]),o(\"h3\",{attrs:{id:\"merkle-tree-proof-specification\"}},[e._v(\"Merkle Tree & Proof Specification\")]),o(\"p\",[e._v(\"There are two types of Merkle trees supported in the Tendermint/Cosmos\\necosystem: The Simple Tree, and the IAVL+ Tree.\")]),o(\"h4\",{attrs:{id:\"simple-tree\"}},[e._v(\"Simple Tree\")]),o(\"p\",[e._v(\"The Simple Tree is a Merkle tree for a static list of elements. If the number\\nof items is not a power of two, some leaves will be at different levels. Simple\\nTree tries to keep both sides of the tree the same height, but the left may be\\none greater. This Merkle tree is used to Merkle-ize the transactions of a\\nblock, and the top level elements of the application state root.\")]),o(\"pre\",{pre:!0},[o(\"code\",{pre:!0,attrs:{\"v-pre\":\"\"}},[e._v(\"                *\\n               / \\\\\\n             /     \\\\\\n           /         \\\\\\n         /             \\\\\\n        *               *\\n       / \\\\             / \\\\\\n      /   \\\\           /   \\\\\\n     /     \\\\         /     \\\\\\n    *       *       *       h6\\n   / \\\\     / \\\\     / \\\\\\n  h0  h1  h2  h3  h4  h5\\n\\n  A SimpleTree with 7 elements\\n\")])]),o(\"h4\",{attrs:{id:\"iavl-tree\"}},[e._v(\"IAVL+ Tree\")]),o(\"p\",[e._v(\"The purpose of the IAVL+ data structure is to provide persistent storage for\\nkey-value pairs in the application state such that a deterministic Merkle root\\nhash can be computed efficiently. The tree is balanced using a variant of the\\n\"),o(\"a\",{attrs:{href:\"http://en.wikipedia.org/wiki/AVL_tree\"}},[e._v(\"AVL algorithm\")]),e._v(\", and all operations are\\nO(log(n)).\")]),o(\"p\",[e._v(\"In an AVL tree, the heights of the two child subtrees of any node differ by at\\nmost one. Whenever this condition is violated upon an update, the tree is\\nrebalanced by creating O(log(n)) new nodes that point to unmodified nodes of the\\nold tree. In the original AVL algorithm, inner nodes can also hold key-value\\npairs. The AVL+ algorithm (note the plus) modifies the AVL algorithm to keep\\nall values on leaf nodes, while only using branch-nodes to store keys. This\\nsimplifies the algorithm while keeping the merkle hash trail short.\")]),o(\"p\",[e._v(\"The AVL+ Tree is analogous to Ethereum’s \"),o(\"a\",{attrs:{href:\"http://en.wikipedia.org/wiki/Radix_tree\"}},[e._v(\"Patricia\\ntries\")]),e._v(\". There are tradeoffs. Keys do\\nnot need to be hashed prior to insertion in IAVL+ trees, so this provides faster\\nordered iteration in the key space which may benefit some applications. The\\nlogic is simpler to implement, requiring only two types of nodes – inner nodes\\nand leaf nodes. The Merkle proof is on average shorter, being a balanced binary\\ntree. On the other hand, the Merkle root of an IAVL+ tree depends on the order\\nof updates.\")]),o(\"p\",[e._v(\"We will support additional efficient Merkle trees, such as Ethereum’s Patricia\\nTrie when the binary variant becomes available.\")]),o(\"h3\",{attrs:{id:\"transaction-types\"}},[e._v(\"Transaction Types\")]),o(\"p\",[e._v(\"In the canonical implementation, transactions are streamed to the Cosmos hub\\napplication via the ABCI interface.\")]),o(\"p\",[e._v(\"The Cosmos Hub will accept a number of primary transaction types, including\\n\"),o(\"code\",{pre:!0},[e._v(\"SendTx\")]),e._v(\", \"),o(\"code\",{pre:!0},[e._v(\"BondTx\")]),e._v(\", \"),o(\"code\",{pre:!0},[e._v(\"UnbondTx\")]),e._v(\", \"),o(\"code\",{pre:!0},[e._v(\"ReportHackTx\")]),e._v(\", \"),o(\"code\",{pre:!0},[e._v(\"SlashTx\")]),e._v(\", \"),o(\"code\",{pre:!0},[e._v(\"BurnAtomTx\")]),e._v(\",\\n\"),o(\"code\",{pre:!0},[e._v(\"ProposalCreateTx\")]),e._v(\", and \"),o(\"code\",{pre:!0},[e._v(\"ProposalVoteTx\")]),e._v(\", which are fairly self-explanatory and\\nwill be documented in a future revision of this paper. Here we document the two\\nprimary transaction types for IBC: \"),o(\"code\",{pre:!0},[e._v(\"IBCBlockCommitTx\")]),e._v(\" and \"),o(\"code\",{pre:!0},[e._v(\"IBCPacketTx\")]),e._v(\".\")]),o(\"h4\",{attrs:{id:\"ibcblockcommittx\"}},[e._v(\"IBCBlockCommitTx\")]),o(\"p\",[e._v(\"An \"),o(\"code\",{pre:!0},[e._v(\"IBCBlockCommitTx\")]),e._v(\" transaction is composed of:\")]),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"ChainID (string)\")]),e._v(\": The ID of the blockchain\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"BlockHash ([]byte)\")]),e._v(\": The block-hash bytes, the Merkle root which includes the\\napp-hash\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"BlockPartsHeader (PartSetHeader)\")]),e._v(\": The block part-set header bytes, only\\nneeded to verify vote signatures\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"BlockHeight (int)\")]),e._v(\": The height of the commit\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"BlockRound (int)\")]),e._v(\": The round of the commit\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Commit ([]Vote)\")]),e._v(\": The >⅔ Tendermint \"),o(\"code\",{pre:!0},[e._v(\"Precommit\")]),e._v(\" votes that comprise a block\\ncommit\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"ValidatorsHash ([]byte)\")]),e._v(\": A Merkle-tree root hash of the new validator set\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"ValidatorsHashProof (SimpleProof)\")]),e._v(\": A SimpleTree Merkle-proof for proving the\\n\"),o(\"code\",{pre:!0},[e._v(\"ValidatorsHash\")]),e._v(\" against the \"),o(\"code\",{pre:!0},[e._v(\"BlockHash\")])]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"AppHash ([]byte)\")]),e._v(\": A IAVLTree Merkle-tree root hash of the application state\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"AppHashProof (SimpleProof)\")]),e._v(\": A SimpleTree Merkle-proof for proving the\\n\"),o(\"code\",{pre:!0},[e._v(\"AppHash\")]),e._v(\" against the \"),o(\"code\",{pre:!0},[e._v(\"BlockHash\")])])]),o(\"h4\",{attrs:{id:\"ibcpackettx\"}},[e._v(\"IBCPacketTx\")]),o(\"p\",[e._v(\"An \"),o(\"code\",{pre:!0},[e._v(\"IBCPacket\")]),e._v(\" is composed of:\")]),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Header (IBCPacketHeader)\")]),e._v(\": The packet header\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Payload ([]byte)\")]),e._v(\": The bytes of the packet payload. \"),o(\"em\",[e._v(\"Optional\")])]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"PayloadHash ([]byte)\")]),e._v(\": The hash for the bytes of the packet. \"),o(\"em\",[e._v(\"Optional\")])])]),o(\"p\",[e._v(\"Either one of \"),o(\"code\",{pre:!0},[e._v(\"Payload\")]),e._v(\" or \"),o(\"code\",{pre:!0},[e._v(\"PayloadHash\")]),e._v(\" must be present. The hash of an\\n\"),o(\"code\",{pre:!0},[e._v(\"IBCPacket\")]),e._v(\" is a simple Merkle root of the two items, \"),o(\"code\",{pre:!0},[e._v(\"Header\")]),e._v(\" and \"),o(\"code\",{pre:!0},[e._v(\"Payload\")]),e._v(\".\\nAn \"),o(\"code\",{pre:!0},[e._v(\"IBCPacket\")]),e._v(\" without the full payload is called an \"),o(\"em\",[e._v(\"abbreviated packet\")]),e._v(\".\")]),o(\"p\",[e._v(\"An \"),o(\"code\",{pre:!0},[e._v(\"IBCPacketHeader\")]),e._v(\" is composed of:\")]),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"SrcChainID (string)\")]),e._v(\": The source blockchain ID\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"DstChainID (string)\")]),e._v(\": The destination blockchain ID\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Number (int)\")]),e._v(\": A unique number for all packets\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Status (enum)\")]),e._v(\": Can be one of \"),o(\"code\",{pre:!0},[e._v(\"AckPending\")]),e._v(\", \"),o(\"code\",{pre:!0},[e._v(\"AckSent\")]),e._v(\", \"),o(\"code\",{pre:!0},[e._v(\"AckReceived\")]),e._v(\",\\n\"),o(\"code\",{pre:!0},[e._v(\"NoAck\")]),e._v(\", or \"),o(\"code\",{pre:!0},[e._v(\"Timeout\")])]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Type (string)\")]),e._v(\": The types are application-dependent. Cosmos reserves the\\n“coin” packet type\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"MaxHeight (int)\")]),e._v(\": If status is not \"),o(\"code\",{pre:!0},[e._v(\"NoAckWanted\")]),e._v(\" or \"),o(\"code\",{pre:!0},[e._v(\"AckReceived\")]),e._v(\" by this\\nheight, status becomes \"),o(\"code\",{pre:!0},[e._v(\"Timeout\")]),e._v(\". \"),o(\"em\",[e._v(\"Optional\")])])]),o(\"p\",[e._v(\"An \"),o(\"code\",{pre:!0},[e._v(\"IBCPacketTx\")]),e._v(\" transaction is composed of:\")]),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"FromChainID (string)\")]),e._v(\": The ID of the blockchain which is providing this\\npacket; not necessarily the source\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"FromBlockHeight (int)\")]),e._v(\": The blockchain height in which the following packet\\nis included (Merkle-ized) in the block-hash of the source chain\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Packet (IBCPacket)\")]),e._v(\": A packet of data, whose status may be one of\\n\"),o(\"code\",{pre:!0},[e._v(\"AckPending\")]),e._v(\", \"),o(\"code\",{pre:!0},[e._v(\"AckSent\")]),e._v(\", \"),o(\"code\",{pre:!0},[e._v(\"AckReceived\")]),e._v(\", \"),o(\"code\",{pre:!0},[e._v(\"NoAck\")]),e._v(\", or \"),o(\"code\",{pre:!0},[e._v(\"Timeout\")])]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"PacketProof (IAVLProof)\")]),e._v(\": A IAVLTree Merkle-proof for proving the packet’s\\nhash against the \"),o(\"code\",{pre:!0},[e._v(\"AppHash\")]),e._v(\" of the source chain at given height\")])]),o(\"p\",[e._v(\"The sequence for sending a packet from “Zone1” to “Zone2” through the\\n“Hub” is depicted in {Figure X}. First, an \"),o(\"code\",{pre:!0},[e._v(\"IBCPacketTx\")]),e._v(\" proves to\\n“Hub” that the packet is included in the app-state of “Zone1”. Then,\\nanother \"),o(\"code\",{pre:!0},[e._v(\"IBCPacketTx\")]),e._v(\" proves to “Zone2” that the packet is included in the\\napp-state of “Hub”. During this procedure, the \"),o(\"code\",{pre:!0},[e._v(\"IBCPacket\")]),e._v(\" fields are\\nidentical: the \"),o(\"code\",{pre:!0},[e._v(\"SrcChainID\")]),e._v(\" is always “Zone1”, and the \"),o(\"code\",{pre:!0},[e._v(\"DstChainID\")]),e._v(\" is always\\n“Zone2”.\")]),o(\"p\",[e._v(\"The \"),o(\"code\",{pre:!0},[e._v(\"PacketProof\")]),e._v(\" must have the correct Merkle-proof path, as follows:\")]),o(\"pre\",{pre:!0},[o(\"code\",{pre:!0,attrs:{\"v-pre\":\"\"}},[e._v(\"IBC/<SrcChainID>/<DstChainID>/<Number>\\n\")])]),o(\"p\",[e._v(\"When “Zone1” wants to send a packet to “Zone2” through “Hub”, the\\n\"),o(\"code\",{pre:!0},[e._v(\"IBCPacket\")]),e._v(\" data are identical whether the packet is Merkle-ized on “Zone1”,\\nthe “Hub”, or “Zone2”. The only mutable field is \"),o(\"code\",{pre:!0},[e._v(\"Status\")]),e._v(\" for tracking\\ndelivery.\")]),o(\"h2\",{attrs:{id:\"acknowledgements\"}},[e._v(\"Acknowledgements\")]),o(\"p\",[e._v(\"We thank our friends and peers for assistance in conceptualizing, reviewing, and\\nproviding support for our work with Tendermint and Cosmos.\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"https://github.com/zmanian\"}},[e._v(\"Zaki Manian\")]),e._v(\" of\\n\"),o(\"a\",{attrs:{href:\"https://www.skuchain.com/\"}},[e._v(\"SkuChain\")]),e._v(\" provided much help in formatting and\\nwording, especially under the ABCI section\")]),o(\"li\",[o(\"a\",{attrs:{href:\"https://github.com/jtremback\"}},[e._v(\"Jehan Tremback\")]),e._v(\" of Althea and Dustin Byington\\nfor helping with initial iterations\")]),o(\"li\",[o(\"a\",{attrs:{href:\"http://soc1024.com/\"}},[e._v(\"Andrew Miller\")]),e._v(\" of \"),o(\"a\",{attrs:{href:\"https://eprint.iacr.org/2016/199\"}},[e._v(\"Honey\\nBadger\")]),e._v(\" for feedback on consensus\")]),o(\"li\",[o(\"a\",{attrs:{href:\"https://fixingtao.com/\"}},[e._v(\"Greg Slepak\")]),e._v(\" for feedback on consensus and wording\")]),o(\"li\",[e._v(\"Also thanks to \"),o(\"a\",{attrs:{href:\"https://github.com/gleim\"}},[e._v(\"Bill Gleim\")]),e._v(\" and \"),o(\"a\",{attrs:{href:\"http://www.seunghwanhan.com\"}},[e._v(\"Seunghwan\\nHan\")]),e._v(\" for various contributions.\")]),o(\"li\",[o(\"strong\",[e._v(\"Your name and organization here for your contribution\")])])]),o(\"h2\",{attrs:{id:\"citations\"}},[e._v(\"Citations\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"https://bitcoin.org/bitcoin.pdf\"}},[e._v(\"1\")]),e._v(\" Bitcoin: \"),o(\"a\",{attrs:{href:\"https://bitcoin.org/bitcoin.pdf\"}},[e._v(\"https://bitcoin.org/bitcoin.pdf\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"http://zerocash-project.org/paper\"}},[e._v(\"2\")]),e._v(\" ZeroCash: \"),o(\"a\",{attrs:{href:\"http://zerocash-project.org/paper\"}},[e._v(\"http://zerocash-project.org/paper\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"https://github.com/ethereum/wiki/wiki/White-Paper\"}},[e._v(\"3\")]),e._v(\" Ethereum: \"),o(\"a\",{attrs:{href:\"https://github.com/ethereum/wiki/wiki/White-Paper\"}},[e._v(\"https://github.com/ethereum/wiki/wiki/White-Paper\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"https://download.slock.it/public/DAO/WhitePaper.pdf\"}},[e._v(\"4\")]),e._v(\" TheDAO: \"),o(\"a\",{attrs:{href:\"https://download.slock.it/public/DAO/WhitePaper.pdf\"}},[e._v(\"https://download.slock.it/public/DAO/WhitePaper.pdf\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki\"}},[e._v(\"5\")]),e._v(\" Segregated Witness: \"),o(\"a\",{attrs:{href:\"https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki\"}},[e._v(\"https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"https://arxiv.org/pdf/1510.02037v2.pdf\"}},[e._v(\"6\")]),e._v(\" BitcoinNG: \"),o(\"a\",{attrs:{href:\"https://arxiv.org/pdf/1510.02037v2.pdf\"}},[e._v(\"https://arxiv.org/pdf/1510.02037v2.pdf\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"https://lightning.network/lightning-network-paper-DRAFT-0.5.pdf\"}},[e._v(\"7\")]),e._v(\" Lightning Network: \"),o(\"a\",{attrs:{href:\"https://lightning.network/lightning-network-paper-DRAFT-0.5.pdf\"}},[e._v(\"https://lightning.network/lightning-network-paper-DRAFT-0.5.pdf\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"https://github.com/tendermint/tendermint/wiki\"}},[e._v(\"8\")]),e._v(\" Tendermint: \"),o(\"a\",{attrs:{href:\"https://github.com/tendermint/tendermint/wiki\"}},[e._v(\"https://github.com/tendermint/tendermint/wiki\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"https://groups.csail.mit.edu/tds/papers/Lynch/jacm85.pdf\"}},[e._v(\"9\")]),e._v(\" FLP Impossibility: \"),o(\"a\",{attrs:{href:\"https://groups.csail.mit.edu/tds/papers/Lynch/jacm85.pdf\"}},[e._v(\"https://groups.csail.mit.edu/tds/papers/Lynch/jacm85.pdf\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"https://blog.ethereum.org/2014/01/15/slasher-a-punitive-proof-of-stake-algorithm/\"}},[e._v(\"10\")]),e._v(\" Slasher: \"),o(\"a\",{attrs:{href:\"https://blog.ethereum.org/2014/01/15/slasher-a-punitive-proof-of-stake-algorithm/\"}},[e._v(\"https://blog.ethereum.org/2014/01/15/slasher-a-punitive-proof-of-stake-algorithm/\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"http://pmg.csail.mit.edu/papers/osdi99.pdf\"}},[e._v(\"11\")]),e._v(\" PBFT: \"),o(\"a\",{attrs:{href:\"http://pmg.csail.mit.edu/papers/osdi99.pdf\"}},[e._v(\"http://pmg.csail.mit.edu/papers/osdi99.pdf\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"https://bitshares.org/technology/delegated-proof-of-stake-consensus/\"}},[e._v(\"12\")]),e._v(\" BitShares: \"),o(\"a\",{attrs:{href:\"https://bitshares.org/technology/delegated-proof-of-stake-consensus/\"}},[e._v(\"https://bitshares.org/technology/delegated-proof-of-stake-consensus/\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"https://www.stellar.org/papers/stellar-consensus-protocol.pdf\"}},[e._v(\"13\")]),e._v(\" Stellar: \"),o(\"a\",{attrs:{href:\"https://www.stellar.org/papers/stellar-consensus-protocol.pdf\"}},[e._v(\"https://www.stellar.org/papers/stellar-consensus-protocol.pdf\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"https://interledger.org/rfcs/0001-interledger-architecture/\"}},[e._v(\"14\")]),e._v(\" Interledger: \"),o(\"a\",{attrs:{href:\"https://interledger.org/rfcs/0001-interledger-architecture/\"}},[e._v(\"https://interledger.org/rfcs/0001-interledger-architecture/\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"https://blockstream.com/sidechains.pdf\"}},[e._v(\"15\")]),e._v(\" Sidechains: \"),o(\"a\",{attrs:{href:\"https://blockstream.com/sidechains.pdf\"}},[e._v(\"https://blockstream.com/sidechains.pdf\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"https://blog.ethereum.org/2015/08/01/introducing-casper-friendly-ghost/\"}},[e._v(\"16\")]),e._v(\" Casper: \"),o(\"a\",{attrs:{href:\"https://blog.ethereum.org/2015/08/01/introducing-casper-friendly-ghost/\"}},[e._v(\"https://blog.ethereum.org/2015/08/01/introducing-casper-friendly-ghost/\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"https://github.com/tendermint/abci\"}},[e._v(\"17\")]),e._v(\" ABCI: \"),o(\"a\",{attrs:{href:\"https://github.com/tendermint/abci\"}},[e._v(\"https://github.com/tendermint/abci\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"https://github.com/ethereum/EIPs/issues/53\"}},[e._v(\"18\")]),e._v(\" Ethereum Sharding: \"),o(\"a\",{attrs:{href:\"https://github.com/ethereum/EIPs/issues/53\"}},[e._v(\"https://github.com/ethereum/EIPs/issues/53\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"http://www.ds.ewi.tudelft.nl/fileadmin/pds/papers/PerformanceAnalysisOfLibswift.pdf\"}},[e._v(\"19\")]),e._v(\" LibSwift: \"),o(\"a\",{attrs:{href:\"http://www.ds.ewi.tudelft.nl/fileadmin/pds/papers/PerformanceAnalysisOfLibswift.pdf\"}},[e._v(\"http://www.ds.ewi.tudelft.nl/fileadmin/pds/papers/PerformanceAnalysisOfLibswift.pdf\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"http://groups.csail.mit.edu/tds/papers/Lynch/jacm88.pdf\"}},[e._v(\"20\")]),e._v(\" DLS: \"),o(\"a\",{attrs:{href:\"http://groups.csail.mit.edu/tds/papers/Lynch/jacm88.pdf\"}},[e._v(\"http://groups.csail.mit.edu/tds/papers/Lynch/jacm88.pdf\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"https://en.bitcoin.it/wiki/Thin_Client_Security\"}},[e._v(\"21\")]),e._v(\" Thin Client Security: \"),o(\"a\",{attrs:{href:\"https://en.bitcoin.it/wiki/Thin_Client_Security\"}},[e._v(\"https://en.bitcoin.it/wiki/Thin_Client_Security\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"http://vitalik.ca/files/mauve_paper.html\"}},[e._v(\"22\")]),e._v(\" Ethereum 2.0 Mauve Paper: \"),o(\"a\",{attrs:{href:\"http://vitalik.ca/files/mauve_paper.html\"}},[e._v(\"http://vitalik.ca/files/mauve_paper.html\")])])]),o(\"h4\",{attrs:{id:\"unsorted-links\"}},[e._v(\"Unsorted links\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"https://www.docdroid.net/ec7xGzs/314477721-ethereum-platform-review-opportunities-and-challenges-for-private-and-consortium-blockchains.pdf.html\"}},[e._v(\"https://www.docdroid.net/ec7xGzs/314477721-ethereum-platform-review-opportunities-and-challenges-for-private-and-consortium-blockchains.pdf.html\")])])])])}],c=o(\"2877\"),l={},p=Object(c[\"a\"])(l,i,d,!1,null,null,null),m=p.exports,v=function(){var e=this,a=e.$createElement;e._self._c;return e._m(0)},h=[function(){var e=this,a=e.$createElement,o=e._self._c||a;return o(\"section\",[o(\"h1\",{attrs:{id:\"\"}},[e._v(\"코스모스\")]),o(\"p\",[e._v(\"분산원장 네트워크\")]),o(\"p\",[o(\"strong\",[e._v(\"저자:\")])]),o(\"p\",[e._v(\"Jae Kwon \"),o(\"a\",{attrs:{href:\"mailto:jae@tendermint.com\"}},[e._v(\"jae@tendermint.com\")]),o(\"br\"),e._v(\"\\nEthan Buchman \"),o(\"a\",{attrs:{href:\"mailto:ethan@tendermint.com\"}},[e._v(\"ethan@tendermint.com\")])]),o(\"p\",[e._v(\"For discussions, \"),o(\"a\",{attrs:{href:\"https://discord.gg/cosmosnetwork\"}},[e._v(\"join our developer chat\")]),e._v(\"!\")]),o(\"p\",[o(\"strong\",[e._v(\"번역 및 제작:\")])]),o(\"p\",[e._v(\"한승환, 이승민, 김기현, 윤승완, HJ Kim(금마), 김석현\")]),o(\"p\"),o(\"div\",{staticClass:\"minimal-toc\"},[o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#introduction\"}},[e._v(\"서 론 (Introduction)\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#tendermint\"}},[e._v(\"텐더민트 (Tendermint)\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#validators\"}},[e._v(\"검증인 (Validators)\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#consensus\"}},[e._v(\"합의 (Consensus)\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#light-clients\"}},[e._v(\"라이트 클라이언트 (Light Clients)\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#preventing-attacks\"}},[e._v(\"공격 방지 (Preventing Attacks)\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#tmsp\"}},[e._v(\"TMSP\")])])])]),o(\"li\",[o(\"a\",{attrs:{href:\"#cosmos-overview\"}},[e._v(\"코스모스 개요 (Cosmos Overview)\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#tendermint-bft-dpos\"}},[e._v(\"Tendermint-BFT DPoS\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#governance\"}},[e._v(\"거버넌스 (Governance)\")])])])]),o(\"li\",[o(\"a\",{attrs:{href:\"#the-hub-and-zones\"}},[e._v(\"허브와 존 (The Hub and Zones)\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#the-hub\"}},[e._v(\"허브 (The Hub)\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#the-zones\"}},[e._v(\"존 (The Zones)\")])])])]),o(\"li\",[o(\"a\",{attrs:{href:\"#inter-blockchain-communication-ibc\"}},[e._v(\"블록체인 간 커뮤니케이션 (Inter-blockchain Communication (IBC))\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#use-cases\"}},[e._v(\"사용사례 (Use Cases)\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#distributed-exchange\"}},[e._v(\"분산거래소 (Distributed Exchange)\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#pegging-to-other-cryptocurrencies\"}},[e._v(\"다른 화폐에 가치고정 (Pegging to Other Cryptocurrencies)\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#ethereum-scaling\"}},[e._v(\"이더리움 확장성 (Ethereum Scaling)\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#multi-application-integration\"}},[e._v(\"멀티 어플리케이션 통합 (Multi-Application Integration)\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#network-partition-mitigation\"}},[e._v(\"네트워크 분할 완화 (Network Partition Mitigation)\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#federated-name-resolution-system\"}},[e._v(\"연합 명칭 결의 시스템 (Federated Name Resolution System)\")])])])]),o(\"li\",[o(\"a\",{attrs:{href:\"#issuance-and-incentives\"}},[e._v(\"발행과 인센티브 (Issuance and Incentives)\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#the-atom-token\"}},[e._v(\"아톰 토큰 (The Atom Token)\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#fundraiser\"}},[e._v(\"크라우드펀딩 (Fundraiser)\")])])])]),o(\"li\",[o(\"a\",{attrs:{href:\"#limitations-on-the-number-of-validators\"}},[e._v(\"검증인수의 제한 (Limitations on the Number of Validators)\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#becoming-a-validator-after-genesis-day\"}},[e._v(\"제네시스 일이후에 검증인되기 (Becoming a Validator After Genesis Day)\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#penalties-for-validators\"}},[e._v(\"검증인에 대한 처벌 (Penalties for Validators)\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#transaction-fees\"}},[e._v(\"이체 수수료 (Transaction Fees)\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#incentivizing-hackers\"}},[e._v(\"해커에 대한 인센티브 제공 (Incentivizing Hackers)\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#governance-specification\"}},[e._v(\"거버넌스 (Governance Specification)\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#parameter-change-proposal\"}},[e._v(\"파라미터 변경 프로포잘 (Parameter Change Proposal)\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#text-proposal\"}},[e._v(\"텍스트 프로포잘 (Text Proposal)\")])])])]),o(\"li\",[o(\"a\",{attrs:{href:\"#roadmap\"}},[e._v(\"로드맵 (Roadmap)\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#related-work\"}},[e._v(\"관련 연구 (Related Work)\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#consensus-systems\"}},[e._v(\"합의 시스템 (Consensus Systems)\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#classic-byzantine-fault-tolerance\"}},[e._v(\"고전적 비잔틴 장애 저항 (Classic Byzantine Fault Tolerance)\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#bitshares-delegated-stake\"}},[e._v(\"비트쉐어 위임 지분 (BitShares delegated stake)\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#stellar\"}},[e._v(\"스텔라 (Stellar)\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#ng-bitcoinng\"}},[e._v(\"비트코인 NG (BitcoinNG)\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#casper\"}},[e._v(\"캐스퍼 (Casper)\")])])])]),o(\"li\",[o(\"a\",{attrs:{href:\"#horizontal-scaling\"}},[e._v(\"수평 스케일링 (Horizontal Scaling)\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#interledger-protocol\"}},[e._v(\"인터레저 프로토콜 (Interledger Protocol)\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#sidechains\"}},[e._v(\"사이드체인 (Sidechains)\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#ethereum-scalability-efforts\"}},[e._v(\"이더리움 확장성 노력 (Ethereum Scalability Efforts)\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#vs-20-mauve-cosmos-vs-ethereum-20-mauve\"}},[e._v(\"코스모스 vs 이더리움 2.0 Mauve (Cosmos vs Ethereum 2.0 Mauve)\")])])])]),o(\"li\",[o(\"a\",{attrs:{href:\"#general-scaling\"}},[e._v(\"일반 스케일링 (General Scaling)\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#lightning-network\"}},[e._v(\"라이트닝 네트워크 (Lightning Network)\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#segregated-witness\"}},[e._v(\"세그위트 (Segregated Witness)\")])])])])])]),o(\"li\",[o(\"a\",{attrs:{href:\"#appendix\"}},[e._v(\"부 록 (Appendix)\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#fork-accountability\"}},[e._v(\"포크 책임 (Fork Accountability)\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#tendermint-consensus\"}},[e._v(\"텐더민트 합의 (Tendermint Consensus)\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#tendermint-light-clients\"}},[e._v(\"텐더민트 라이트 클라이언트 (Tendermint Light Clients)\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#preventing-long-range-attacks\"}},[e._v(\"장기 공격 방지 (Preventing Long Range Attacks)\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#overcoming-forks-and-censorship-attacks\"}},[e._v(\"포크 및 검열 공격 극복 (Overcoming Forks and Censorship Attacks)\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#tmsp-tmsp-specification\"}},[e._v(\"TMSP 명세 (TMSP specification)\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#appendtx\"}},[e._v(\"AppendTx\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#checktx\"}},[e._v(\"CheckTx\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#commit\"}},[e._v(\"커밋 (Commit)\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#query\"}},[e._v(\"Query\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#flush\"}},[e._v(\"Flush\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#info\"}},[e._v(\"Info\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#setoption\"}},[e._v(\"SetOption\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#initchain\"}},[e._v(\"InitChain\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#beginblock\"}},[e._v(\"BeginBlock\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#endblock\"}},[e._v(\"EndBlock\")])])])]),o(\"li\",[o(\"a\",{attrs:{href:\"#ibc-ibc-packet-delivery-acknowledgement\"}},[e._v(\"IBC 패킷 전송 확인응답 (IBC Packet Delivery Acknowledgement)\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#merkle-tree-proof-specification\"}},[e._v(\"머클 트리와 증명 명세 (Merkle Tree & Proof Specification)\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#simple-tree\"}},[e._v(\"단순 트리 (Simple Tree)\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#iavl-tree\"}},[e._v(\"IAVL+ Tree\")])])])]),o(\"li\",[o(\"a\",{attrs:{href:\"#iavl-key-space-ordered-iteration-inner-nodes-leaf-nodes-iavl-order-of-updates\"}},[e._v(\"와 유사하다. 장단점이 존재한다. 키들은 IAVL+ 트리에 삽입되기 전에 해싱될 필요가 없고, 따라서 키 공간(key space)에서의 빠른 순서반복(ordered iteration)을 제공한다. 로직의 구현이 간편하고 내부 노드(inner nodes)와 잎 노드(leaf nodes)만 필요로 한다. 머클 증명은 일반적으로 짧고 균형 잡힌 이진 트리이다. 반면에 IAVL+ 트리의 머클 루트는 업데이트의 순서(order of updates)에 의존한다.\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#transaction-types\"}},[e._v(\"이체 유형 (Transaction Types)\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#ibcblockcommittx\"}},[e._v(\"IBCBlockCommitTx\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#ibcpackettx\"}},[e._v(\"IBCPacketTx\")])])])])])]),o(\"li\",[o(\"a\",{attrs:{href:\"#acknowledgements\"}},[e._v(\"감사의 글 (Acknowledgements)\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#citations-for-various-contributions\"}},[e._v(\"인용 (Citations) ################ for various contributions.\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#citations\"}},[e._v(\"인용 (Citations)\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#unsorted-links\"}},[e._v(\"기타 링크 (Unsorted links)\")])])])])])]),o(\"p\"),o(\"h2\",{attrs:{id:\"introduction\"}},[e._v(\"서 론 (Introduction)\")]),o(\"p\",[e._v(\"오픈 소스 생태계, 탈중앙화 파일 공유, 퍼블릭 암호화폐 등이 연달아 성공하면서 탈중앙화 인터넷 프로토콜들이 사회경제적 인프라를 근본적으로 개선하는데 사용될 수 있다는 것을 알게 되었다. 비트코인\"),o(\"a\",{attrs:{href:\"https://bitcoin.org/bitcoin.pdf\"}},[e._v(\"[1]\")]),e._v(\"(암호화폐)과 제로캐시\"),o(\"a\",{attrs:{href:\"http://zerocash-project.org/paper\"}},[e._v(\"[2]\")]),e._v(\"(프라이버시용 암호화폐) 같은 특화된 블록체인 어플리케이션들이 있었고, Augur(예측 시장)와 TheDAO\"),o(\"a\",{attrs:{href:\"https://download.slock.it/public/DAO/WhitePaper.pdf\"}},[e._v(\"[4]\")]),e._v(\"(투자 클럽) 같은 무수한 분산 애플리케이션들을 가진 이더리움(Ethereum)\"),o(\"a\",{attrs:{href:\"https://github.com/ethereum/wiki/wiki/White-Paper\"}},[e._v(\"[3]\")]),e._v(\" 같은 범용 스마트 컨트랙트 플랫폼들이 있었다.\")]),o(\"p\",[e._v(\"그러나 지금까지 이런 블록체인들은 엄청난 에너지 비효율, 형편없거나 제한적인 성능, 미성숙한 거버넌스 메커니즘 등을 비롯해 많은 결함들을 경험해왔다. 세그위트(Segregated-Witness)\"),o(\"a\",{attrs:{href:\"https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki\"}},[e._v(\"[5]\")]),e._v(\"와 비트코인 NG(BitconNG)\"),o(\"a\",{attrs:{href:\"https://arxiv.org/pdf/1510.02037v2.pdf\"}},[e._v(\"[6]\")]),e._v(\" 같은 비트코인 이체 처리량을 확장하기 위한 여러 제안들이 있었지만, 완전 감사가능성(complete auditability)을 희생하지 않는 이상, 여전히 단일한 기계의 용량에 제한을 받는 수직적 스케일링 솔루션이다. 라이트닝 네트워크(Lightning Network)\"),o(\"a\",{attrs:{href:\"https://lightning.network/lightning-network-paper-DRAFT-0.5.pdf\"}},[e._v(\"[7]\")]),e._v(\"는 원장에서 특정한 이체들을 완전히 제외하여 비트코인의 확장성에 도움을 주며, 소액결제와 프라이버시 보호형 지급 플랫폼(privacy preserving payment rails)에 적합하지만, 보다 범용적인 확장에는 적합하지 않을 수 있다.\")]),o(\"p\",[e._v(\"가장 이상적인 해결책은 다수의 병렬 블록체인들이 각자의 보안 특성을 유지하면서 호환되는 것이다. 하지만 작업증명의 경우, 이것이 불가능은 아니더라도 상당히 어렵다는 것이 증명되었다. 예를 들어, 병합채굴(merged-mining)은 부모체인의 보안을 위해 수행된 작업을 자녀체인에서 재사용하는 것을 허용하지만, 이체들은 여전히 차례대로 각 노드에 의해 검증돼야 하고, 부모체인의 해시파워 대부분이 자녀체인에서도 병합채굴을 하고 있지 않을 경우, 병합 채굴된(merged mined) 블록체인이 공격에 취약해진다. 우리는 \"),o(\"a\",{attrs:{href:\"http://vukolic.com/iNetSec_2015.pdf\"}},[e._v(\"대안 블록체인 네트워크 아키텍처들(alternative blockchain network architectures)\")]),e._v(\"에 대한 학술적 고찰을 하였고, 그 중 일부에 대해서는 요약과 결점들을 아래의 \"),o(\"a\",{attrs:{href:\"https://github.com/cosmos/cosmos/blob/master/WHITEPAPER.md#related-work\"}},[e._v(\"관련 연구(Related Work)\")]),e._v(\"에서 다루었다.\")]),o(\"p\",[e._v(\"우리는 이 모든 문제들을 해결하는 새로운 블록체인 네트워크 아키텍처인 코스모스(Cosmos)를 제시하고자 한다. 코스모스는 존(zone)이라고 불리는 많은 독립된 블록체인들의 네트워크이다. 존은 텐더민트 코어(Tendermint BFT)\"),o(\"a\",{attrs:{href:\"https://github.com/tendermint/tendermint/wiki\"}},[e._v(\"[8]\")]),e._v(\"를 통해 작동하는데, 텐더민트 코어는 일관적이고 안전한 고성능의 \"),o(\"a\",{attrs:{href:\"https://blog.cosmos.network/tendermint-vs-pbft-12e9f294c9ab\"}},[e._v(\"유사\")]),o(\"a\",{attrs:{href:\"https://blog.cosmos.network/tendermint-vs-pbft-12e9f294c9ab\"}},[e._v(\"PBFT\")]),e._v(\" 합의 엔진을 제공하며, 악의적인 공격자들에게 엄격한 \"),o(\"a\",{attrs:{href:\"https://github.com/cosmos/cosmos/blob/master/WHITEPAPER.md#fork-accountability\"}},[e._v(\"포크 책임(fork-accountability)\")]),e._v(\"을 묻는다. 텐더민트 코어의 BFT 합의 알고리즘은 공개형 지분증명 블록체인들의 확장성을 확보하는데 적합하다.\")]),o(\"p\",[e._v(\"코스모스 상의 첫 번째 존을 코스모스 허브(Cosmos Hub)라고 부른다. 코스모스 허브는 단순한 거버넌스 메커니즘을 통해 네트워크가 적응하고 업그레이드 할 수 있게 하는 ‘다중 자산 지분증명 암호화폐(multi-asset proof-of-stake cryptocurrency)’이다. 그에 더해서, 코스모스 허브는 다른 존들을 연결함으로 확장될 수 있다.\")]),o(\"p\",[e._v(\"코스모스 네트워크의 허브와 존들은 블록체인 간 통신(IBC: inter-blockchain communication) 프로토콜을 통하여 상호 통신한다. 이 프로토콜은 블록체인들을 위한 일종의 가상 UDP 또는 TCP 역할을 한다. 토큰들은 존들 간 거래소의 유동성(exchange liquidity)없이도 안전하고 신속하게 하나의 존에서 다른 존으로 전송될 수 있다. 존들 간 토큰 전송은 코스모스 허브를 통과하며, 코스모스 허브는 각 존이 보유한 토큰 총액을 추적한다. 허브는 각 존을 다른 존들의 실패(failure)로부터 격리한다. 또한 누구든지 코스모스 허브에 새로운 존을 연결할 수 있기 때문에, 존들은 앞으로의 새로운 블록체인 혁신과의 장래 호환성도 확보한다.\")]),o(\"h2\",{attrs:{id:\"tendermint\"}},[e._v(\"텐더민트 (Tendermint)\")]),o(\"p\",[e._v(\"본 절에서는 텐더민트 합의 프로토콜과 이를 통한 애플리케이션을 구축을 위해 사용되는 인터페이스를 다룬다. 상세한 내용은 \"),o(\"a\",{attrs:{href:\"https://github.com/cosmos/cosmos/blob/master/WHITEPAPER.md#appendix\"}},[e._v(\"부록(appendix)\")]),e._v(\"참조\")]),o(\"h3\",{attrs:{id:\"validators\"}},[e._v(\"검증인 (Validators)\")]),o(\"p\",[e._v(\"전형적인 비잔틴 장애 허용 알고리즘들(BFT: Byzantine fault-tolerant algorithms)에서는 각 노드가 동일한 가중치를 갖는다. 텐더민트에서는 노드들이 ‘0 이상’의 *투표권(voting power)*을 가지며, 양(+)의 투표권을 갖는 노드들을 *검증인**(validators)*라고 부른다. 검증인들은 다음 블록에 동의하는 암호서명(cryptographic signature), 즉 *투표(vote)*를 전파(broadcast)함으로써 합의 프로토콜에 참여한다.\")]),o(\"p\",[e._v(\"검증인(validator)들의 투표권은 제네시스(genesis) 당시에 결정되거나 블록체인에 의해 결정론적으로(deterministically) 변경되기도 한다. 예를 들어, 코스모스 허브와 같은 지분증명 애플리케이션에서는 투표권이 담보물로서 본딩된(bonded) 지분 토큰(staking token)의 양에 의해 결정될 수도 있다.\")]),o(\"p\",[o(\"em\",[e._v(\"주: ⅔, ⅓ 과 같은 분수들은 모든 \"),o(\"strong\",[e._v(\"검증인\")]),e._v(\"들이 동등한 가중치를 갖지 않는 한, \"),o(\"strong\",[e._v(\"검증인\")]),e._v(\"들의 총수가 결코 아니라 총 투표권\"),o(\"strong\",[e._v(\"에서 차지하는\")]),o(\"strong\",[e._v(\"비중\")]),e._v('을 가리킨다. 주: +⅔ 는 \" ⅔ 초과\"를 의미하'),o(\"strong\",[e._v(\"며\")]),e._v(', ⅓+은 \"⅓ 이상\"을 의미한다.')])]),o(\"h3\",{attrs:{id:\"consensus\"}},[e._v(\"합의 (Consensus)\")]),o(\"p\",[e._v(\"텐더민트는 DLS 합의 알고리즘에서 파생되는, 부분적 동기 BFT 합의 프로토콜(synchronous BFT consensus protocol)이다\"),o(\"a\",{attrs:{href:\"http://groups.csail.mit.edu/tds/papers/Lynch/jacm88.pdf\"}},[e._v(\"[20]\")]),e._v(\". 텐더민트는 단순함, 성능 그리고 \"),o(\"a\",{attrs:{href:\"https://github.com/cosmos/cosmos/blob/master/WHITEPAPER.md#fork-accountability\"}},[e._v(\"포크 책임(fork-accountability)\")]),e._v(\"이 특징이다. 이 프로토콜은 공개되있고 고정된 세트의 검증인들(a fixed, known set of validators)을 요구하는데, 각 검증인 공개 키에 의해 식별된다. 검증인들은 한 번에 하나의 블록, 즉 이체 목록(a list of transactions)에 대해 합의를 시도한다. 블록에 대한 합의는 라운드(round)를 통해 진행된다. 각 라운드에는 블록을 제안하는 라운드 리더(round-leader), 즉 제안자(proposer)가 있다. 그 다음, 검증인들은 제안된 블록을 받아들일 것인지 또는 다음 라운드로 넘어갈 것인지에 대한 단계별 투표를 진행한다. 각 라운드의 제안자는 검증인 리스트(ordered list)에서 투표권에 비례해 결정론적으로 선택된다.\")]),o(\"p\",[e._v(\"프로토콜에 대한 세부정보는 \"),o(\"a\",{attrs:{href:\"https://github.com/tendermint/tendermint/wiki/Byzantine-Consensus-Algorithm\"}},[e._v(\"여기\")]),e._v(\"를 참조\")]),o(\"p\",[e._v(\"텐더민트 보안은 압도적 다수결(+⅔)과 잠금 메커니즘(locking mechanism)을 통해 최적의 비잔틴 장애 허용을 사용하는 것으로부터 유래한다. 다음을 보장한다.\")]),o(\"ul\",[o(\"li\",[o(\"p\",[e._v(\"안전성을 저해(violation of safety)하기 위해서는 ⅓+의 투표권이 비잔틴이어야 하고, ‘2 개를 초과하는 값들’이 커밋(commit)되어야 한다.\")])]),o(\"li\",[o(\"p\",[e._v(\"프로토콜은 임의의 검증인들 세트가 안전성을 저해하는 데 성공하거나 또는 시도만 하더라도, 이들을 식별할 수 있다. 충돌하는 블록들에 찬성 투표 하거나 정당하지 않은 투표들을 전파하는 이들 모두가 포함된다.\")])])]),o(\"p\",[e._v(\"텐더민트는 강력한 보장들에 더해 성능면에서도 탁월하다. 5 개 대륙 7 개 데이터센터에 분산되어 있는 64 개 노드의 대중품 클라우드(commodity cloud)를 기준으로, 텐더민트 합의는 약 1~2 초의 커밋 지연속도(commit latencies)와 함께 초당 수천 개의 트랜잭션(transaction)를 처리한다. 특히, 검증인들이 실패하거나 악의적으로 조작된 투표를 전파하는 가혹한 공격 상황(adversarial conditions)에서도 초당 1,000 번 수준의 트랜잭션 성능은 가볍게 능가한다. \"),o(\"em\",[e._v(\"아래 그림 참조\")])]),o(\"p\",[o(\"img\",{attrs:{src:\"https://raw.githubusercontent.com/gnuclear/atom-whitepaper/master/images/tendermint_throughput_blocksize.png\",alt:\"Figure of Tendermint throughput performance\"}})]),o(\"h3\",{attrs:{id:\"light-clients\"}},[e._v(\"라이트 클라이언트 (Light Clients)\")]),o(\"p\",[e._v(\"텐더민트 합의 알고리즘의 특징은 단순화된 라이트 클라이언트 보안인데, 모바일 및 사물인터넷에 사용되기도 적합하다. 비트코인 라이트 클라이언트는 ‘블록헤더 체인’들을 동기화(sync)하여 가장 많은 작업증명을 가진 체인을 찾아야 하지만, 텐더민트 라이트 클라이언트는 ‘검증인 세트’의 변경을 추적해서, 최신 블록에서 +⅔ 프리커밋(PreCommit)을 검증하기만 하면 최신 상태를 결정할 수 있다.\")]),o(\"p\",[e._v(\"간결한 라이트 클라이언트 증명들은 \"),o(\"a\",{attrs:{href:\"https://github.com/cosmos/cosmos/blob/master/WHITEPAPER.md#/h\"}},[e._v(\"블록체인 간 통신(inter-blockchain communication)\")]),e._v(\"도 가능하게 한다.\")]),o(\"h3\",{attrs:{id:\"preventing-attacks\"}},[e._v(\"공격 방지 (Preventing Attacks)\")]),o(\"p\",[e._v(\"텐더민트는 ‘\"),o(\"a\",{attrs:{href:\"https://github.com/cosmos/cosmos/blob/master/WHITEPAPER.md#/h\"}},[e._v(\"long-range-nothing-at-stake double spend\")]),e._v(\"’나 \"),o(\"a\",{attrs:{href:\"https://github.com/cosmos/cosmos/blob/master/WHITEPAPER.md#/h\"}},[e._v(\"검열(censorship)\")]),e._v(\" 등을 방지하기 위한 다양한 보호장치를 가지고 있다. 세부사항은 \"),o(\"a\",{attrs:{href:\"https://github.com/cosmos/cosmos/blob/master/WHITEPAPER.md#/h\"}},[e._v(\"부록(appendix)\")]),e._v(\"참조\")]),o(\"h3\",{attrs:{id:\"tmsp\"}},[e._v(\"TMSP\")]),o(\"p\",[e._v('텐더민트 합의 알고리즘은 텐더민트 코어(Tendermint BFT)라는 프로그램에서 구현된다. 텐더민트 코어는 모든 결정적 블랙박스 애플리케이션(deterministic blackbox application)을 분산 복제 블록체인(distributedly replicated blockchain)으로 전환시킬 수 있는 어플리케이션 어그노스틱(application-agnostic) \"합의 엔진\"이다. 아파치 웹 서버나 Nginx 가 CGI 나 FastCGI 를 통해 워드프레스 애플리케이션에 접속하는 것처럼, 텐더민트 코어는 텐더민트 소켓 프로토콜(TMSP: Tendermint Socket Protocol)을 통해 블록체인 애플리케이션들과 연결된다.')]),o(\"p\",[e._v(\"비트코인을 예로 들어보자면, 비트코인은 각 노드가 완전 감사되는 UTXO(fully audited Unspent Transaction Output) 데이터베이스를 유지하는 암호화폐 블록체인이다. 만일 누군가 비트코인과 같은 시스템(Bitcoin-like system)을 TMSP 상에 만들고자 하면, ‘\"),o(\"strong\",[e._v(\"텐더민트 코어\")]),e._v(\"’는 아래와 같은 부분들을 책임진다.\")]),o(\"ul\",[o(\"li\",[o(\"p\",[e._v(\"노드 간 블록 및 이체 공유\")])]),o(\"li\",[o(\"p\",[e._v(\"정규(canomical)/변경배제(immutable) 이체순서의 확립(블록체인)\")])])]),o(\"p\",[e._v(\"반면, ‘\"),o(\"strong\",[e._v(\"TMSP 의 어플리케이션\")]),e._v(\"’은 다음을 책임진다.\")]),o(\"ul\",[o(\"li\",[o(\"p\",[e._v(\"UTXO 데이터베이스 유지\")])]),o(\"li\",[o(\"p\",[e._v(\"이체의 암호서명 검증\")])]),o(\"li\",[o(\"p\",[e._v(\"존재하지 않는 이체를 지불방지\")])]),o(\"li\",[o(\"p\",[e._v(\"클라이언트들의 UTXO 데이터베이스에 대한 query 허용\")])])]),o(\"p\",[e._v(\"텐더민트는 애플리케이션 프로세스와 합의 프로세스 사이에 매우 단순한 API 를 제공함으로써 블록체인 설계를 분해할 수 있다.\")]),o(\"h2\",{attrs:{id:\"cosmos-overview\"}},[e._v(\"코스모스 개요 (Cosmos Overview)\")]),o(\"p\",[e._v(\"코스모스는 독립 병렬 블록체인들의 네트워크이며, 해당 블록체인들은 각기 텐더민트와 같은 전형적인 BFT 합의 알고리즘에 기반한다\"),o(\"a\",{attrs:{href:\"https://bitcoin.org/bitcoin.pdf\"}},[e._v(\"1\")]),e._v(\".\")]),o(\"p\",[e._v(\"코스모스의 최초 블록체인이 곧 코스모스 허브가 된다. 코스모스 허브는 블록체인 간 통신(IBC) 프로토콜을 통해 다른 많은 블록체인들(즉, \"),o(\"em\",[e._v(\"존들\")]),e._v(\")과 연결된다. 코스모스 허브는 수많은 유형의 토큰을 추적하고, 연결된 각 존의 토큰 총 수를 기록한다. 모든 존들 간의 코인 전송은 코스모스 허브를 거치기 때문에 토큰은 존들 간의 유동 거래소(liquid exchange) 방식 없이\")]),o(\"p\",[e._v(\"이 아키텍처는 어플리케이션 상호운용성, 확장성 그리고 무결절 업그레이드 가능성(seamless upgradability)을 포함한 블록체인이 직면한 많은 문제들을 해결한다. 예를 들면, Bitcoind, Go-Ethereum, 크립토노트(CryptoNote), ZCash 등을 포함한 임의의 블록체인 시스템으로부터 파생된 존들이 코스모스 허브에 연결될 수 있다. 이러한 존들을 통해 코스모스는 전역 이체(global transaction) 요구를 충족시킬 때까지 무한히 확장할 수 있다. 그리고 존들은 탈중앙화 거래소(distributed exchange)에도 매우 적합하며, 실제로 지원될 것이다.\")]),o(\"p\",[e._v(\"코스모스는 단일 분산 원장에 불과한 것이 아니며, 코스모스 허브도 폐쇄형 플랫폼(walled garden, 울타리 친 정원)이 아니다. 오히려 코스모스는 미래 금융 시스템의 새로운 기초가 될 수 있는 개방형 분산원장 네트워크를 위한 프로토콜이며, 암호학 원리, 잘 설계된 경제(sound economics), 합의 이론, 투명성, 책임(accountability) 등의 원칙에 기반하고 있다.\")]),o(\"h3\",{attrs:{id:\"tendermint-bft-dpos\"}},[e._v(\"Tendermint-BFT DPoS\")]),o(\"p\",[e._v(\"코스모스 허브는 텐더민트 BFT 합의 알고리즘에 기반하는, 코스모스 네트워크 내 최초의 퍼블릭 블록체인이다. 텐더민트 오픈 소스 프로젝트는 비트코인의 작업증명(PoW) 합의 알고리즘이 지닌 속도, 확장성, 환경 등의 문제를 처리하기 위해서 2014 년에 탄생했다. 1988 년 MIT 에서 개발한 증명된 BFT 알고리즘들을 활용하고 개선해서, 텐더민트 팀은 제 1 세대 지분증명(PoS) 암호화폐들이 겪은 Nothing-at-stake 문제를 해결하는 지분증명 암호화폐를 최초로 개념증명하였다.\")]),o(\"p\",[e._v(\"오늘날, 대부분의 비트코인 모바일 지갑들은 이체 검증(transaction verification)을 제공하는 신뢰할 수 있는 서버(trusted server)를 이용한다. 이는 PoS 가 여러번의 이체확인(confirmation)을 기다려야만, 이체확정된 것으로 간주되기 때문이다. 이중지불(double-spend) 공격이 이미 코인베이스(CoinBase) 같은 서비스들에서 일어난 바 있다.\")]),o(\"p\",[e._v(\"다른 블록체인 합의 시스템들과는 달리 텐더민트는 즉각적이고 안전한(provably-secure) 모바일-클라이언트 지불 검증을 제공한다. 텐더민트는 분기(fork)할 수 없도록 설계되었기 때문에, 모바일 지갑들에서 즉시 이체확인이 가능하며 실제로 신뢰 없는(trustless) 지불을 실현한다. 이는 IoT 관련 어플리케이션들에도 큰 영향을 줄 것이다.\")]),o(\"p\",[e._v(\"(비트코인 채굴자들과 유사한 역할이지만 그 대신에 암호서명을 통해 투표하는) 코스모스의 검증인들은 블록을 커밋 할 책임이 있는 안전한 전용 머신들이어야 한다. 검증인이 아닌 이들(non-validators)은 ‘아톰’이라고 부르는 지분 토큰(staking tokens)을 임의의 검증인에게 위임하여 일정한 블록 수수료(block fees)와 아톰 보상(atom rewards)을 얻을 수는 있으나, 위임 검증인(delegate validator)이 해킹당하거나 프로토콜을 위반할 경우, 처벌을 받게 되는 리스크가 있다. 텐터민트 BFT 합의의 입증된 안정성 보장과 (검증인 및 위임자) 주주들의 담보 보증(collateral deposit)은 노드들에 심지어는 라이트 클라이언트들에게 증명 가능하고 정량화 가능한 보안성(provable, quantifiable security)을 제공한다.\")]),o(\"h3\",{attrs:{id:\"governance\"}},[e._v(\"거버넌스 (Governance)\")]),o(\"p\",[e._v(\"‘공개형 분산원장’은 헌법(constitution)과 거버넌스 시스템(governance system)을 가져야 한다. 비트코인은 업그레이드 등의 조정을 위해 일정 부분 비트코인 재단(Bitcoin Foundation)이나 채굴에 의존하지만, 진행속도가 느리다. 이더리움의 경우에는 The DAO 해킹의 처리를 위한 하드포크 후 ETH 와 ETC 로 분할되었는데, 이는 사전에 그런 의사결정을 하기 위한 사회적 계약이나 메커니즘이 존재하지 않았기 때문이다.\")]),o(\"p\",[e._v(\"코스모스 허브의 검증인과 위임자는 코스모스 허브의 정책들을 위한 ‘코드가 아니라 평이한 언어로 된 헌법(규칙)’을 표결에 부쳐 수정할 뿐 아니라 ‘블록 가스 한계(block gas limit)’ 같은 시스템의 사전에 설정된 제한들을 업그레이드를 통해 자동으로 변경하는 프로포잘(proposals)도 표결에 부칠 수 있다. 헌법은 The DAO 사건 같은 절도 및 버그관련 문제들의 이해관계자들이 응집(cohesion)할 수 있도록 도우며, 보다 신속하고 깔끔한 해결책이 나올 수 있도록 한다.\")]),o(\"p\",[e._v(\"각 존 역시 자체적인 헌법과 거버넌스 메커니즘을 가질 수 있다. 예를 들어, 코스모스 허브가 변경 배제(immutability) -코스모스 허브의 노드 실행 버그를 제외하고는 롤백 금지(no roll-backs)와 같은- 헌법을 적용한 경우라면, 각 존은 절도와 버그를 위한 롤백 관련 자체 정책을 설정할 수 있다.\")]),o(\"p\",[e._v(\"코스모스 네트워크는 상이한 정책의 존들 간 상호운용성을 확보함으로 사용자들에게 궁극적 자유와 실험의 기회를 제공한다.\")]),o(\"h2\",{attrs:{id:\"the-hub-and-zones\"}},[e._v(\"허브와 존 (The Hub and Zones)\")]),o(\"p\",[e._v(\"여기서는 탈중앙화(decentralization)와 확장성(scalability)의 새로운 모델을 설명한다. 코스모스는 텐더민트에 기반한 복수의 블록체인들의 네트워크이다. 기존의 프로포잘들이 전역적 이체 순서(total global transaction ordering)를 가진 ‘단일 블록체인’을 목표로 하는 반면에, 코스모스는 수많은 블록체인들이 상호 병행 실행(run concurrently)하는 동시에 상호운용성을 확보하도록 한다.\")]),o(\"p\",[e._v(\"기본적으로 코스모스 허브는 ‘존(zone)’이라고 부르는 여러 독립된 블록체인들을 관리한다(‘존’은 ‘샤드(shard)’로도 불림, 데이터베이스의 스케일링 기법인 ‘샤딩(sharding)’참조). 존들은 최근의 블록 커밋들을 끊임없이 허브로 전송하며, 허브는 이를 통해 항상 최신 상태를 유지한다. 마찬가지로, 각 존도 허브의 상태를 제공받는다(다만 허브를 통한 간접적인 경우를 제외하고는 존들끼리는 서로 이러한 작업을 하지 않는다). 존들은 정보의 송신과 수신의 증거인 머클 증명(Merkle-proofs)을 포스팅함으로 정보의 패킷들을 교환한다. 이 메커니즘을 ‘블록체인 간 통신(inter-blockchain communication)’ 또는 IBC 라고 칭한다.\")]),o(\"p\",[o(\"img\",{attrs:{src:\"https://raw.githubusercontent.com/gnuclear/atom-whitepaper/master/images/hub_and_zones.png\",alt:\"Figure of hub and zones acknowledgement\"}})]),o(\"p\",[e._v(\"어느 존이든 스스로 허브가 되어 비순환 그래프(acyclic graph)를 형성할 수 있으나 명료성을 위해 우리는 단지 하나의 허브와 많은 비-허브 존들이 존재하는 단순한 구성만 설명할 것이다.\")]),o(\"h3\",{attrs:{id:\"the-hub\"}},[e._v(\"허브 (The Hub)\")]),o(\"p\",[e._v(\"코스모스 허브는 멀티자산 분산 원장(multi-asset distributed ledger)을 관리하는 블록체인인데, 여기서 토큰은 개인 사용자들이나 존 자체가 보유할 수 있다. 이 토큰들은 ‘코인 패킷(coin packet)’이라 부르는 특수 IBC 패킷을 통해 하나의 존에서 다른 존으로 이동할 수 있다. 허브는 존들에 걸쳐 각 토큰 총액의 전역적 불변성(global invariance)을 보존한다. IBC 코인 패킷 이체는 반드시 송신자, 허브 및 수신자 블록체인에 의해 커밋 되어야 한다.\")]),o(\"p\",[e._v(\"코스모스 허브는 전체 시스템을 위한 토큰의 ‘중앙 원장’ 역할을 하기 때문에, 보안이 무엇보다도 중요하다. 각 존은 단 4 명(혹은 BFT 합의가 필요하지 않을 경우에는 훨씬 더 적은 수)의 검증인으로도 안전해지는 텐더민트 블록체인일 수 있는 반면, 허브는 대륙 네트워크 분할(continental network partition)이나 국가 주도적 공격(nation-state sponsored attack) 같은 가장 심각한 공격 시나리오들에도 견딜 수 있어야 한다. 따라서 전역적으로 탈중앙화된 검증인 세트로 보안되어야 한다.\")]),o(\"h3\",{attrs:{id:\"the-zones\"}},[e._v(\"존 (The Zones)\")]),o(\"p\",[e._v(\"코스모스 존은 허브와 IBC 메시지를 교환하는 독립 블록체인이다. 허브의 관점에서, 존은 IBC 패킷을 사용하여 토큰을 송수신할 수 있는 ‘멀티자산 동적구성원 멀티시그너처 계정(multi-asset dynamic-membership multi-signature account)’이다. 암호화폐 계정과 마찬가지로 존은 보유 중인 토큰보다 더 많은 토큰을 전송할 수 없지만, 토큰을 보유한 다른 존으로부터 토큰을 수신할 수는 있다. 존은 토큰 유형들의 ‘소스(source)’로 지정되어, 해당 토큰을 추가 공급할 수도 있다.\")]),o(\"p\",[e._v(\"코스모스 허브의 아톰들은 허브의 검증인이 아니라, ‘허브에 연결된 존의 검증인’들에 의해 스테이킹될 수도 있다. 이 존들에 대한 이중지불 공격은 텐더민트의 포크 책임인 아톰의 대폭 감소(slashing)라는 결과를 가져오게 되는 반면, 투표권의 +⅔ 이 비잔틴인 존이라면 무효한 상태(invalid state)를 커밋할 수 있다. 코스모스 허브는 다른 존들에 커밋 된 이체들은 검증하거나 실행하지 않으므로, 자신이 신뢰하는 존으로 토큰을 전송하는 것은 사용자들의 책임이다. 장래에는 코스모스 허브의 거버넌스 시스템이 존 실패(failures)를 위한 허브 개선 프로포잘을 만들수도 있다. 예를 들면, 공격이 탐지될 때, 일부(또는 전체) 존들의 아웃바운드 토큰 전송을 억제함으로 ‘긴급 서킷 브레이킹(토큰 전송 일시중단)’을 할 수도 있다.\")]),o(\"h2\",{attrs:{id:\"inter-blockchain-communication-ibc\"}},[e._v(\"블록체인 간 커뮤니케이션 (Inter-blockchain Communication (IBC))\")]),o(\"p\",[e._v(\"여기서는 허브와 존 간의 상호 통신방법을 설명한다. 예를 들어, ‘존 1(Zone 1)’, ‘존 2(Zone 2)’와 ‘허브(Hub)’의 세 블록체인이 있고, ‘존 1’이 ‘허브’를 통과하여 ‘존 2’로 가는 패킷을 만들고자 한다. 패킷이 하나의 블록체인에서 다른 블록체인으로 이동하기 위해, 송신 체인(sending chain)이 수신지로 가는 패킷을 발행했다는 증거를 수신 체인(receiving chain)에 포스팅한다. 수신 체인이 이 증거를 확인하기 위해서는 송신자의 블록 헤더(block headers) 정보를 알아야 한다. 이 메커니즘은 사이드체인(sidechain)이 사용하는 메커니즘과 유사한데, 상호 작용하는 두 체인이 ‘존재 증명 데이터그램의 양방향 스트림(a bidirectional stream of proof-of-existence datagram)’을 통해 서로를 ‘인식’해야한다 (이체).\")]),o(\"p\",[e._v(\"IBC 프로토콜을 두 가지 이체 방식을 통해 정의할 수 있다: 블록체인이 최근의 블록 해시를 임의의 관측자에게 증명하는 IBCBlockCommitTx 이체, 그리고 블록체인이 송신자의 어플리케이션이 패킷을 머클증명을 통해 최근 블록해시로 전파했다는 것을 증명하는 IBCPacketTx 이체\")]),o(\"p\",[e._v(\"IBC 구동방식을 IBCBlockCommitTx 와 IBCPacketTx 로 분할함으로, 수신체인의 내부 수수료 시장 메커니즘(native fee market-mechanism)이 커밋될(승인될) 패킷을 결정하도록 하며, 송신체인이 얼마나 많은 아웃바운드 패킷들을 허용할 지 자유롭게 정할 수 있도록 한다.\")]),o(\"p\",[o(\"img\",{attrs:{src:\"https://raw.githubusercontent.com/gnuclear/atom-whitepaper/master/msc/ibc_without_ack.png\",alt:\"Figure of Zone1, Zone2, and Hub IBC without acknowledgement\"}})]),o(\"p\",[e._v(\"위의 예에서, ‘존 1’의 블록해시를 (또는 ‘존 2’ 상의 ‘허브’의 블록 해시를) 업데이트 하기 위해서는, IBCBlockCommitTx 이체가 ‘존 1’의 블록해시와 함께 ‘허브’에 (또는 ‘허브’의 블록해시와 함께 ‘존 2’에) 반드시 포스팅 되어야 한다.\")]),o(\"p\",[o(\"em\",[e._v(\"두 IBC 이체 유형에 관한 보다 상세한 정보는 \"),o(\"a\",{attrs:{href:\"#ibcblockcommittx\"}},[e._v(\"IBCBlockCommitTx\")]),e._v(\" 와 \"),o(\"a\",{attrs:{href:\"#ibcpacketcommit\"}},[e._v(\"IBCPacketTx\")]),e._v(\" 를 참조.\")])]),o(\"h2\",{attrs:{id:\"use-cases\"}},[e._v(\"사용사례 (Use Cases)\")]),o(\"h3\",{attrs:{id:\"distributed-exchange\"}},[e._v(\"분산거래소 (Distributed Exchange)\")]),o(\"p\",[e._v(\"비트코인이 원장을 복사하고 분산하여 더 안전해지는 것처럼, 거래소도 블록체인 상에 올림으로 내/외부의 해킹으로부터 더욱 안전해질 수 있다.\")]),o(\"p\",[e._v(\"현재 커뮤니티에서 칭하는 탈중앙화 거래소(decentralized exchange)는 ‘아토믹 크로스체인(Atomic Cross-Chain, AXC)’ 이체에 기반하고 있다. 이를 통해 두 명의 유저는 두 개의 서로 다른 원장(체인)에서 이체를 일으키고 해당 이체는 동시에 각 원장에 기록되거나 또는 그 어떤 원장에도 기록되지 않는다. 예를 들어, AXC 를 이용하면 두 명의 유저가 서로의 이더와 비트코인(또는 서로 다른 원장의 토큰)을 교환할 수 있다. AXC 기반 거래소의 장점은, 두 명의 유저 모두 서로 또는 거래소 서비스를 신뢰할 필요가 없다는 점이다. 그러나 거래를 위해서는 양 당사자가 반드시 온라인 상태여야만 한다는 점이 치명적인 단점이다.\")]),o(\"p\",[e._v(\"또 다른 방식의 탈중앙화 거래소는 자체적인 분산원장에서 작동하는 ‘대규모의 복제 분산 거래소(a mass-replicated distributed exchange)’이다. 유저는 ‘지정가 주문(limit order)’을 내고 컴퓨터를 종료한다. 이 경우, 유저가 온라인 상태가 아니어도 거래가 성사된다. 블록체인이 해당 거래를 매칭시키고 완료시키는 것이다.\")]),o(\"p\",[e._v(\"중앙화된 거래소의 경우, 이미 많은 지정가 주문이 걸려 있고 따라서 유저들을 더 쉽게 유치하게 된다. 거래소에서 유동성은 더 큰 유동성을 야기하고 강한 네트워크 효과(또는 승자독식)를 일으키게 된다. 현재 24 시간 거래량 기준, Poloniex 가 $20M 으로 가장 많은 거래량을 가지고 있고, Bitfinex 가 $5M 로 그 다음에 위치하고 있다. 이러한 사례를 생각해보면, AXC 기반의 새로운 탈중앙화 거래소가 중앙화된 거래소를 이길 가능성은 거의 없다. 탈중앙화된 거래소가 중앙화된 거래소와 경쟁하기 위해서는 많은 거래량을 확보해야 한다. 오직 ‘분산 거래소(distributed exchange)’만이 그것을 가능하게 할 수 있다.\")]),o(\"p\",[e._v(\"텐더민트는 또한 매우 빠른 이체 커밋을 제공한다. 일관성의 훼손없이 빠른 완결성을 우선순위에 둠으로써 코스모스 상의 존(zone)들의 이체를 빠르게 완결한다. 이는 거래소의 이체나 IBC 를 통한 존들 간의 이체에 동일하게 적용된다.\")]),o(\"p\",[e._v(\"현재 암호화폐 거래소들의 상황을 고려할 때, 코스모스를 이용해 분산거래소(일명 ‘코스모스 덱스’)를 만드는 것은 매우 적절하다. 코스모스 덱스(Cosmos DEX)의 이체 처리량과 커밋 속도는 중앙화된 거래소에 필적한다. 유저들은 지정가 주문을 올리고, 이 주문은 당사자의 온라인 상태여부에 관계없이 완결된다. 트레이더들은 텐더민트, 코스모스 허브, 그리고 IBC 를 통해, 빠른 속도로 자금을 존(zone)들이나 거래소로 이동시킬 수 있다.\")]),o(\"h3\",{attrs:{id:\"pegging-to-other-cryptocurrencies\"}},[e._v(\"다른 화폐에 가치고정 (Pegging to Other Cryptocurrencies)\")]),o(\"p\",[e._v(\"특권 존(privileged zone)은 다른 암호화폐를 페깅한 토큰의 소스 역할을 할 수 있다. 페그(peg)는 코스모스 허브와 존의 관계와 본질적으로 유사한데, 코스모스 허브와 존 모두는 토큰이 한 쪽에서 다른 쪽으로 이동했다는 증명을 검증하기 위해 상대방의 최신 블록을 반드시 알고 있어야 한다. 코스모스 네트워크의 페그 존(peg-zone)은 다른 암호화폐뿐 아니라 허브도 추적한다. 페그 존을 통한 간접참조(indirection)는 허브의 로직이 단순하면서도 비트코인의 작업증명 채굴 같은 다른 블록체인 합의 전략들에 독립적(agnostic)인 상태를 유지할 수 있게 한다.\")]),o(\"p\",[e._v(\"예를 들어, 허브의 검증인 세트와 동일한 어떤 검증인 세트를 갖는 존이 이더-페그(ether-peg) 역할을 할 수 있을 것이다. 여기서 ‘페그-존(peg-zone)’의 TMSP 애플리케이션은 ‘외부 이더리움 블록체인의 페그 컨트랙트(peg contract)’와 IBC 메시지를 교환할 수 있다. 이더 보유자들이 이더리움 상의 페그 컨트랙트로 이더를 전송함으로 코스모스의 페그 존에 이더를 전송하게 된다. 이렇게 이더가 일단 한번 수신되면, 페그 컨트랙트가 페그 존으로부터 IBC 패킷을 수신하지 않는 한 이더는 인출되지 못 한다. 페그 컨트랙트에서 특정 이더리움 계정으로부터 이더를 수신했다는 IBC 패킷을 페그 존으로 보내면, 이에 대응되는 계정이 동일한 잔고와 함께 페그 존 위에 생성된다. 페그 존 위의 (페깅된) 이더를 허브로 또는 허브로부터 전송할 수 있으며, 페깅 이더를 폐기하면서 이더리움 상의 특정 인출 주소로 그 이더를 도로 전송할 수 있고, 이더의 인출을 허용하기 위해 페그 존에서 이체가 발생했음을 증명하는 IBC 패킷을 이더리움 페그 컨트랙트에.\")]),o(\"p\",[e._v(\"물론 그런 페깅 컨트랙트는 악의적 검증인 세트를 통한 리스크에 노출되어 있다. ⅓+ 비잔틴 투표권이 분기(fork)를 만들어 페깅된 이더를 페그 존에 유지하는 동시에 이더리움 위의 페그 컨트랙트를 통해 이더를 인출할 수도 있다. 더 좋지 않은 시나리오는 +⅔ 비잔틴 투표권이, 페그 존의 원래 페깅 로직으로부터 이탈하여, 페그 컨트랙트로 보내지는 모든 이더를 노골적으로 훔칠 수도 있다는 것이다.\")]),o(\"p\",[e._v(\"이런 문제들은 페그를 ‘완전 책임적(totally accountable)’으로 설계하여 해결할 수 있다. 예를 들면, 허브나 원점(페깅될 토큰의 원래 블록체인)으로부터의 모든 IBC 패킷이 페그-존의 응답(acknowledgment)을 요구하도록 할 수도 있을 것이다. 허브와 원점은 페그-존 검증인들이 담보물(collateral)을 포스팅(post) 할 수 있게 하고, 독립 감사들(independent auditors)의 도전을 허용하기 위해 페그 컨트랙트로부터 나가는 토큰 전송은 지연되도록 하는 식이다. 그리고 담보 언본딩(unbonding) 기간은 충분히 길어야 한다. 이 부분은 미확정 상태로 두고, 누구든지 향후에 관련 제안을 해서 코스모스 거버넌스 시스템에 승인을 받아 적용할 수 있도록 한다.\")]),o(\"p\",[e._v(\"정치사회적 분위기가 아직은 갖추어져 있지 않긴 하지만, 국가 통화의 책임기관들, 특히 은행들의 조합으로부터 검증인 세트를 형성함으로 국가의 법정통화에 페깅하는 존들을 허용할 수도 있다. 물론, 강력한 법체계에 기반하는 화폐만 허용하도록 충분한 고려가 되어야 할 것이며, 충분히 큰 규모의 공증인이나 기관들을 통해 감사시스템을 강제하여 은행들의 활동을 관리해야할 것이다.\")]),o(\"p\",[e._v(\"이렇게 통합이 된다면, 참여 은행에 은행계좌가 있는 누구든지 존에 있는 은행계좌로부터 존에 있는 다른 계좌나 허브나 혹은 또 다른 존으로 법정화폐를 자유롭게 이동시킬 수 있을 것이다. 이 점에서 코스모스 허브는 법정화폐들과 암호화폐들 간의 전달자 역할을 하고, 지금까지 상호운용성을 거래소(exchanges)의 영역으로 한정시킨 장벽들을 제거할 수 있다.\")]),o(\"h3\",{attrs:{id:\"ethereum-scaling\"}},[e._v(\"이더리움 확장성 (Ethereum Scaling)\")]),o(\"p\",[e._v(\"이더리움의 해결되지 않은 쟁점 하나는 스케일링 문제를 해결하는 방법이다. 현재는 각 이더리움 노드들이 모든 이체를 처리하고 또 모든 상태를 저장한다. \"),o(\"a\",{attrs:{href:\"https://docs.google.com/presentation/d/1CjD0W4l4-CwHKUvfF5Vlps76fKLEC6pIwu1a_kC_YRQ/mobilepresent?slide=id.gd284b9333_0_28\"}},[e._v(\"링크\")])]),o(\"p\",[e._v(\"텐더민트는 이더리움의 작업증명보다 훨씬 빠르게 블록들을 커밋 할 수 있기 때문에, 텐더민트 합의에 기반한 페깅된 이더(pegged-ether)를 운용하는 EVM 존들은 이더리움 블록체인에 보다 높은 성능을 제공할 수 있다. 뿐만 아니라, 비록 코스모스 허브 및 IBC 패킷 자체는 임의계약 로직 실행을 허용하지 않지만, 서로 다른 존들에서 실행되는 이더리움 컨트랙트 간 토큰이동의 조정을 위해 사용되며, 샤딩(sharding)을 통한 토큰 중심 이더리움 스케일링을 위한 기반을 제공할 수 있다.\")]),o(\"h3\",{attrs:{id:\"multi-application-integration\"}},[e._v(\"멀티 어플리케이션 통합 (Multi-Application Integration)\")]),o(\"p\",[e._v(\"코스모스 존들은 존의 생성 초기에 정해진 어플리케이션 로직에 따라 작동하며, 거버넌스를 통해 지속적으로 업데이트될 수 있다. 그런 유연성 덕분에 코스모스 존들이 이더리움이나 비트코인 같은 다른 암호화폐들의 페그 역할을 하고, 동일한 코드베이스를 활용하면서도 상이한 검증인 세트와 초기 분포(initial distribution)를 갖는 블록체인 파생상품(derivatives)을 만들 수 있다. 이를 통해 이더리움, 제로캐시, 비트코인, 크립토노트 등과 같은 기존의 암호화폐 프레임워크들이 ‘고성능 합의 엔진(텐더민트 코어)’을 통해 공통의 네트워크에서 사용될 수 있으며, 엄청난 상호운용성의 기회를 가질 수 있게 된다. 뿐만 아니라, 멀티 자산 블록체인으로서, 단일 이체는 다수의 인풋과 아웃풋을 포함할 수 있고, 어떤 토큰이든지 인풋이 될 수 있기 때문에, 주문들은 다른 플랫폼들을 통해 매칭되더라도 코스모스가 직접 탈중앙화 거래소(exchange)를 위한 플랫폼 역할을 할 수 있다. 또한 존은 오더북 기능이 있는 ‘분산형 장애-허용 거래소’ 역할을 할 수도 있는데, 해킹 공격에 당하곤 하는 기존의 중앙집중형 암호화폐 거래소들에 대한 강력한 개선책이 될 수 있다.\")]),o(\"p\",[e._v(\"존은 또한 기업 및 정부 시스템들의 블록체인 버전(blockchain-backed versions)을 지원할 수도 있다. 전통적으로 조직에 의해 운영된 서비스에 대해서 기반이 된느 부분은 통제권을 유지하고, 특정 부분만을 존 위의 TMSP 애플리케이션으로 운영한다면, 퍼블릭 코스모스 네트워크의 보안과 상호운용성을 활용할 수 있게 된다. 따라서 코스모스는 블록체인 기술을 활용하고자 하지만 (분산된) 제 3 자에게 통제를 완전히 내주는 것은 경계하는 조직들에 일거양득을 제공할 수 있다.\")]),o(\"h3\",{attrs:{id:\"network-partition-mitigation\"}},[e._v(\"네트워크 분할 완화 (Network Partition Mitigation)\")]),o(\"p\",[e._v(\"일각에서는 텐더민트 같은 ‘일관성선호 합의 알고리즘(consistency-favouring consensus algorithm)’에 심각한 문제가 있다고 주장한다. +⅔ 투표권(⅓+은 오프라인)을 갖는 분할이 생기지 않도록 방지하는 것이 합의과정 자체를 멈추도록 할 수 있다는 것이다. 코스모스 아키텍처는 지역 자치 존(regional autonomous zone)을 갖는 전역 허브(global hub)를 사용함으로 이 문제를 완화할 수 있는데, 이 지역적 자치 존은 각 존의 투표권이 지리적 위치에 기초하여 분배되는 존을 가리킨다. 예를 들어, 개별 도시들이나 지역들이 자체적인 존을 운영하면서 공통의 허브(예. 코스모스 허브)를 공유하여, 일시적인 네트워크 분할로 허브가 중단되더라도 자치활동은 지속될 수 있도록 할 수 있다. 강인한 연합형 장애허용 시스템(robust federated fault-tolerant system)이 설계되기 위해서는 실제 지리, 정치 및 네트워크 토폴로지 관련 특징들이 고려되어야 할 것이다.\")]),o(\"h3\",{attrs:{id:\"federated-name-resolution-system\"}},[e._v(\"연합 명칭 결의 시스템 (Federated Name Resolution System)\")]),o(\"p\",[e._v(\"네임코인(NameCoin)은 비트코인 블록체인을 이용하여 ‘명칭 결의(name-resolution)’ 문제를 해결하고자 한 최초의 블록체인 중 하나였다. 안타깝지만 이 접근법에는 몇 가지 문제들이 있었다.\")]),o(\"p\",[e._v(\"네임코인으로 예를 들면, \"),o(\"em\",[e._v(\"@satoshi\")]),e._v(\"라는 명칭이 과거 어느 시점에 특정 공개키로 등록되었다는 것은 검증할 수 있지만, 이후의 모든 블록들을 다운로드 하지 않는 한 그 공개키가 이후로 업데이트 된 적이 있는지는 알 수 없다. 이는 비트코인의 UTXO 머클화 모델의 한계 때문인데, 이 모델에서는 ‘상태’가 아닌 ‘이체의 기록’만 블록 해시로 머클화된다–이는 존재를 증명하지만, 이후로 업데이트가 없었다는 것을 증명하지는 못한다. 따라서 완전 노드를 신뢰하거나 전체 블록체인을 다운로드 하면서 상당한 비용을 지불해야만 가장 최근 값을 확실히 알 수 있다.\")]),o(\"p\",[e._v(\"머클 탐색 트리(Merkle-ized search tree)가 네임코인에 구현되더라도, 작업증명에 대한 의존성 때문에 라이트 클라이언트 검증에서 문제가 생긴다. 라이트 클라이언트는 전체 블록체인의 블록헤더들(또는 적어도 마지막 업데이트 이후의 모든 헤더들)을 모두 다운로드 해야 한다. 이는 대역폭 사용이 소모시간과 함께 선형으로 증가한다는 것을 의미한다[[21]]]\"),o(\"a\",{attrs:{href:\"https://en.bitcoin.it/wiki/Thin_Client_Security\"}},[e._v(\"21\")]),e._v(\". 또한 작업증명 블록체인 위의 명칭 변경을 위해서는 추가적인 블록확인을 기다려야 하는데 이것이 비트코인에서는 최대 1 시간까지도 걸릴 수 있다.\")]),o(\"p\",[e._v(\"텐더민트의 경우, 변경을 위해 필요한 것은 (투표권을 통해) 검증인 정족수가 서명한 최근의 블록 해시, 그리고 명칭에 대한 현재 값(current value)의 머클 증명이다. 이를 통해, ‘명칭 값’을 간결하고 신속하며 안전한 라이트 클라이언트 검증을 할 수 있다.\")]),o(\"p\",[e._v(\"코스모스에서 이 개념을 확장시킬 수 있다. 코스모스의 각 명칭등록 존(name-registration zone)은 ‘.com’이나 ‘.org’와 같은 최상위 도메인(TLD: top-level-domain)을 가질 수 있고, 자체적인 거버넌스와 등록규칙을 설정할 수 있다.\")]),o(\"h2\",{attrs:{id:\"issuance-and-incentives\"}},[e._v(\"발행과 인센티브 (Issuance and Incentives)\")]),o(\"h3\",{attrs:{id:\"the-atom-token\"}},[e._v(\"아톰 토큰 (The Atom Token)\")]),o(\"p\",[e._v(\"코스모스 허브는 ‘다중자산 분산원장’이며 특별한 내부 토큰인 ‘\"),o(\"em\",[e._v(\"아톰(atom)\")]),e._v(\"’을 가지고 있다. 아톰은 코스모스 허브의 유일한 지분 토큰(staking token)이다. 아톰은 보유자가 투표, 검증 또는 다른 검증인들에게 위임을 하기 위해 필요하다. 이더리움의 이더와 마찬가지로 아톰 역시 스팸공격 완화를 위한 이체수수료(transaction fees) 지불을 위해 사용될 수 있다. 추가되는 인플레이션 아톰(inflationary atoms)과 블록 이체수수료가 검증인들에게 그리고 검증인들에게 위임한 위임자들(delegators)에게 보상된다.\")]),o(\"p\",[e._v(\"BurnAtomTx 이체 기능을 통해 ‘지급 준비금 풀(reserve pool)’에서 일정 비율의 토큰 금액(proportionate amount of tokens)을 회수(recover)할 수 있다.\")]),o(\"h4\",{attrs:{id:\"fundraiser\"}},[e._v(\"크라우드펀딩 (Fundraiser)\")]),o(\"p\",[e._v(\"코스모스가 최초로 생성될 때 아톰 토큰과 검증인의 배분은 코스모스 크라우드세일의 자금제공자들(75%), 사전 자금 제공자들(5%)과 코스모스 주식회사(Cosmos Corp)(20%)로 가게 된다. 그 이후, 아톰 총액 중 1/3 이 본딩된(bonded) 검증인들과 위임자들에게 매년 보상될 것이다.\")]),o(\"p\",[e._v(\"이 계획은 변경될 수 있으며 상세내용은 \"),o(\"a\",{attrs:{href:\"https://github.com/cosmos/cosmos/blob/master/PLAN.md\"}},[e._v(\"Crowdfund Plan\")]),e._v(\" 참조\")]),o(\"h3\",{attrs:{id:\"limitations-on-the-number-of-validators\"}},[e._v(\"검증인수의 제한 (Limitations on the Number of Validators)\")]),o(\"p\",[e._v(\"비트코인 등의 작업증명 블록체인들과는 달리, 텐더민트 블록체인은 검증인의 수가 많아질수록 통신의 복잡도가 증가하여 속도가 느려진다. 물론 충분한 검증인들을 통해 블록체인의 전세계 분산, 매우 빠른 이체확인 속도를 제공할 수 있다. 또한 대역폭, 저장공간 및 병렬 컴퓨팅 용량이 증가함에 따라 장래에 더욱 많은 검증인들을 지원할 수 있을 것이다.\")]),o(\"p\",[e._v(\"제네시스 시에는 최대 검증인 수가 100 명으로 설정될 것이고, 이 수치는 10 년 동안 13%의 비율로 증가하여 최종적으로는 총 300 명의 검증인을 가지게 될 것이다.\")]),o(\"pre\",{pre:!0},[o(\"code\",{pre:!0,attrs:{\"v-pre\":\"\"}},[e._v(\"Year 0: 100\\nYear 1: 113\\nYear 2: 127\\nYear 3: 144\\nYear 4: 163\\nYear 5: 184\\nYear 6: 208\\nYear 7: 235\\nYear 8: 265\\nYear 9: 300\\nYear 10: 300\\n...\\n\")])]),o(\"h3\",{attrs:{id:\"becoming-a-validator-after-genesis-day\"}},[e._v(\"제네시스 일이후에 검증인되기 (Becoming a Validator After Genesis Day)\")]),o(\"p\",[e._v(\"아톰 보유자들은 ‘BondTx 이체’를 서명하여 제출함으로써 검증인이 될 수 있다. 담보로 제공된 아톰 액수는 ‘0’보다 많아야 한다. 현재 검증인 세트의 크기가 허용된 최대 검증인 수보다 많은 경우를 제외하고는 누구라도 언제든지 검증인이 될 수 있다. 만일 검증인의 수가 허용치 이상인 경우, 가장 적은 검증인이 보유한 유효 아톰의 액수보다 더 높은 아톰 액수(위임받은 아톰 포함)를 담보로 제공해야만 한다. 이러한 방식으로 새로운 검증인이 기존 검증인를 대체할 수 있으며, 기존 검증인은 비활성이 되고 모든 아톰과 위임 아톰(delegated atom)은 언본딩 상태(unbonding state)로 돌아간다.\")]),o(\"h3\",{attrs:{id:\"penalties-for-validators\"}},[e._v(\"검증인에 대한 처벌 (Penalties for Validators)\")]),o(\"p\",[e._v(\"고의든 아니든 검증인이 정해진 프로토콜을 어길 때에는, 처벌이 주어져야 한다. 동일한 높이(height) 및 라운드에서의 이중 서명이나 “prevote-the-lock”(텐더민트 합의 프로토콜의 규칙)의 위반 같은 행위는 증거를 통해 즉시 인정된다. 이 경우, 검증인은 유효한 지위(good standing)를 상실하게 되며, 본딩된 아톰과 ‘지급준비금 풀(reserve pool)’내 토큰의 비례분 즉, 통칭하여 ‘지분(stake)’을 상당수 잃을 것이다.\")]),o(\"p\",[e._v(\"때로는 지역 네트워크 단절, 전원 장애나 그 밖의 이유들로 인해 검증인이 단절될 수 있을 것이다. 만일 ‘과거 어느 시점의 ValidatorTimeoutWindow 블록’에서 검증인의 커밋 투표가 이루어지지 않은 횟수가 ValidatorTimeoutMax Absent 횟수 이상인 경우, 해당 검증인은 비활성화 되고 지분의 ‘Validator TimeoutPenalty(디폴트 1%)’만큼 잃게 될 것이다.\")]),o(\"p\",[e._v(\"어떤 ‘악의적’ 행위는 블록체인에 명확한 증거를 남기지 않을 수 있다. 이런 경우, 압도적 다수의 합의가 존재한다면, 검증인들이 외부에서 합의한 뒤 악의적인 검증인을 강제로 타임아웃(timeout) 시킬 수 있다.\")]),o(\"p\",[e._v(\"‘투표권 ⅓+’이 악의적으로 연합하여 코스모스를 중단시키거나, 이들이 악의적 행동의 증거가 블록체인으로 들어오지 않게 검열하여 삭제하는 경우, 허브는 하드포크를 통한 블록재조정(reorg) 프로포잘로 복구(recover)되어야 한다.\")]),o(\"h3\",{attrs:{id:\"transaction-fees\"}},[e._v(\"이체 수수료 (Transaction Fees)\")]),o(\"p\",[e._v(\"코스모스 허브 검증인들은 아톰 뿐 아니라, 어떠한 유형의 토큰이라도 이체수수료로 받을 수 있다. 각 검증인은, BlockGasLimit 을 초과하지 않는 한, 원하는 어떤 교환비율이든 주관적으로 정할 수 있고 원하는 어떤 이체든 선택할 수 있다. 징수된 수수료는 아래에 명시된 세금들을 제외하고, 매 ValidatorPayoutPeriod(검증인지불기간, 디폴트 1 시간)마다 본딩된 아톰(bonded atoms)에 비례하여 본딩된 주주들(bonded stakeholders)에게 재분배된다.\")]),o(\"p\",[e._v(\"징수된 이체수수료 중 ‘지급준비금 세금(Reserve Tax, 디폴트 2%)’은 ‘지금준비금 풀’에 충당되며 이를 통해 ‘지금준비금 풀’을 늘리고 코스모스 네트워크의 보안과 가치를 높이는데 사용될 것이다. 또한 공유세(Commons Tax, 디폴트 3%)는 공유재의 자금으로 충당될 것이다. 이 자금들은 CustodianAddress 로 가게 되고, 거버넌스 시스템의 결정에 따라 분배된다.\")]),o(\"p\",[e._v(\"투표권을 다른 검증인들에게 위임하는 아톰 보유자들은 위임 받은 검증인에게 커미션(commission)을 지불한다. 커미션은 각 검증인이 정할 수 있다.\")]),o(\"h3\",{attrs:{id:\"incentivizing-hackers\"}},[e._v(\"해커에 대한 인센티브 제공 (Incentivizing Hackers)\")]),o(\"p\",[e._v('코스모스 허브의 보안은 검증인들과 위임자들의 검증인 선택에 달려있다. 취약성 발견 및 조기 보고를 권장하기 위해 코스모스 허브는 해커들이 \"이 검증인은 해킹 당했다. 본 주소로 포상금을 보내주기 바란다.\"라고 알릴 수 있는 ‘ReporthackTx 이체’를 통해 해킹성공 발표를 권장한다. 해킹 즉시, 해당 검증인과 위임자들은 비활성화되고, 이들의 아톰 일부가 ‘HackPunishmentRatio(해킹처벌비율, 디폴트 5%)’만큼 감소되고, 해커는 포상금 주소를 통해 ‘HackRewardRatio(해크보상비율, 디폴트 5%)’만큼 보상받는다. 검증인은 백업 키(backup key)를 사용하여 나머지 아톰을 회수(recover)해야 한다.')]),o(\"p\",[e._v(\"이러한 방법을 이용해 ‘본딩이 완료되지 않은 비귀속(unvested) 아톰’을 전송하려는 악의적 시도를 막기위해, 감별자와 위임자들의 귀속과 비귀속 아톰 비율은 ReportHackTx 전후로 동일하게 유지될 것이다. 해커 포상금은, 존재할 경우, 얼마의 비귀속 아톰을 포함할 것이다.\")]),o(\"h3\",{attrs:{id:\"governance-specification\"}},[e._v(\"거버넌스 (Governance Specification)\")]),o(\"p\",[e._v(\"코스모스 허브는 소프트웨어 업그레이드와 헌법(규정) 수정뿐 아니라 시스템의 변수 파라미터들과 같은 블록체인의 다양한 변화를 조정하기 위해서 명확한 거버넌스 메커니즘을 가진 분산형 조직에 의해 운영된다.\")]),o(\"p\",[e._v(\"모든 검증인들은 모든 프로포잘에 대한 투표책임이 있다. 적시에 투표하지 않는 경우, 해당 검증인은 ‘결석처벌기간(AbsenteeismPenaltyPeriod-디폴트 1 주)’ 동안 자동으로 비활성화된다.\")]),o(\"p\",[e._v(\"위임자들(delegators)은 그들이 위임한 검증인의 투표를 자동으로 물려받는다. 이 투표는 수동으로 취소(overriden manually)될 수 있다. 언본딩된(unbonded) 아톰들은 어떤 투표권도 얻지 않는다.\")]),o(\"p\",[e._v(\"각 프로포잘은 ‘최소 프로포잘 보증금(MinimumProposalDeposit)’ 토큰을 요구하는데, 이는 아톰을 포함한 하나 이상의 토큰들일 수 있다. 각 프로포잘에 대해 투표자들은 보증금을 사용하기로 투표할 수 있다. 투표자의 절반 이상이 보증금을 사용하기로 선택할 경우, 그 보증금은 지급보증금 풀에 충당된다. 다만, 프로포잘이 스팸이었다거나 기타의 경우라서 소각되는(burned) 아톰은 제외한다.\")]),o(\"p\",[e._v(\"각 프로포잘에 대해, 투표자들은 다음의 옵션으로 투표할 수 있다:\")]),o(\"ul\",[o(\"li\",[e._v(\"Yay(찬성)\")]),o(\"li\",[e._v(\"YayWithForce(강력히 찬성)\")]),o(\"li\",[e._v(\"Nay(반대)\")]),o(\"li\",[e._v(\"NayWithForce(강력히 반대)\")]),o(\"li\",[e._v(\"Abstain(기권)\")])]),o(\"p\",[e._v(\"프로포잘의 통과 여부를 결정시에는 과반수의 투표가 요구되지만, 1/3+이 “강력히(with force)” 반대 투표함으로써 과반수의 결정을 거부할 수 있다. 다만 이렇게 과반수가 거부될 경우, 모두가 ‘거부권패널티블록(VetoPenaltyFeeBlocks, 디폴트 1 일 가치의 블록)’을 통해 수수료를 상실함으로 처벌 받고, 과반수 결정을 거부한 당사자는 자신의 아톰 중 ‘거부권패널티아톰(VetoPenaltyAtoms, 디폴트 0.1%)’ 만큼을 추가로 상실한다.\")]),o(\"h3\",{attrs:{id:\"parameter-change-proposal\"}},[e._v(\"파라미터 변경 프로포잘 (Parameter Change Proposal)\")]),o(\"p\",[e._v(\"여기서 정의된 파라미터들 중 어느 것이든 ParameterChangeProposal 의 통과를 통해 변경될 수 있다.\")]),o(\"h3\",{attrs:{id:\"text-proposal\"}},[e._v(\"텍스트 프로포잘 (Text Proposal)\")]),o(\"p\",[e._v(\"다른 모든 프로포잘들(예. 업그레이드 프로포잘)은 일반적인 TextProposal 을 통해 조정된다.\")]),o(\"h2\",{attrs:{id:\"roadmap\"}},[e._v(\"로드맵 (Roadmap)\")]),o(\"p\",[o(\"a\",{attrs:{href:\"https://github.com/cosmos/cosmos/blob/master/PLAN.md\"}},[e._v(\"Plan\")]),e._v(\" 참조.\")]),o(\"h2\",{attrs:{id:\"related-work\"}},[e._v(\"관련 연구 (Related Work)\")]),o(\"p\",[e._v(\"지난 수십 년 동안 블록체인 합의구조와 확장성 부분에서 많은 혁신이 있었다. 아래에서 중요한 몇 가지를 간략히 개관한다.\")]),o(\"h3\",{attrs:{id:\"consensus-systems\"}},[e._v(\"합의 시스템 (Consensus Systems)\")]),o(\"h4\",{attrs:{id:\"classic-byzantine-fault-tolerance\"}},[e._v(\"고전적 비잔틴 장애 저항 (Classic Byzantine Fault Tolerance)\")]),o(\"p\",[e._v(\"악의적인 참여자가 있는 합의는 80 년대 초로 거슬러 올라가는 문제인데, 이때 레슬리 램포트(Leslie Lamport)는 프로세스가 단순한 ‘충돌 장애(crash fault)’와는 대조되는 것으로, 의도된 행위로부터 벗어나는 임의의 프로세스 행위(process behavior)를 가리키는 ‘비잔틴 장애(Byzantine fault)'라는 용어를 만들었다. 초기의 솔루션들은 메시지 지연시간에 상한(upper bound)이 존재하는 동기식 네트워크들을 위한 것이었다. 하지만 실제 사용은 항공기 제어기와 원자시계를 통해 동기화되는 데이터센터 같은 고도로 통제된 환경들로 제한되었다. 임의의 프로세스 행위를 최대 ⅓ 까지 허용할 수 있는 효율적인 ‘부분 동기 합의 알고리즘’으로서 ‘실용적 비잔틴 장애 허용(PBFT: Practical Byzantine Fault Tolerance)’\"),o(\"a\",{attrs:{href:\"11\"}},[e._v(\"[11]\")]),e._v(\"이 도입된 것은 90 년대 말이 되고 나서였다. PBFT 는 표준 알고리즘이 되었고, 많은 파생 변형들을 만들어내었다. 가장 최근에는 IBM 이 하이퍼레저(Hyperledger)에 기여를 위해 만든 변형이 있다.\")]),o(\"p\",[e._v(\"PBFT 와 비교할때 텐더민트 합의구조의 중요한 장점은 텐더민트가 단순하고 개선된 기반 구조를 가진다는 것이고, 이 구조 중의 일부는 블록체인 패러다임을 수용한 결과이다. 텐더민트 블록들은 순서대로 커밋되는데, 이것이 PBFT 의 관점 변화(view-changes)와 관련 있는 복잡도와 통신 오버헤드를 제거한다. 코스모스를 포함한 많은 암호화폐에서는, 블록 \"),o(\"em\",[e._v(\"N\")]),e._v(\" 자체가 아직 커밋되지 않았을 때에는 블록 \"),o(\"em\",[e._v(\"N+i\")]),e._v(\"(\"),o(\"em\",[e._v(\"i >= 1\")]),e._v(\")의 커밋을 고려할 필요가 없다. 블록 \"),o(\"em\",[e._v(\"N\")]),e._v(\"이 코스모스 존에 커밋되지 않은 이유가 대역폭인 경우, \"),o(\"em\",[e._v(\"N+i\")]),e._v(\" 블록들에 대해 대역폭 공유 투표(bandwidth sharing votes)를 사용해도 의미가 없다. 만일 네트워크 분할이나 오프라인 노드들 때문에 블록 \"),o(\"em\",[e._v(\"N\")]),e._v(\"이 커밋되지 않은 경우, 블록 \"),o(\"em\",[e._v(\"N+i\")]),e._v(\"은 어차피 커밋되지 않는다.\")]),o(\"p\",[e._v(\"뿐만 아니라, 블록들 속으로 이체를 배칭(batching)함으로 PBFT 의 체크포인팅(checkpointing) 기법 같은 주기적 다이제스트가 아닌, ‘어플리케이션 상태의 정규 머클 해싱’이 가능하다. 또한 이를 통해, 라이트 클라이언트들을 위한 보다 빠른 증명 가능한 이체 커밋과, 보다 빠른 블록체인 간 통신이 가능하다.\")]),o(\"p\",[e._v(\"텐더민트 코어는 PBFT 에 명시된 것 이상의 많은 최적화 사항들과 기능들을 가지고 있다. 예를 들면, 검증인이 제안하는 블록들은 전파 성능을 개선하는 방식으로 부분화되고 머클화(Merkle-ized) 되고 가십화(gossipped)된다(영감은 LibSwift\"),o(\"a\",{attrs:{href:\"19\"}},[e._v(\"[19]\")]),e._v(\" 참조). 또한 텐더민트 코어는 점 대 점(point-to-point) 접속에 관한 어떤 가정도 하지 않으며, P2P 네트워크가 연결되어 있기만 하다면 작동한다.\")]),o(\"h4\",{attrs:{id:\"bitshares-delegated-stake\"}},[e._v(\"비트쉐어 위임 지분 (BitShares delegated stake)\")]),o(\"p\",[e._v(\"비트쉐어(BitShares)\"),o(\"a\",{attrs:{href:\"12\"}},[e._v(\"[12]\")]),e._v(\"는 최초의 지분증명(PoS: proof-of-stake) 적용 사례는 아니지만, PoS 블록체인들, 특히 ‘위임(delegated)’ PoS 블록체인의 연구와 채택에 상당한 기여를 했다. 비트쉐어에서 지분 보유자들은 이체명령 및 커밋 책임이 있는 '증인(witnesses)'과 소프트웨어 업데이트와 패러미터 변경 책임이 있는 '델리게이트(delegates)'를 선출한다. 비트쉐어는 이상적인 상태에서 고성능(100k tx/s, 1 초 지연시간)을 달성하기는 하지만, 악의적인 증인들이 아무런 경제적 처벌 없이 블록체인을 분기해 이중지불 공격을 가할 수 있다. 즉 ‘무보증(Nothing-at-Stake)’ 문제를 겪는다. 비트쉐어는 이체들이 최근의 블록-해시들을 참조하게 함으로써 이 문제를 완화하고자 한다. 물론 주주들은 부정행위 증인들을 매일 제거하거나 대체할 수 있다. 하지만 이것이 성공한 이중지불공격에 대한 분명한 처벌은 결코 아니다.\")]),o(\"h4\",{attrs:{id:\"stellar\"}},[e._v(\"스텔라 (Stellar)\")]),o(\"p\",[e._v(\"리플(Ripple)이 개척한 방식을 토대로, 스텔라(Stellar)\"),o(\"a\",{attrs:{href:\"13\"}},[e._v(\"[13]\")]),e._v(\"는 ‘연합형 비잔틴 합의(Federated Byzantine Agreement)’ 모델을 개선했는데, 여기에서는 합의참여 프로세스에서 ‘전역적으로 알려진 고정된 집합’을 요구하지는 않는다. 오히려 프로세스 노드는 각기 신뢰할 수 있는 프로세스 집합을 구성하는 하나 이상의 '정족수 슬라이스(quorum slices)'를 배포한다. 스텔라에서 '정족수’는 노드들의 집합(set)이며, 적어도 각 노드당 하나 이상의 정족수 슬라이스를 포함하여 합의에 도달하도록 한다.\")]),o(\"p\",[e._v(\"스텔라 메커니즘의 보안은 \"),o(\"em\",[e._v(\"임의의\")]),e._v(\" 두 정족수의 교집합이 비공(non-empty)이라는 가정에 의존한다. 또한 노드의 가용성을 위해서는, 정족수 슬라이스들 중 적어도 하나가 완전히 올바른(entirely correct) 노드들로 구성되어야 하며, 신뢰에 관한 중요한 가정 없이는 큰 정족수 슬라이스와 작은 정족수 슬라이스 사용 간에 발생하는 상호관계의 균형유지가 어려울 수 있다. 궁극적으로는 노드들은 충분한 장애허용이 가능한 ‘적절한 정족수 슬라이스’ 또는 ‘온전한 노드들(intact nodes)’을 어떻게든 선택해야 한다. 또한 그런 구성을 보장하는 유일한 전략은 계층적이고, 경계 경로 프로토콜(BGP: Border Gateway Protocol)과도 유사하다. 이는 전역 라우팅 테이블 확립을 위해 인터넷의 최상위 계층 ISP 들에 의해 사용되며, TLS 인증서를 관리하기 위해 브라우저들이 사용하기도 한다. 그러나 두 가지 모두 약한 보안성으로 악명높다.\")]),o(\"p\",[e._v(\"스텔라 논문에서 비판한 ‘텐더민트 기반 지분 증명 시스템’들은 이곳에 기술된 토큰 전략을 통해 해명할 수 있다. 이 전략에서는 미래의 수수료 및 보상에 대한 권리인 \"),o(\"em\",[e._v(\"아톰\")]),e._v(\"이라는 이름의 새로운 유형의 토큰이 발행된다. ‘텐더민트 기반 지분 증명’은 상대적으로 단순성을 유지하면서도, 충분한 그리고 입증 가능한 보안을 제공한다는 점에서 이점이 있다.\")]),o(\"h4\",{attrs:{id:\"ng-bitcoinng\"}},[e._v(\"비트코인 NG (BitcoinNG)\")]),o(\"p\",[e._v(\"BitcoinNG 는 블록 크기 확장과 같은 수직 확장성을 제공하는 방법이다. 또한 이러한 확장이 초래하는 부정적 경제 요인들을 최소화하였다. 이러한 개선은 리더 선정(leader election)과 이체 전파를 분리시킴으로 가능하다: 리더들은 우선 ‘마이크로 블록(micro-block)’들에 있는 작업증명(PoW)을 통해 선정되며, 그 이후 새로운 마이크로블록이 발견될 때까지 커밋할 이체내역들을 전파한다. 이러한 방식은 PoW 경쟁을 이기기 위해 소요되는 대역폭 요구량을 줄여준다. 또한 소규모 채굴자들이 더욱 공정하게 경쟁하고 이체가 더 정기적으로 커밋될 수 있도록 한다.\")]),o(\"h4\",{attrs:{id:\"casper\"}},[e._v(\"캐스퍼 (Casper)\")]),o(\"p\",[e._v(\"캐스퍼\"),o(\"a\",{attrs:{href:\"16\"}},[e._v(\"[16]\")]),e._v(\"는 이더리움 용으로 제안된 지분증명(PoS) 합의 알고리즘이다. 주요 운용 방식은 '베팅에 의한 합의(consensus-by-bet)'이며, 검증인들은 지금까지 본 다른 베팅들(bets)에 기초해 블록체인에 커밋 될 것으로 생각되는 블록에 반복적으로 베팅하게 되며, 이러한 방식으로 결국 완결성(finality)이 달성된다는 논리를 전제한다. \"),o(\"a\",{attrs:{href:\"https://blog.ethereum.org/2015/12/28/understanding-serenity-part-2-casper/\"}},[e._v(\"링크\")]),e._v(\". 이러한 ‘합의 베팅’이 캐스퍼 팀의 주요 연구영역인데, 도전이 되는 부분은 베팅 메커니즘을 ‘진화적으로 안정된 전략(evolutionarily stable strategy)’이 되도록 설계해야 한다는 점이다. 텐더민트와 비교할 때 캐스퍼의 강점은 '일관성(consistency)보다 가용성(availability)'을 제공하는 것으로 볼 수 있다. 합의는 투표권의 +⅔ 정족수를 요구하지 않으며 커밋 속도나 구현 복잡도를 희생했다고 볼 수 있다.\")]),o(\"h3\",{attrs:{id:\"horizontal-scaling\"}},[e._v(\"수평 스케일링 (Horizontal Scaling)\")]),o(\"h4\",{attrs:{id:\"interledger-protocol\"}},[e._v(\"인터레저 프로토콜 (Interledger Protocol)\")]),o(\"p\",[e._v(\"인터레저 프로토콜(Interledger protocol)\"),o(\"a\",{attrs:{href:\"14\"}},[e._v(\"[14]\")]),e._v(\"은 엄밀히는 확장성 솔루션이 아니다. 느슨하게 연결된 ‘쌍방 관계 네트워크’를 통해 상이한 원장 시스템들 간 ‘애드혹 상호운용성(ad hoc interoperation)’을 제공하는 방식이다. 라이트닝 네트워크(Lightning Network)의 경우처럼, ILP 는 지불을 용이하게 하는 프로토콜인데, 특히 서로 다른 유형의 원장들 간 지불에 초점을 맞추며 ‘아톰 이체 메커니즘(atomic transaction mechanism)’을 확장하여 ‘해시 잠금(hash-locks)’과 ‘공증인 정족수(quorum of notaries)’를 포함하로독 했으며, 이를 ‘아톰 전송 프로트콜(Atomic Transport Protocol)’로 칭한다. ‘원장 간 이체의 원자성(atomicity)’을 확보하기 위한 이러한 메커니즘은 텐더민트의 ‘라이트 클라이언트 SPV’ 작동방식과도 유사하다. 하단에서 ILP 와 코스모스/IBC 를 비교해본다.\")]),o(\"ol\",[o(\"li\",[o(\"p\",[e._v(\"ILP 의 커넥터(connector) 공증인들은 구성원(membership) 변경을 지원하지 않으며 공증인들 간 유연한 가중치 부여를 지원하지 않는다. 반면에 IBC 는 블록체인 전용으로 설계되었고, 검증인들이 상이한 가중치를 가질 수 있으며 블록체인을 통해 구성원들의 변경이 가능하다.\")])]),o(\"li\",[o(\"p\",[e._v(\"라이트닝 네트워크나 ILP 에서는 지불 수신자가 송신자에게 ‘확인’을 되돌려 보내기 위해 반드시 온라인 상태여야 한다. IBC 를 통한 토큰 전송에서는, 수신자가 아니라, 수신자 블록체인의 검증인 세트가 ‘확인’을 제공할 책임이 있다.\")])]),o(\"li\",[o(\"p\",[e._v(\"가장 근본적인 차이는 ILP 커넥터들은 지불에 대한 책임을 지거나 권한 상태를 유지하고 있지 않은 반면에, 코스모스에서는 허브의 검증인들이 IBC 토큰 전송과 각 존이 가진 토큰 총액에 대한 권한을 가진다는 점이다(그러나 존 내 각 계정이 보유한 토큰 금액에 대한 권한은 없다). 이는 존에서 존으로 비대칭 토큰 전송을 안전하게 실행하기 위한 근본적 혁신이다.\")])]),o(\"li\",[o(\"p\",[e._v(\"ILP 에서 원장 간 지불을 하기 위해서는 거래소 오더북(exchange orderbook)의 지원이 필요한데, 이는 하나의 원장에서 다른 원장으로의 ‘코인 비대칭 전송’이 없고 ‘가치나 시장 등가물(market equivalents)’의 전송만 있기 때문이다.\")])])]),o(\"h4\",{attrs:{id:\"sidechains\"}},[e._v(\"사이드체인 (Sidechains)\")]),o(\"p\",[e._v(\"사이드체인(sidechains)\"),o(\"a\",{attrs:{href:\"15\"}},[e._v(\"[15]\")]),e._v(\"은 비트코인 블록체인에 '페깅(pegged)'된 ‘대안 블록체인’을 통해 비트코인 네트워크를 확장하고자 하는 시도이다. 사이드체인은 비트코인이 비트코인 블록체인으로부터 사이드체인으로 효과적으로 이동할 수 있게 하고 사이드체인에서 각 체인의 특징을 이용한 실험들을 가능하게 한다. 코스모스 허브와 마찬가지로, 사이드체인과 비트코인은 상호 간 라이트 클라이언트 역할을 하며 코인 전송 시점을 결정하기 위해 SPV 증명을 사용한다. 물론 비트코인은 작업증명을 사용하기 때문에 비트코인 중심의 사이드체인들은 작업증명 합의 메커니즘으로부터 발생하는 여러 문제들과 리스크를 갖는다. 이는 ‘비트코인 극단주의자(Bitcoin-maximalist)’적 솔루션이며, 코스모스처럼 자체적으로 다양한 토큰들과 존 간 네트워크 위상(inter-zone network topology)을 지원하지는 않는다. 하지만, ‘양방향 페그(two way peg)’의 핵심 메커니즘 자체는 코스모스 네트워크의 방식과 원칙적으로 동일하다.\")]),o(\"h4\",{attrs:{id:\"ethereum-scalability-efforts\"}},[e._v(\"이더리움 확장성 노력 (Ethereum Scalability Efforts)\")]),o(\"p\",[e._v(\"이더리움은 확장성 확보를 위해 ‘이더리움 블록체인 상태’를 샤딩(sharding)하기 위한 여러 전략들을 연구 중이다. 현재의 이더리움 가상 머신(EVM)를 통해 ‘공유 상태 공간(shared state space)’에 ‘대한 추상적 계층(abstraction layer)’을 유지하는 방식이다. 또한 다수의 연구들이 진행되고 있다.\"),o(\"a\",{attrs:{href:\"18\"}},[e._v(\"[18]\")]),o(\"a\",{attrs:{href:\"22\"}},[e._v(\"[22]\")])]),o(\"h4\",{attrs:{id:\"vs-20-mauve-cosmos-vs-ethereum-20-mauve\"}},[e._v(\"코스모스 vs 이더리움 2.0 Mauve (Cosmos vs Ethereum 2.0 Mauve)\")]),o(\"p\",[e._v(\"코스모스와 이더리움 2.0 Mauve\"),o(\"a\",{attrs:{href:\"22\"}},[e._v(\"[22]\")]),e._v(\"의 설계 목표에는 차이가 있다.\")]),o(\"ul\",[o(\"li\",[o(\"p\",[e._v(\"코스모스가 토큰들에 대한 것이라면 Mauve 는 일반 계산(general computation)의 스케일링에 관한 것이다.\")])]),o(\"li\",[o(\"p\",[e._v(\"코스모스는 EVM 에 구속되지 않으며, 심지어는 서로 다른 VM 들이 상호 운용될 수 있다.\")])]),o(\"li\",[o(\"p\",[e._v(\"코스모스는 존의 검증 책임자를 존의 생성자가 결정하도록 한다.\")])]),o(\"li\",[o(\"p\",[e._v(\"(거버넌스 시스템의 결정과 상충되지만 않는다면) 누구든지 코스모스에서 새 존을 시작할 수 있다.\")])]),o(\"li\",[o(\"p\",[e._v(\"허브는 존 실패(zone failures)를 격리시키며, 이를 통해 ‘전역 토큰 불변성(global token invariants)’을 보증한다.\")])])]),o(\"h3\",{attrs:{id:\"general-scaling\"}},[e._v(\"일반 스케일링 (General Scaling)\")]),o(\"h4\",{attrs:{id:\"lightning-network\"}},[e._v(\"라이트닝 네트워크 (Lightning Network)\")]),o(\"p\",[e._v(\"라이트닝 네트워크는 비트코인 블록체인(그리고 그 밖의 퍼블릭 블록체인들)의 상위 계층에서 운용되도록 제안된 토큰 전송 네트워크로, 합의원장(consensus ledger) 외부의 대다수 이체들을 소위 ‘지불채널(payment channels)’로 이동시켜서 이체처리량(throughput)을 획기적으로 개선시킨다. 온 체인(on-chain) 암호화폐 스크립트를 통해 당사자들이 쌍무 상태기반 계약(bilateral stateful contracts)을 체결할 수 있도록 한다. 계약들의 상태는 디지털 서명에 의해 업데이트 되며, 또한 ‘크로스 체인 아토믹 스왑(cross-chain atomic swap)’를 통해 최초에 설정된 방식에 따라 합당한 증명을 블록체인에 전파함으로 계약이 마감된다. 다수의 당사자와 함께 지불 채널을 개방함으로, 라이트닝 네트워크의 참여자들은 당사자들이 지불을 라우팅하는 ‘포컬포인트(focal point)’의 역할을 할 수 있다. 또한 이러한 지불 채널에 실제 자본을 고정시킴으로 완전히 연결된 지불 채널을 개설하는 것도 가능하다.\")]),o(\"p\",[e._v(\"라이트닝 네트워크는 다수의 블록체인들에 걸쳐 확장되면서 교환시장을 통해 *가치(value)*를 전송하도록 하지만, 하나의 블록체인에서 다른 블록체인으로 *토큰(token)*을 비대칭적으로 전송하는 것은 불가능하다. 이와 관련된 코스모스 네트워크의 주된 이점은 그러한 토큰의 직접 전송을 지원한다는 것이다. 물론, 비용 절감과 프라이버시 차원에서 토큰 전송 메커니즘이 지불 채널들과 라이트닝 네트워크와 함께 적용되기를 기대한다.\")]),o(\"h4\",{attrs:{id:\"segregated-witness\"}},[e._v(\"세그위트 (Segregated Witness)\")]),o(\"p\",[e._v(\"세그위트(Segregated Witness)는 블록 당 이체처리량을 2-3 배 가량 증가시키는 것을 목적으로 하며, 동시에 신규 노드들이 더욱 빠르게 블록 동기화(block syncing)를 하도록 돕는 비트코인 개선 제안이다(\"),o(\"a\",{attrs:{href:\"https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki\"}},[e._v(\"참조\")]),e._v(\"). 이 솔루션은 비트코인의 현재 프로토콜 내에서 작동하면서 소프트 포크 업그레이드(soft-fork upgrade)를 허용하는 방식이다. 따라서, 이전의 소프트웨어 버전을 가진 클라이언트들도 업그레이드를 받아 정상적으로 기능할 수 있다. 텐더민트의 경우, 새로운 프로토콜을 만드는데 아무런 제약이 없기 때문에 확장성에 대한 새로운 우선순위를 가진다. 주로 텐더민트는 채굴 대신 암호 서명에 기반한 ‘BFT 라운드 로빈 알고리즘(BFT round-robin algorithm)’을 사용한다. 이를 통해, 다중 병렬 블록체인을 이용한 수평 스케일링을 가능하게 하면서도, 보다 정기적이고 자주 발생하는 블록 커밋에는 수직 스케일링을 적용할 수도 있다.\")]),o(\"hr\"),o(\"h2\",{attrs:{id:\"appendix\"}},[e._v(\"부 록 (Appendix)\")]),o(\"h3\",{attrs:{id:\"fork-accountability\"}},[e._v(\"포크 책임 (Fork Accountability)\")]),o(\"p\",[e._v(\"잘 설계된 합의 프로토콜이라면 허용 용량(tolerance capacity)이 초과되거나 합의가 실패할 경우에도 문제가 없어야 한다. 이는 ‘비잔틴 행동’에 상당한 금전적 보상이 있을 수 있는 경제시스템에서 특히 중요하다. 그러한 보장 중 가장 중요한 것이 ‘\"),o(\"em\",[e._v(\"포크 책임(fork-accountability)\")]),e._v(\"’인데, 포킹과 같은 합의실패를 초래한 프로세스들이 프로토콜 규칙이나 법적 체계(가능하다면)에 의해 식별되고 처벌받을 수 있다. 법 체계를 신뢰할 수 없거나 적용하기에 과도한 비용이 들 경우, 검증인들이 담보 보증(security deposits)을 내고 참여하도록 하고 악영향을 주는 행위 시 해당 담보를 차감하거나 강제로 환수함으로 처벌할 수 있다\"),o(\"a\",{attrs:{href:\"10\"}},[e._v(\"[10]\")]),e._v(\".\")]),o(\"p\",[e._v(\"‘포크 책임’에서 다루는 것은 비트코인에서처럼 ‘네트워크 비동시성’과 ‘부분적 해시충돌’ 특성으로 인해 일어나는 정상적 분기와는 큰 차이가 있다. 많은 경우, 비동시성 때문에 악의적 포킹을 가려내는 것이 거의 불가능하기 때문에 비트코인의 경우 채굴자들이 포킹을 시도하다가 고아블록이 되어버리는 기회비용을 제외하고는 특별히 ‘포크 책임’을 물게하는 것이 어렵다.\")]),o(\"h3\",{attrs:{id:\"tendermint-consensus\"}},[e._v(\"텐더민트 합의 (Tendermint Consensus)\")]),o(\"p\",[e._v(\"투표 단계들은 *프리보트(PreVote)*와 *프리커밋(PreCommit)*으로 나뉜다. 투표는 특정 블록이나 ‘\"),o(\"em\",[e._v(\"무효(Nil)\")]),e._v(\"’를 위해 행사될 수 있다. 동일 라운드에서 단일 블록에 대한 +⅔ PreVote 집합을 *폴카(Polka)*라고 부르며, 동일 라운드에서의 단일 블록에 대한 +⅔ PreCommit 집합을 *커밋(Commit)*이라고 부른다. 만일 동일 라운드에서 ‘무효(Nil)’에 +⅔ PreCommit 상태라면, 다음 라운드로 이동한다.\")]),o(\"p\",[e._v(\"결함 있는 리더들을 검출하고 무시하기 위해 엄격한 결정성(determinism)을 사용하다가 오히려 약한 동시성(synchrony)을 초래할 수 있다. 따라서 검증인들은 무효(Nil)를 Prevote 하기 전에, 일정 시간(*TimeoutPropose)*을 기다리게 되며 이 TimeoutPropose 값은 매 라운드마다 점점 증가한다. 검증인이 네트워크의 +⅔ 로부터 전파받을 때에만 단 한번 진행이 되므로, 라운드의 나머지 부분 진행은 완전히 비동시적이다. 실제로, 약한 동시성 가정( weak synchrony assumption)을 계속해서 좌절시키고 결국 블록 커밋을 위한 합의를 실패시키기 위해서는 극단적으로 강한 공격자가 필요하다. 또한 각 검증인에게 서로 다른 TimeoutPropose 랜덤값을 적용한다면, 공격은 더욱 어려워진다.\")]),o(\"p\",[e._v(\"‘추가 제약조건 집합’, 즉 ‘잠금 규칙(Locking Rules)’은 네트워크가 각 높이에서 단 하나의 블록만을 커밋하도록 보장한다. 특정한 높이에서 두 개 이상의 블록을 커밋되게 하려는 시도는 모두 발각될 수 있다. 첫째로, 블록에 대한 프리커밋(PreCommit)은 해당 블록에 대한 폴카의 형태로 정당화(justification)되어야 한다. 만일 검증인이 이미* R_1* 라운드에서 블록을 프리커밋했다면, 이는 해당 블록에 로킹*(locked)*되며, \"),o(\"em\",[e._v(\"R_2\")]),e._v(\" 라운드의 새로운 프리커밋은 반드시 \"),o(\"em\",[e._v(\"R_1 < R_polka <= R_2\")]),e._v(\"인 ‘R_polka 라운드’에서 발생해야한다. 둘째로, 검증인들은 자신들이 로킹되어 있는 블록을 제안(Propose)하거나 아니면 사전투표(PreVote)하거나 또는 둘을 함께 해야한다. 이를 통해 검증인은 충분한 증거 없이 프리커밋하지 못하며, 이미 프리커밋한 검증인의 경우 다른 블록을 동시에 프리커밋할 수 없게 된다. 이렇게 합의 알고리즘의 안전성(safety)과 라이브성(liveness)을 보장하게 된다.\")]),o(\"p\",[e._v(\"프로토콜의 전체 세부내용은 \"),o(\"a\",{attrs:{href:\"https://github.com/tendermint/tendermint/wiki/Byzantine-Consensus-Algorithm\"}},[e._v(\"여기\")]),e._v(\"를 참조\")]),o(\"h3\",{attrs:{id:\"tendermint-light-clients\"}},[e._v(\"텐더민트 라이트 클라이언트 (Tendermint Light Clients)\")]),o(\"p\",[e._v(\"대안 체인(포크)의 존재 덕분에 본딩된(bonded) 지분을 ⅓+이 대폭 삭감할(slashed) 수 있기 때문에, 텐더민트 PoS 에서는 모든 블록 헤더들을 동기화(sync)할 필요가 없다. 물론 이러한 삭감을 위해서는 누군가가 포킹의 증거를 공유해야 하기 때문에, 라이트 클라이언트는 전파받는 모든 블록해시 커밋을 저장해야 한다. 뿐만 아니라, 라이트 클라이언트들은 ‘검증인 세트의 변경’과 주기적으로 동기화하여 \"),o(\"a\",{attrs:{href:\"#preventing-long-range-attacks\"}},[e._v(\"장기 공격(long range attacks)\")]),e._v(\"을 피할 수 있을 것이다(물론 다른 방법도 적용가능).\")]),o(\"p\",[e._v(\"이더리움과 유사한 의도로, 텐더민트는 애플리케이션들이 각 블록에 ‘전역 머클 루트 해시(global Merkle root hash)’를 임베딩(embed)하도록 하고, 계정 잔고, 컨트랙트내 저장 값, UTXO 등 각 어플리케이션에 적합한 쉽게 검증이 가능한 ‘상태 쿼리(state queries)’를 이용하도록 한다.\")]),o(\"h3\",{attrs:{id:\"preventing-long-range-attacks\"}},[e._v(\"장기 공격 방지 (Preventing Long Range Attacks)\")]),o(\"p\",[e._v(\"‘충분한 회복력(resilient)의 전파 네트워크 집합’과 ‘정적(static) 검증인 세트’가 있다면, 블록체인의 모든 포킹이 검출될 수 있으며 문제가 되는 검증인들의 보증금을 대폭 삭감시킬 수 있다. 2014 년 초에 비탈릭 뷰터린(Vitalik Buterin)은 처음 지분증명 암호화폐들의 ‘무처벌(nothing-at-stake)’ 문제에 대한 해결책을 제시한다(\"),o(\"a\",{attrs:{href:\"#related-work\"}},[e._v(\"관련 연구\")]),e._v(\" 참조). 그러나 검증인 세트들이 항상 고정되어 있는 것이 아니기 때문에 오랜 기간에 걸쳐 원래의 검증인들은 모두 언본딩 될 수 있고(may all become unbonded) 묶어둔 보증금이 사라지면서, 어떤 비용도 치르지 않고 제네시스 블록으로부터 새로운 체인을 자유로이 생성할 수 있게 된다. 이 공격은 단기 공격(Short Range Attack)과 대조되는 개념으로 ‘장기 공격(Long Range Attack)’으로 알려지게 되었다. 텐더민트 합의와 같은 ‘포크 책임 BFT 알고리즘(folk-accountable BFT algorithm)’이 존재한다면 현재 본딩된 검증인들이 포크를 초래하는 단기공격은 처벌이 가능하다. 반면 장기 공격은 지분증명 방식에 치명적인 공격으로 간주된다.\")]),o(\"p\",[e._v(\"다행히 ‘장기공격(LRA)’을 부분적으로 방지하는 것이 가능하다. 첫째로, 검증인이 보증금을 언본딩하여 보증금을 회수하고 동시에 더이상의 합의참여 수수료를 포기하기 위해서는 정해진 일정 기간, 즉 ‘언본딩 기간(unbonding period)’을 채워야 한다. 그 기간은 수주 또는 수개월이 된다. 둘째로, 라이트 클라이언트는 최초로 네트워크에 연결될 때 신뢰할 수 있는 한개 이상의 출처를 통해 네트워크의 최근 블록해시를 검증해야 한다. 이러한 조건을 ‘약한 주체성(weak subjectivity)’으로 부르기도 한다. 마지막으로, 보안성을 유지하기 위해서 적어도 매 ‘언본딩 기간’을 주기로 ‘최종 검증인 세트’와 동기화되어야 한다. 이를 통해, 라이트 클라이언트는 검증인이 보증금을 빼내고 ‘무보증 상태(Nothing at Stake)’가 되었는지 여부를 파악할 수 있게 된다. 이를 파악하지 못한다면, 검증인은 최초 본딩이 시작된 블록으로 돌아가 새로우 블록들을 다시 생성함으로 장기공격을 감행할 수 있다(물론 이를 위해서는 검증인이 충분히 많은 초기 개인키를 가지고 있어야 함).\")]),o(\"p\",[e._v(\"이러한 방식의 LRA 대응 방안은 기존 ‘작업증명(Proof-of-Work)’ 방식의 보안 기법에 대한 완전한 분해정비를 필요로 한다. ‘작업증명’에서는, 라이트 클라이언트가 언제든 전체 블록헤더의 작업증명을 처리하기만 한다면 신뢰할 수 있는 제네시스 블록을 통해 최신 블록체인을 동기화할 수 있다. 그러나 LRA 에 대응하기 위해서는, 라이트 클라이언트가 정기적으로 온라인 상태가 되어 검증인 세트를 추적해야하며, 최초 온라인이 되었을 때 반드시 신뢰할 만한 출처를 통해 네트워크에서 제공하는 정보의 진실성을 확인해야만 한다. 물론 신뢰할만한 출처를 이용하는 방법은 비트코인에서도 동일한데, 프로토콜이나 소프트웨어를 반드시 신뢰할 수 있는 출처에서 얻어야 하기 때문이다.\")]),o(\"p\",[e._v(\"LRA 를 방지하는 상기의 방법은, 검증인들과 텐더민트 기반 블록체인의 완전 노드들에 적합하다. 이 노드들은 네트워크에 계속 연결되어 있기 때문이다. 또한 이 방법은 네트워크에 자주 연결될 수 있는 라이트 클라이언트들에도 적합하다. 하지만 라이트 클라이언트들이 자주 연결될 수 없는 경우, 다른 방법이 사용될 수 있다. 검증인이 아닌 토큰 보유자들이 상당히 긴 기간동안 자신의 토큰을 담보로 제공하는 것이다. 그리고 라이트 클라이언트들에게 이차적인 방법으로 최근과 이전의 블록해시 값을 전달하는 것이다. 이러한 토큰들이 블록체인 합의와 관련된 보안에는 영향을 미치지 않으나 라이트 클라이언트에게는 강력한 보장을 제공할 수 있다. 역사적 블록-해시 질의가 이더리움에서 지원될 경우, 누구든지 특별 설계된 스마트 컨트랙트에서 자신의 토큰을 본딩하고 지불을 위한 인증 서비스(attestation services for pay)를 제공하여 라이트 클라이언트 LRA 보안 시장을 효과적으로 창출할 수 있을 것이다.\")]),o(\"h3\",{attrs:{id:\"overcoming-forks-and-censorship-attacks\"}},[e._v(\"포크 및 검열 공격 극복 (Overcoming Forks and Censorship Attacks)\")]),o(\"p\",[e._v(\"블록 커밋의 정의로 인해, ⅓+ 투표권 연합은 오프라인이 되거나 투표전파를 거부함으로 블록체인을 중단시킬 수 있다. 그러한 연합을 통해 특정한 이체를 포함한 블록을 검열하여 탈락시킬 수도 있으며, 이 경우 상당한 양의 프로포잘이 거부되고 블록커밋 속도를 늦추어 블록체인의 효용과 가치를 낮출수도 있다. 또한 연합은 소량의 투표만을 전파하여 블록체인의 블록커밋 속도를 서서히 늦출 수도 있다. 결정적으로 이들은 이중서명이나 잠금규정을 지키지 않음으로 블록체인을 분기(포킹)시킬 수도 있다.\")]),o(\"p\",[e._v(\"전역적 능동 공격자(global active adversary)가 관여할 경우, 네트워크를 분할시키고 다른 이가 책임이 있는 것처럼 보이게 할 수도 있다. 이는 텐더민트만의 문제는 아니며 네트워크 상에 능동 공격자가 존재하는 모든 합의 프로토콜이 가진 한계이다.\")]),o(\"p\",[e._v(\"이러한 유형의 공격이 가능해지려면, 발리데이터 부분집합(a subset of the validators)이 합동하여 외부수단을 이용해 포킹 목적의 블록재조정 프로포잘에 서명해야하고, 초기 발리데이터 부분집합도 이에 서명해야한다. 클라이언트들은 블록재조정 프로포잘의 서명을 유심히 검증하고, 이를 근거로 판단하거나 그 결정을 최종사용자에게 넘길 수 있다.\")]),o(\"p\",[e._v(\"어떤 ‘비동시성 비잔틴 장애 저항 알고리즘(non-synchronous Byzantine fault-tolerant algorithm)’도 투표권의 ⅓+이 부정직할 경우, 합의에 도달할 수 없다. 하지만, 포크의 경우 투표권의 ⅓+이 이미 이중 서명이나 잠금 변경(lock-changing)에 의해 부정직한 것으로 가정한다. 따라서 블록재조정 프로포잘(reorg-proposal)에 서명하는 것은 어떤 비동시성 프로토콜에서도(즉, 자동적으로 그리고 기반 네트워크의 신뢰성에 관한 가정없이는) 해결할 수 없는 조정 문제이다. 현재로서는 ‘블록재조정 프로포잘 조정(reorg-proposal coordination)’ 문제를 인터넷 매체 상에서 일어나는 인간들의 사회적 합의에 맡기고 있다. 상충되는 두 블록재조정 프로포잘에 서명하는 것을 방지하기 위해, 검증인들은 서명에 앞서 남은 네트워크 분할이 없도록 주의해야 한다.\")]),o(\"p\",[e._v(\"외부의 조정 수단 및 프로토콜이 강인하다면, 네트워크분기(포크)가 검열 공격보다는 덜 치명적이다.\")]),o(\"p\",[e._v(\"⅓ 비잔틴 투표권을 요구하는 포크 및 검열 외에, +⅔ 투표권의 연합이 임의의 무효 상태를 커밋할 수도 있다. 이는 모든 BFT 합의 시스템의 특징이다. 쉽게 검증 가능한 포크가 생성되는 이중서명과는 달리, 무효 상태 커밋(commitment of an invalid state)을 검증하기 위해서는 발리데이터가 아닌 피어들(non-validating peers)도 전체 블록들을 검증해야한다. 이는 피어들이 상태의 지역 사본(local copy)을 가지고 각 이체를 실행하며, 상태 루트(state root)를 독립적으로 계산한다는 것을 의미한다. 또한 무효상태커밋이 검출되면, 사회적 합의만이 이를 처리하는 유일한 방법이다. 예를 들어, (2013 년 3 월처럼) 소프트웨어 버그로 인한 분기이든, 또는 (2015 년 7 월처럼) 채굴자들의 비잔틴 행동으로 인한 무효 상태 커밋이든 비트코인이 실패한 상황들에서, 비즈니스, 개발자, 채굴자 및 그 밖의 조직들의 잘 연결된 커뮤니티는 네트워크 회복을 위해서 참여자들의 무엇을 해야하는지에 대한 사회적 합의를 확립했다. 텐더민트의 경우, 블록체인의 검증인들이 식별될 수 있을 것으로 예상되기 때문에, 필요한 경우, 무효 상태의 커밋을 법률이나 어떤 외부 관할권을 통해 처벌하는 것까지도 가능할 수 있다.\")]),o(\"h3\",{attrs:{id:\"tmsp-tmsp-specification\"}},[e._v(\"TMSP 명세 (TMSP specification)\")]),o(\"p\",[e._v(\"TMSP 는 코어에서 애플리케이션으로 전달되는 3 가지 주요 메시지 유형으로 구성된다. 애플리케이션은 대응하는 응답 메시지로 응답한다.\")]),o(\"p\",[e._v(\"AppendTx 메시지는 애플리케이션의 핵심 작업수단이다. 블록체인에서의 이체는 이 메시지와 함께 전달된다. 애플리케이션은 AppendTx 메시지와 함께 수신된 각 이체를 현재의 상태, 애플리케이션 프로토콜, 이체의 암호학적 요건 등과 비교해서 검증한다. 이후, 검증된 이체는 값을 키-값 저장장치(key values store)으로 결합하거나 UTXO 데이터베이스를 업데이트하여 애플리케이션 상태를 업데이트해야 한다.\")]),o(\"p\",[e._v(\"CheckTx 메시지는 AppendTx 와 유사하지만 이체 검증에만 사용된다. 텐더민트 코어의 mempool(메모리 풀)은 CheckTx 로 이체의 유효성을 검사하고 유효한 이체만 피어들에 전파한다. 애플리케이션들은 이체의 증가 논스 (incrementing nonce)를 검사하고 논스가 오래된 경우, CheckTx 에 오류를 반환할 수도 있다.\")]),o(\"p\",[e._v(\"Commit 메시지는 다음 블록 헤더에 포함될 현재 애플리케이션 상태에 대한 암호학적 커밋(cryptographic commitment)을 계산하기 위해 사용된다. 이를 통해 몇가지를 얻을 수 있다. 해당 상태 업데이트에서 불일치들이 포크의 형태로 나타나게 된다. 또한 머클-해시 증명들이 블록-해시와의 비교를 통해 검증될 수 있고 블록-해시는 (투표권에 의한) 검증인 정족수에 의해 서명되기 때문에, 단순한 방식으로 안전한 라이트 클라이언트 개발하는데 도움이 된다.\")]),o(\"p\",[e._v(\"추가적 TMSP 메시지를 통해 애플리케이션이 검증인 세트를 추적(keep track of) 및 변경하고, 높이와 커밋 투표 같은 블록 정보를 수신할 수 있다.\")]),o(\"p\",[e._v(\"TMSP 요구/응답(TMSP requests/responses)은 간단한 Protobuf 메시지들이다. \"),o(\"a\",{attrs:{href:\"https://github.com/tendermint/tmsp/blob/master/types/types.proto\"}},[e._v(\"스키마 파일(schema file)\")]),e._v(\" 확인\")]),o(\"h5\",{attrs:{id:\"appendtx\"}},[e._v(\"AppendTx\")]),o(\"ul\",[o(\"li\",[o(\"strong\",[e._v(\"Arguments\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Data ([]byte)\")]),e._v(\": The request transaction bytes\")])])]),o(\"li\",[o(\"strong\",[e._v(\"Returns\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Code (uint32)\")]),e._v(\": Response code\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Data ([]byte)\")]),e._v(\": Result bytes, if any\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Log (string)\")]),e._v(\": Debug or error message\")])])]),o(\"li\",[o(\"strong\",[e._v(\"사용법\")]),e._v(\":\"),o(\"br\"),e._v(\"\\n이체를 덧붙이고 실행한다. 이체가 유효할 경우, CodeType.OK 를 반환한다.\")])]),o(\"h5\",{attrs:{id:\"checktx\"}},[e._v(\"CheckTx\")]),o(\"ul\",[o(\"li\",[o(\"strong\",[e._v(\"Arguments\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Data ([]byte)\")]),e._v(\": The request transaction bytes\")])])]),o(\"li\",[o(\"strong\",[e._v(\"Returns\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Code (uint32)\")]),e._v(\": Response code\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Data ([]byte)\")]),e._v(\": Result bytes, if any\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Log (string)\")]),e._v(\": Debug or error message\")])])]),o(\"li\",[o(\"strong\",[e._v(\"사용법\")]),e._v(\":\"),o(\"br\"),e._v(\"\\n이체를 검증한다. 이 메시지가 상태를 변경(mutate)해서는 안 된다. 이체들은 mempool 계층의 피어들에게 전파되기 전, CheckTx 를 통해 먼저 실행된다. 동일 블록 내 이체의 발생 순서를 고려하기 위해 CheckTx 를 semi-stateful(준-상태기반)로 만들고 Commit 또는 BeginBlock 시에 상태를 클리어(clear) 할 수 있다.\")])]),o(\"h5\",{attrs:{id:\"commit\"}},[e._v(\"커밋 (Commit)\")]),o(\"ul\",[o(\"li\",[o(\"strong\",[e._v(\"Returns\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Data ([]byte)\")]),e._v(\": The Merkle root hash\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Log (string)\")]),e._v(\": Debug or error message\")])])]),o(\"li\",[o(\"strong\",[e._v(\"사용법\")]),e._v(\":\"),o(\"br\"),e._v(\"\\n애플리케이션 상태의 머클 루트 해시를 반환한다.\")])]),o(\"h5\",{attrs:{id:\"query\"}},[e._v(\"Query\")]),o(\"ul\",[o(\"li\",[o(\"strong\",[e._v(\"Arguments\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Data ([]byte)\")]),e._v(\": The query request bytes\")])])]),o(\"li\",[o(\"strong\",[e._v(\"Returns\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Code (uint32)\")]),e._v(\": Response code\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Data ([]byte)\")]),e._v(\": The query response bytes\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Log (string)\")]),e._v(\": Debug or error message\")])])])]),o(\"h5\",{attrs:{id:\"flush\"}},[e._v(\"Flush\")]),o(\"ul\",[o(\"li\",[o(\"strong\",[e._v(\"사용법\")]),e._v(\":\"),o(\"br\"),e._v(\"\\n응답 대기행렬(response queue)을 플러시(flush)한다. types.Application 을 구현하는 애플리케이션들은 이 메시지를 구현할 필요가 없다–프로젝트에 의해 처리되기 때문이다.\")])]),o(\"h5\",{attrs:{id:\"info\"}},[e._v(\"Info\")]),o(\"ul\",[o(\"li\",[o(\"strong\",[e._v(\"Returns\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Data ([]byte)\")]),e._v(\": The info bytes\")])])]),o(\"li\",[o(\"strong\",[e._v(\"사용법\")]),e._v(\":\"),o(\"br\"),e._v(\"\\n애플리케이션 상태에 관한 정보를 반환한다. 애플리케이션 특정적이다.\")])]),o(\"h5\",{attrs:{id:\"setoption\"}},[e._v(\"SetOption\")]),o(\"ul\",[o(\"li\",[o(\"strong\",[e._v(\"Arguments\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Key (string)\")]),e._v(\": Key to set\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Value (string)\")]),e._v(\": Value to set for key\")])])]),o(\"li\",[o(\"strong\",[e._v(\"Returns\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Log (string)\")]),e._v(\": Debug or error message\")])])]),o(\"li\",[o(\"strong\",[e._v(\"사용법\")]),e._v(\":\"),o(\"br\"),e._v(\"\\n애플리케이션 옵션을 설정한다. 예를 들어, mempool 연결을 위해서는 Key=‘mode’, Value=‘mempool’, 또는 합의 연결을 위해서는 Key=‘mode’, Value=‘consensus’. 다른 옵션들은 각 애플리케이션마다 다르다.\")])]),o(\"h5\",{attrs:{id:\"initchain\"}},[e._v(\"InitChain\")]),o(\"ul\",[o(\"li\",[o(\"strong\",[e._v(\"Arguments\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Validators ([]Validator)\")]),e._v(\": Initial genesis-validators\")])])]),o(\"li\",[o(\"strong\",[e._v(\"사용법\")]),e._v(\":\"),o(\"br\"),e._v(\"\\n제네시스 시, 1 회 호출됨.\")])]),o(\"h5\",{attrs:{id:\"beginblock\"}},[e._v(\"BeginBlock\")]),o(\"ul\",[o(\"li\",[o(\"strong\",[e._v(\"Arguments\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Height (uint64)\")]),e._v(\": The block height that is starting\")])])]),o(\"li\",[o(\"strong\",[e._v(\"사용법\")]),e._v(\":\"),o(\"br\"),e._v(\"\\n새 블록의 시작을 알린다. 모든 AppendTx 에 앞서 호출됨.\")])]),o(\"h5\",{attrs:{id:\"endblock\"}},[e._v(\"EndBlock\")]),o(\"ul\",[o(\"li\",[o(\"strong\",[e._v(\"Arguments\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Height (uint64)\")]),e._v(\": The block height that ended\")])])]),o(\"li\",[o(\"strong\",[e._v(\"Returns\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Validators ([]Validator)\")]),e._v(\": Changed validators with new voting powers (0\\nto remove)\")])])]),o(\"li\",[o(\"strong\",[e._v(\"사용법\")]),e._v(\":\"),o(\"br\"),e._v(\"\\n블록의 끝을 알린다. 이체 후, 각 커밋에 앞서 호출됨.\")])]),o(\"p\",[e._v(\"상세한 내용은 \"),o(\"a\",{attrs:{href:\"https://github.com/tendermint/tmsp#/h\"}},[e._v(\"TMSP 리포지토리(TMSP repository)\")]),e._v(\" 참조.\")]),o(\"h3\",{attrs:{id:\"ibc-ibc-packet-delivery-acknowledgement\"}},[e._v(\"IBC 패킷 전송 확인응답 (IBC Packet Delivery Acknowledgement)\")]),o(\"p\",[e._v(\"발신자가 수신 체인의 패킷전송 확인응답을 원할 여러 가지 경우가 존재한다. 예를 들어 장애가 있을 경우, 송신자는 수신 체인의 상태를 모를 수 있다. 또는 송신자는 (MaxHeight 패킷 필드로) 패킷에 타임아웃을 부여하기를 원하는 반면, 수신 체인이 갑작스런 수신 패킷 수 급증에 의한 서비스 거부(denial-of-service) 공격을 받을 수도 있다.\")]),o(\"p\",[e._v(\"이런 경우, 송신자는 초기 패킷 상태를 AckPending 으로 설정하여 전송 확인응답을 요구할 수 있다. 그러면 앱 머클 해시에 abbreviatedIBCPacket 을 포함하여 전송을 확인해 주는 것이 수신 체인의 책임이다.\")]),o(\"p\",[o(\"img\",{attrs:{src:\"https://raw.githubusercontent.com/gnuclear/atom-whitepaper/master/msc/ibc_with_ack.png\",alt:\"Figure of Zone1, Zone2, and Hub IBC with acknowledgement\"}})]),o(\"p\",[e._v(\"먼저, 'Zone 1’에 IBCPacket 이 존재함을 증명하는 '허브’가 있다. 그리고 이 허브 위에 IBCBlockCommit 과 IBCPacketTx 가 포스팅된다. 예를 들어 IBCPacketTx 는 다음과 같은 값을 갖는다:\")]),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"FromChainID\")]),e._v(\": “Zone1”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"FromBlockHeight\")]),e._v(\": 100 (say)\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Packet\")]),e._v(\": an \"),o(\"code\",{pre:!0},[e._v(\"IBCPacket\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Header\")]),e._v(\": an \"),o(\"code\",{pre:!0},[e._v(\"IBCPacketHeader\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"SrcChainID\")]),e._v(\": “Zone1”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"DstChainID\")]),e._v(\": “Zone2”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Number\")]),e._v(\": 200 (say)\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Status\")]),e._v(\": \"),o(\"code\",{pre:!0},[e._v(\"AckPending\")])]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Type\")]),e._v(\": “coin”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"MaxHeight\")]),e._v(\": 350 (say “Hub” is currently at height 300)\")])])]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Payload\")]),e._v(\": <The bytes of a “coin” payload>\")])])])]),o(\"p\",[e._v(\"다음으로, '허브’에 IBCPacket 이 존재함을 증명하는 ‘Zone 2’ 위에 IBCBlockCommit 과 IBCPacketTx 가 포스팅된다. 예를 들면, IBCPacketTx 는 다음과 같다:\")]),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"FromChainID\")]),e._v(\": “Hub”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"FromBlockHeight\")]),e._v(\": 300\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Packet\")]),e._v(\": an \"),o(\"code\",{pre:!0},[e._v(\"IBCPacket\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Header\")]),e._v(\": an \"),o(\"code\",{pre:!0},[e._v(\"IBCPacketHeader\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"SrcChainID\")]),e._v(\": “Zone1”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"DstChainID\")]),e._v(\": “Zone2”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Number\")]),e._v(\": 200\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Status\")]),e._v(\": \"),o(\"code\",{pre:!0},[e._v(\"AckPending\")])]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Type\")]),e._v(\": “coin”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"MaxHeight\")]),e._v(\": 350\")])])]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Payload\")]),e._v(\": 는 앱-The same bytes of a “coin” payload 생략형\")])])])]),o(\"p\",[e._v(\"그 다음, ‘Zone 2’는 앱-해시(app-hash)에 새로운 상태의 AckSent 를 보이는 생략형 패킷을 반드시 포함해야 한다. 생략형 IBCPacket 이 ‘Zone 2’ 위에 존재함을 증명하는 ‘허브’ 위에 IBCBlockCommit 와 IBCPacketTx 가 다시 포스팅된다. 예를 들면 IBCPacketTx 는 다음과 같다:\")]),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"FromChainID\")]),e._v(\": “Zone2”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"FromBlockHeight\")]),e._v(\": 400 (say)\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Packet\")]),e._v(\": an \"),o(\"code\",{pre:!0},[e._v(\"IBCPacket\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Header\")]),e._v(\": an \"),o(\"code\",{pre:!0},[e._v(\"IBCPacketHeader\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"SrcChainID\")]),e._v(\": “Zone1”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"DstChainID\")]),e._v(\": “Zone2”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Number\")]),e._v(\": 200\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Status\")]),e._v(\": \"),o(\"code\",{pre:!0},[e._v(\"AckSent\")])]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Type\")]),e._v(\": “coin”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"MaxHeight\")]),e._v(\": 350\")])])]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"PayloadHash\")]),e._v(\": AckThe hash bytes of the same “coin” payload 완결된\")])])])]),o(\"p\",[e._v(\"끝으로, '허브’는 패킷의 상태를 AckPending 에서 AckReceived 로 업데이트 해야 한다. 이 새로이 완결된 상태의 증거가 'Zone 2’로 되돌아간다. 예를 들면, IBCPacketTx 는 다음과 같은 값을 갖는다:\")]),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"FromChainID\")]),e._v(\": “Hub”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"FromBlockHeight\")]),e._v(\": 301\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Packet\")]),e._v(\": an \"),o(\"code\",{pre:!0},[e._v(\"IBCPacket\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Header\")]),e._v(\": an \"),o(\"code\",{pre:!0},[e._v(\"IBCPacketHeader\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"SrcChainID\")]),e._v(\": “Zone1”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"DstChainID\")]),e._v(\": “Zone2”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Number\")]),e._v(\": 200\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Status\")]),e._v(\": \"),o(\"code\",{pre:!0},[e._v(\"AckReceived\")])]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Type\")]),e._v(\": “coin”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"MaxHeight\")]),e._v(\": 350\")])])]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"PayloadHash\")]),e._v(\": 패킷 전 The hash bytes of the same “coin” payload 가정할\")])])])]),o(\"p\",[e._v(\"한편, 'Zone 1’은 ‘코인’패킷 전송의 실패가 ‘허브’ 상에서 증명되지 않는 한, 성공적으로 전송될 것이라고 가정할 것이다. 위의 예에서, '허브’는 ‘블록 350’를 통해 'Zone 2’의 AckSent 상태를 수신하지 않는다면, 상태를 타임아웃(Timeout)으로 자동 설정했을 것이다. 이 타임아웃 증거가 'Zone 1’에 다시 포스팅 될 수 있고, 모든 토큰은 반환될 수 있다.\")]),o(\"p\",[o(\"img\",{attrs:{src:\"https://raw.githubusercontent.com/gnuclear/atom-whitepaper/master/msc/ibc_with_ack_timeout.png\",alt:\"Figure of Zone1, Zone2, and Hub IBC with acknowledgement and timeout\"}})]),o(\"h3\",{attrs:{id:\"merkle-tree-proof-specification\"}},[e._v(\"머클 트리와 증명 명세 (Merkle Tree & Proof Specification)\")]),o(\"p\",[e._v(\"두 가지의 머클 트리 유형이 텐더민트/코스모스 생태계에서 지원된다: 단순 트리(Simple Tree)와 IAVL+ 트리.\")]),o(\"h4\",{attrs:{id:\"simple-tree\"}},[e._v(\"단순 트리 (Simple Tree)\")]),o(\"p\",[e._v(\"단순트리는 요소들(elements)의 정적 리스트(static list)를 위한 머클 트리이다. 항목의 수가 2 의 거듭제곱이 아닐 경우, 잎들이 서로 다른 수준에 위치할 수 있다. 단순 트리는 트리의 양측면을 동일한 높이로 유지하고자 하지만, 좌측이 더 클 수도 있다. 이 머클 트리는 블록의 이체들을 그리고 애플리케이션 상태 루트의 최상위 요소들을 머클화 하기 위해 사용된다.\")]),o(\"pre\",{pre:!0},[o(\"code\",{pre:!0,attrs:{\"v-pre\":\"\"}},[e._v(\"                *\\n               / \\\\\\n             /     \\\\\\n           /         \\\\\\n         /             \\\\\\n        *               *\\n       / \\\\             / \\\\\\n      /   \\\\           /   \\\\\\n     /     \\\\         /     \\\\\\n    *       *       *       h6\\n   / \\\\     / \\\\     / \\\\\\n  h0  h1  h2  h3  h4  h5\\n\\n  7요소의 단순트리\\n\")])]),o(\"h4\",{attrs:{id:\"iavl-tree\"}},[e._v(\"IAVL+ Tree\")]),o(\"p\",[e._v(\"IAVL+ 데이터 구조의 목적은 애플리케이션 상태의 키-값 쌍들에 영구 저장(persistent storage)을 제공하는 것이다. 그렇게 하여 결정론적 머클 루트 해시를 효율적으로 계산한다. 트리는 (log(n))의 새 노드들을 만들어서 다시 균형을 잡는다. 기존 AVL 알고리즘에서는 의 변형(variant)을 사용하여 밸런싱되며(balancing), 모든 연산(operations)은 O(log(n))이다.\")]),o(\"p\",[e._v(\"AVL 트리에서는 임의 노드의 2 개 ‘자식 서브트리(child subtree)’의 높이가 최대 1 차이가 난다. 업데이트 시, 이 조건이 위반될 때마다 트리는 이전 트리의 비수정 노드들을 가리키는 O(log(n))의 새 노드들을 만들어서 다시 균형을 잡는다. 기존 AVL 알고리즘에서는 내부 노드들이 키-값 쌍들도 보유할 수 있다. AVL+ 알고리즘(플러스에 주의한다)은 잎 노드 상의 모든 값을 유지하기 위해 AVL 알고리즘을 수정하며, 가지 노드들만 사용하여 키를 저장한다. 이를 통해 알고리즘을 단순화하고, 머클 해시 트레일(merkle hash trail)을 짧게 유지한다.\")]),o(\"p\",[e._v(\"AVL+ 트리는 이더리움의 ariant) 사용이 가능해지면, 이더리움의 패트리샤 트라이 같은 효율적 머클 트리들을 추가로 지원할 것이다.\")]),o(\"h3\",{attrs:{id:\"iavl-key-space-ordered-iteration-inner-nodes-leaf-nodes-iavl-order-of-updates\"}},[e._v(\"와 유사하다. 장단점이 존재한다. 키들은 IAVL+ 트리에 삽입되기 전에 해싱될 필요가 없고, 따라서 키 공간(key space)에서의 빠른 순서반복(ordered iteration)을 제공한다. 로직의 구현이 간편하고 내부 노드(inner nodes)와 잎 노드(leaf nodes)만 필요로 한다. 머클 증명은 일반적으로 짧고 균형 잡힌 이진 트리이다. 반면에 IAVL+ 트리의 머클 루트는 업데이트의 순서(order of updates)에 의존한다.\")]),o(\"p\",[e._v(\"이진 변형(binary variant) 사용이 가능해지면, 이더리움의 패트리샤 트라이 같은 효율적 머클 트리들을 추가로 지원할 것이다.\")]),o(\"h3\",{attrs:{id:\"transaction-types\"}},[e._v(\"이체 유형 (Transaction Types)\")]),o(\"p\",[e._v(\"일반적으로, 이체들은 TMSP 인터페이스를 통해 코스모스 허브 애플리케이션으로 흘러간다.\")]),o(\"p\",[e._v(\"코스모스 허브는 앞으로 SendTx, BondTx, UnbondTx, ReportHackTx, SlashTx, BurnAtomTx, ProposalCreateTx, ProposalVoteTx 등을 포함한 많은 주요 이체 유형들(primary transaction types)을 추가할 것이고 문서화할 것이다. 여기서는 IBC 의 두 주요 이체 유형인 IBCBlockCommitTx 와 IBCPacketTx 에 대해 설명한다.\")]),o(\"h4\",{attrs:{id:\"ibcblockcommittx\"}},[e._v(\"IBCBlockCommitTx\")]),o(\"p\",[e._v(\"IBCBlockCommitTx 이체는 다음으로 구성된다:\")]),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"ChainID (string)\")]),e._v(\": The ID of the blockchain\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"BlockHash ([]byte)\")]),e._v(\": The block-hash bytes, the Merkle root which includes the\\napp-hash\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"BlockPartsHeader (PartSetHeader)\")]),e._v(\": The block part-set header bytes, only\\nneeded to verify vote signatures\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"BlockHeight (int)\")]),e._v(\": The height of the commit\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"BlockRound (int)\")]),e._v(\": The round of the commit\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Commit ([]Vote)\")]),e._v(\": The +⅔ Tendermint \"),o(\"code\",{pre:!0},[e._v(\"Precommit\")]),e._v(\" votes that comprise a block\\ncommit\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"ValidatorsHash ([]byte)\")]),e._v(\": A Merkle-tree root hash of the new validator set\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"ValidatorsHashProof (SimpleProof)\")]),e._v(\": A SimpleTree Merkle-proof for proving the\\n\"),o(\"code\",{pre:!0},[e._v(\"ValidatorsHash\")]),e._v(\" against the \"),o(\"code\",{pre:!0},[e._v(\"BlockHash\")])]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"AppHash ([]byte)\")]),e._v(\": A IAVLTree Merkle-tree root hash of the application state\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"AppHashProof (SimpleProof)\")]),e._v(\": A SimpleTree Merkle-proof for proving the\\n\"),o(\"code\",{pre:!0},[e._v(\"AppHash\")]),e._v(\" against the \"),o(\"code\",{pre:!0},[e._v(\"BlockHash\")])])]),o(\"h4\",{attrs:{id:\"ibcpackettx\"}},[e._v(\"IBCPacketTx\")]),o(\"p\",[e._v(\"IBCPacket 은 다음으로 구성된다:\")]),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Header (IBCPacketHeader)\")]),e._v(\": The packet header\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Payload ([]byte)\")]),e._v(\": The bytes of the packet payload. \"),o(\"em\",[e._v(\"Optional\")])]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"PayloadHash ([]byte)\")]),e._v(\": The hash for the bytes of the packet. \"),o(\"em\",[e._v(\"Optional\")])])]),o(\"p\",[e._v(\"Payload 또는 PayloadHash 가 반드시 존재해야 한다. IBCPacket 의 해시는 Header 와 Payload 의 단순 머클 루트이다. 전체 페이로드(full payload)가 없는 IBCPacket 은 \"),o(\"em\",[e._v(\"생략형 패킷\")]),e._v(\"(\"),o(\"em\",[e._v(\"abbreviated packet\")]),e._v(\")이라고 부른다.\")]),o(\"p\",[e._v(\"IBCPacketHeader 는 다음으로 구성된다.\")]),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"SrcChainID (string)\")]),e._v(\": The source blockchain ID\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"DstChainID (string)\")]),e._v(\": The destination blockchain ID\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Number (int)\")]),e._v(\": A unique number for all packets\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Status (enum)\")]),e._v(\": Can be one of \"),o(\"code\",{pre:!0},[e._v(\"AckPending\")]),e._v(\", \"),o(\"code\",{pre:!0},[e._v(\"AckSent\")]),e._v(\", \"),o(\"code\",{pre:!0},[e._v(\"AckReceived\")]),e._v(\",\\n\"),o(\"code\",{pre:!0},[e._v(\"NoAck\")]),e._v(\", or \"),o(\"code\",{pre:!0},[e._v(\"Timeout\")])]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Type (string)\")]),e._v(\": The types are application-dependent. Cosmos reserves the\\n“coin” packet type\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"MaxHeight (int)\")]),e._v(\": If status is not \"),o(\"code\",{pre:!0},[e._v(\"NoAckWanted\")]),e._v(\" or \"),o(\"code\",{pre:!0},[e._v(\"AckReceived\")]),e._v(\" by this\\nheight, status becomes \"),o(\"code\",{pre:!0},[e._v(\"Timeout\")]),e._v(\". \"),o(\"em\",[e._v(\"Optional\")])])]),o(\"p\",[e._v(\"IBCPacketTx 이체는 다음으로 구성된다:\")]),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"FromChainID (string)\")]),e._v(\": The ID of the blockchain which is providing this\\npacket; not necessarily the source\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"FromBlockHeight (int)\")]),e._v(\": The blockchain height in which the following packet\\nis included (Merkle-ized) in the block-hash of the source chain\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Packet (IBCPacket)\")]),e._v(\": A packet of data, whose status may be one of\\n\"),o(\"code\",{pre:!0},[e._v(\"AckPending\")]),e._v(\", \"),o(\"code\",{pre:!0},[e._v(\"AckSent\")]),e._v(\", \"),o(\"code\",{pre:!0},[e._v(\"AckReceived\")]),e._v(\", \"),o(\"code\",{pre:!0},[e._v(\"NoAck\")]),e._v(\", or \"),o(\"code\",{pre:!0},[e._v(\"Timeout\")])]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"PacketProof (IAVLProof)\")]),e._v(\": A IAVLTree Merkle-proof for proving the packet’s\\nhash against the \"),o(\"code\",{pre:!0},[e._v(\"AppHash\")]),e._v(\" of the source chain at given height\")])]),o(\"p\",[e._v(\"'허브’를 통해 '존 1’에서 '존 2’로 패킷을 송신하기 위한 순서가 {그림 X}에 도시되어 있다. 먼저, IBCPacketTx 가 패킷이 '존 1’의 앱-상태(app-state)에 포함되어 있음을 '허브’에 증명한다. 그 다음에 또 다른 IBCPacketTx 가 패킷이 '허브’의 앱-상태에 포함되어 있음을 '존 2’에 증명한다. 이 절차 동안, IBCPacket 필드들은 동일하다: SrcChainID 는 언제나 'Zone1(존 1)'이고 DstChainID 는 언제나 'Zone2(존 2)'이다.\")]),o(\"p\",[e._v(\"PacketProof 은 반드시 다음과 같은 올바른 머클 증명 경로를 포함해야 한다:\")]),o(\"pre\",{pre:!0},[o(\"code\",{pre:!0,attrs:{\"v-pre\":\"\"}},[e._v(\"IBC/<SrcChainID>/<DstChainID>/<Number>\\n\")])]),o(\"p\",[e._v(\"'존 1’이 '허브’를 통해 '존 2’로 패킷을 전송할 경우, 패킷이 ‘존 1’, ‘허브’ 또는 '존 2’의 어디에서 머클화 되든지 상관 없이 IBCPacket 데이터는 동일하다. 변경 가능한 유일한 필드는 전송 추적을 위한 Status(상태)이다.\")]),o(\"h2\",{attrs:{id:\"acknowledgements\"}},[e._v(\"감사의 글 (Acknowledgements)\")]),o(\"p\",[e._v(\"We thank our friends and peers for assistance in conceptualizing, reviewing, and\\nproviding support for our work with Tendermint and Cosmos.\")]),o(\"ul\",[o(\"li\",[e._v(\"rding, especially under the TMSP section of \"),o(\"a\",{attrs:{href:\"https://www.skuchain.com/\"}},[e._v(\"SkuChain\")]),e._v(\" provided much help in formatting and\\nwording, especially under the TMSP section\")]),o(\"li\",[o(\"a\",{attrs:{href:\"https://github.com/jtremback\"}},[e._v(\"Jehan Tremback\")]),e._v(\" of Althea and Dustin Byington\\nfor helping with initial iterations\")]),o(\"li\",[o(\"a\",{attrs:{href:\"http://soc1024.com/\"}},[e._v(\"Andrew Miller\")]),e._v(\" of r feedback on consensus and wording\")])]),o(\"ul\",[o(\"li\",[e._v(\"Also thanks to [Bill Gleim](\"),o(\"a\",{attrs:{href:\"https://githu\"}},[e._v(\"https://githu\")]),e._v(\" for feedback on consensus\")])]),o(\"ul\",[o(\"li\",[e._v(\"Han](\"),o(\"a\",{attrs:{href:\"http://www.seunghwanhan.com\"}},[e._v(\"http://www.seunghwanhan.com\")]),e._v(\") for for feedback on consensus and wording\")]),o(\"li\",[e._v(\"Also thanks to organization here for your contributi and\")])]),o(\"h2\",{attrs:{id:\"citations-for-various-contributions\"}},[e._v(\"인용 (Citations) ################ for various contributions.\")]),o(\"ul\",[o(\"li\",[o(\"strong\",[e._v(\"Your name and organization here for your contribution\")])])]),o(\"h2\",{attrs:{id:\"citations\"}},[e._v(\"인용 (Citations)\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"https://github.com/ethereum/wiki/wiki/White-Paper\"}},[e._v(\"3\")]),e._v(\" Bitcoin: \"),o(\"a\",{attrs:{href:\"https://github.com/ethereum/wi\"}},[e._v(\"https://github.com/ethereum/wi\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"https://download.slock.it/public/DAO/WhitePaper.pdf\"}},[e._v(\"4\")]),e._v(\" ZeroCash: tps://download.slock.it/public/DA\")]),o(\"li\",[o(\"a\",{attrs:{href:\"https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki\"}},[e._v(\"5\")]),e._v(\" Ethereum: Witness: \"),o(\"a\",{attrs:{href:\"https://github.com/bitcoin/bips/blob/ma\"}},[e._v(\"https://github.com/bitcoin/bips/blob/ma\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"https://arxiv.org/pdf/1510.02037v2.pdf\"}},[e._v(\"6\")]),e._v(\" TheDAO: G: \"),o(\"a\",{attrs:{href:\"https://arxiv.org/pdf/1510.02037v2.pdf\"}},[e._v(\"https://arxiv.org/pdf/1510.02037v2.pdf\")])])]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"https://lightning.network/lightning-network-paper-DRAFT-0.5.pdf\"}},[e._v(\"7\")]),e._v(\" Lig\")])]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"https://lightning.network/lightning-network-paper-DRAFT-0.5.pdf\"}},[e._v(\"7\")]),e._v(\" Segregated Witness: ttps://lightning.network/lightning-network-paper-DRAFT-0.5.pdf\")]),o(\"li\",[o(\"a\",{attrs:{href:\"https://github.com/tendermint/tendermint/wiki\"}},[e._v(\"8\")]),e._v(\" BitcoinNG: \"),o(\"a\",{attrs:{href:\"https://github.com/tendermint/tenderm\"}},[e._v(\"https://github.com/tendermint/tenderm\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"https://groups.csail.mit.edu/tds/papers/Lynch/jacm85.pdf\"}},[e._v(\"9\")]),e._v(\" Lightning Network: \"),o(\"a\",{attrs:{href:\"https://groups.csail.mit.edu/tds/papers/Lynch/jacm85.pdf\"}},[e._v(\"https://groups.csail.mit.edu/tds/papers/Lynch/jacm85.pdf\")])])]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"https://blog.ethereum.org/2014/01/15/slasher-a-punitive-proof-of-stake-algorithm/\"}},[e._v(\"10\")])])]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"https://bitcoin.org/bitcoin.pdf\"}},[e._v(\"1\")]),e._v(\" Tendermint: tps://blog.ethereum.org/2014/01/15/slasher-a-\")]),o(\"li\",[o(\"a\",{attrs:{href:\"https://bitcoin.org/bitcoin.pdf\"}},[e._v(\"1\")]),e._v(\" FLP Impossibility: \"),o(\"a\",{attrs:{href:\"http://sail.mit.edu/papers/osdi99.pdf\"}},[e._v(\"sail.mit.edu/papers/osdi99.pdf\")])])]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"https://bitshares.org/technology/delegated-proof-of-stake-consensus/\"}},[e._v(\"12\")]),e._v(\" BitShares: https:/\")])]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"https://bitshares.org/technology/delegated-proof-of-stake-consensus/\"}},[e._v(\"12\")]),e._v(\" Slasher: : \"),o(\"a\",{attrs:{href:\"https://bitshares.org/technology/delegated-proof-of-stake-consensus/\"}},[e._v(\"https://bitshares.org/technology/delegated-proof-of-stake-consensus/\")])])]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"https://www.stellar.org/papers/stellar-consensus-protocol.pdf\"}},[e._v(\"13\")]),e._v(\" Ste\")])]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"https://www.stellar.org/papers/stellar-consensus-protocol.pdf\"}},[e._v(\"13\")]),e._v(\" PBFT: r: \"),o(\"a\",{attrs:{href:\"https://www.stellar.org/papers/stellar-\"}},[e._v(\"https://www.stellar.org/papers/stellar-\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"https://interledger.org/rfcs/0001-interledger-architecture/\"}},[e._v(\"14\")]),e._v(\" BitShares: : \"),o(\"a\",{attrs:{href:\"https://interledger.org/rfcs/0001-interledger-architecture/\"}},[e._v(\"https://interledger.org/rfcs/0001-interledger-architecture/\")])])]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"https://blockstream.com/sidechains.pdf\"}},[e._v(\"15\")])])]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"https://blockstream.com/sidechains.pdf\"}},[e._v(\"15\")]),e._v(\" Stellar: s: \"),o(\"a\",{attrs:{href:\"https://blockstream.com/sidechains.pdf\"}},[e._v(\"https://blockstream.com/sidechains.pdf\")])])]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"https://blog.ethereum.org/2015/08/01/introducing-casper-friendly-ghost/\"}},[e._v(\"16\")]),e._v(\" Casper: http\")])]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"https://blog.ethereum.org/2015/08/01/introducing-casper-friendly-ghost/\"}},[e._v(\"16\")]),e._v(\" Interledger: ://blog.ethereum.org/2015/08/01/introducing-casper-friendly\")]),o(\"li\",[o(\"a\",{attrs:{href:\"https://github.com/tendermint/tmsp\"}},[e._v(\"17\")]),e._v(\" Sidechains: \"),o(\"a\",{attrs:{href:\"//github.com/tendermint/tmsp\"}},[e._v(\"//github.com/tendermint/tmsp\")])])]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"https://github.com/ethereum/EIPs/issues/53\"}},[e._v(\"18\")]),e._v(\" Et\")])]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"https://github.com/ethereum/EIPs/issues/53\"}},[e._v(\"18\")]),e._v(\" Casper: Sharding: \"),o(\"a\",{attrs:{href:\"https://github.com/ethereum/EIPs/issues/53\"}},[e._v(\"https://github.com/ethereum/EIPs/issues/53\")])])]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"http://www.ds.ewi.tudelft.nl/fileadmin/pds/papers/PerformanceAnalysisOfLibswift.pdf\"}},[e._v(\"19\")]),e._v(\" LibSwift:\")])]),o(\"ul\",[o(\"li\",[o(\"p\",[o(\"a\",{attrs:{href:\"http://www.ds.ewi.tudelft.nl/fileadmin/pds/papers/PerformanceAnalysisOfLibswift.pdf\"}},[e._v(\"19\")]),e._v(\" TMSP: ft: \"),o(\"a\",{attrs:{href:\"http://www.ds.ewi.tudelft.nl/f\"}},[e._v(\"http://www.ds.ewi.tudelft.nl/f\")])])]),o(\"li\",[o(\"p\",[o(\"a\",{attrs:{href:\"http://groups.csail.mit.edu/tds/papers/Lynch/jacm88.pdf\"}},[e._v(\"20\")]),e._v(\" Ethereum Sharding: \"),o(\"a\",{attrs:{href:\"http://csail.mit.edu/tds/papers/Lynch/jacm88.pdf\"}},[e._v(\"csail.mit.edu/tds/papers/Lynch/jacm88.pdf\")])])]),o(\"li\",[o(\"p\",[o(\"a\",{attrs:{href:\"https://en.bitcoin.it/wiki/Thin_Client_Security\"}},[e._v(\"21\")]),e._v(\" LibSwift: t Security: \"),o(\"a\",{attrs:{href:\"https://en.bitcoin.it/wiki/Thin_Client_Security\"}},[e._v(\"https://en.bitcoin.it/wiki/Thin_Client_Security\")])])])]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"http://vitalik.ca/files/mauve_paper.html\"}},[e._v(\"22\")]),e._v(\" Ethereum 2.0 Mau\")])]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"http://vitalik.ca/files/mauve_paper.html\"}},[e._v(\"22\")]),e._v(\" DLS: eum 2.0 Mauve Paper: \"),o(\"a\",{attrs:{href:\"http://vitalik.ca/files/mauve_pape\"}},[e._v(\"http://vitalik.ca/files/mauve_pape\")])]),o(\"li\",[e._v(\"[##] Thin Client Security:\")])]),o(\"ul\",[o(\"li\",[e._v(\"[\"),o(\"a\",{attrs:{href:\"https://www.docdroid.net/ec7xGzs/314477721-\"}},[e._v(\"https://www.docdroid.net/ec7xGzs/314477721-\")])])]),o(\"ul\",[o(\"li\",[e._v(\"[# ] Ethereum 2.0 Mauve Paper: ttps://www.docdroid.net/ec7xGzs/31447772\")])]),o(\"h4\",{attrs:{id:\"unsorted-links\"}},[e._v(\"기타 링크 (Unsorted links)\")]),o(\"ul\",[o(\"li\",[e._v(\"[]\")])])])}],u={},_=Object(c[\"a\"])(u,v,h,!1,null,null,null),f=_.exports,g=function(){var e=this,a=e.$createElement;e._self._c;return e._m(0)},b=[function(){var e=this,a=e.$createElement,o=e._self._c||a;return o(\"section\",[o(\"h1\",{attrs:{id:\"cosmos\"}},[e._v(\"Cosmos\")]),o(\"p\",[e._v(\"Uma Rede de Distribuição de Ledgers\")]),o(\"p\",[e._v(\"Jae Kwon jae@tendermint.com\"),o(\"br\"),e._v(\"\\nEthan Buchman ethan@tendermint.com\")]),o(\"p\",[e._v(\"Para discussões, \"),o(\"a\",{attrs:{href:\"https://discord.gg/cosmosnetwork\"}},[e._v(\"entre no nosso Matrix\")]),e._v(\"!\")]),o(\"p\",[o(\"em\",[e._v(\"NOTA: Se você pode ler isso no GitHub, então ainda estamos desenvolvendo este documento ativamente. Por favor, cheque regularmente as atualizações!\")])]),o(\"p\"),o(\"div\",{staticClass:\"minimal-toc\"},[o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#tendermint\"}},[e._v(\"Tendermint\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#validadores\"}},[e._v(\"Validadores\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#consenso\"}},[e._v(\"Consenso\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#clientes-light\"}},[e._v(\"Clientes Light\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#previnindo-ataques\"}},[e._v(\"Previnindo ataques\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#tmsp\"}},[e._v(\"TMSP\")])])])]),o(\"li\",[o(\"a\",{attrs:{href:\"#visao-geral-da-cosmos\"}},[e._v(\"Visão Geral da Cosmos\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#tendermint-bft\"}},[e._v(\"Tendermint-BFT\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#governanca\"}},[e._v(\"Governança\")])])])]),o(\"li\",[o(\"a\",{attrs:{href:\"#o-hub-e-as-zonas\"}},[e._v(\"O Hub e as Zonas\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#o-hub\"}},[e._v(\"O Hub\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#as-zonas\"}},[e._v(\"As Zonas\")])])])]),o(\"li\",[o(\"a\",{attrs:{href:\"#comunicacao-inter-blockchain-ibc\"}},[e._v(\"Comunicação Inter-blockchain (IBC)\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#casos-de-uso\"}},[e._v(\"Casos de Uso\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#exchange-distribuidas\"}},[e._v(\"Exchange Distribuídas\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#pegging-para-outras-criptomoedas\"}},[e._v(\"Pegging para Outras Criptomoedas\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#ethereum-scaling\"}},[e._v(\"Ethereum Scaling\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#integracao-de-multi-aplicacao\"}},[e._v(\"Integração de Multi-Aplicação\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#reducao-de-particao-de-rede\"}},[e._v(\"Redução de partição de rede\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#sistema-de-resolucao-de-nomes-federados\"}},[e._v(\"Sistema de Resolução de Nomes Federados\")])])])]),o(\"li\",[o(\"a\",{attrs:{href:\"#emissao-e-incentivos\"}},[e._v(\"Emissão e Incentivos\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#o-token-atom\"}},[e._v(\"O Token Atom\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#levantamento-de-fundos\"}},[e._v(\"Levantamento de Fundos\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#investindo\"}},[e._v(\"Investindo\")])])])]),o(\"li\",[o(\"a\",{attrs:{href:\"#limitacoes-do-numero-de-validadores\"}},[e._v(\"Limitações do Número de Validadores\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#tornando-se-um-validador-depois-do-dia-da-genesis\"}},[e._v(\"Tornando-se um Validador depois do dia da Genesis\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#penalidades-para-validadores\"}},[e._v(\"Penalidades para Validadores\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#taxas-de-transacao\"}},[e._v(\"Taxas de Transação\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#incentivando-hackers\"}},[e._v(\"Incentivando Hackers\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#especificacao-de-governanca\"}},[e._v(\"Específicação de Governança\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#parametro-de-mudanca-de-proposta\"}},[e._v(\"Parâmetro de Mudança de Proposta\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#texto-da-proposta\"}},[e._v(\"Texto da Proposta\")])])])]),o(\"li\",[o(\"a\",{attrs:{href:\"#roteiro\"}},[e._v(\"Roteiro\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#trabalho-relacionado\"}},[e._v(\"Trabalho Relacionado\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#sistemas-de-consenso\"}},[e._v(\"Sistemas de Consenso\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#classic-byzantine-fault-tolerance\"}},[e._v(\"Classic Byzantine Fault Tolerance\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#participacao-delegada-do-bitshares\"}},[e._v(\"Participação delegada do BitShares\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#stellar\"}},[e._v(\"Stellar\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#bitcoinng\"}},[e._v(\"BitcoinNG\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#casper\"}},[e._v(\"Casper\")])])])]),o(\"li\",[o(\"a\",{attrs:{href:\"#escala-horizontal\"}},[e._v(\"Escala Horizontal\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#protocolo-interledger\"}},[e._v(\"Protocolo Interledger\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#sidechains\"}},[e._v(\"Sidechains\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#esforcos-de-escalabilidade-do-ethereum\"}},[e._v(\"Esforços de Escalabilidade do Ethereum\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#cosmos-vs-ethereum-20-mauve\"}},[e._v(\"Cosmos vs Ethereum 2.0 Mauve\")])])])])])]),o(\"li\",[o(\"a\",{attrs:{href:\"#escala-geral\"}},[e._v(\"Escala Geral\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#lightning-network\"}},[e._v(\"Lightning Network\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#segregated-witness\"}},[e._v(\"Segregated Witness\")])])])])])]),o(\"li\",[o(\"a\",{attrs:{href:\"#apendice\"}},[e._v(\"Apêndice\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#responsabilidade-de-fork\"}},[e._v(\"Responsabilidade de Fork\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#consenso-tendermint\"}},[e._v(\"Consenso Tendermint\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#clientes-leves-do-tendermint\"}},[e._v(\"Clientes Leves do Tendermint\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#prevencao-de-ataques-de-longo-alcance\"}},[e._v(\"Prevenção de ataques de longo alcance\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#superando-forks-e-ataques-de-censura\"}},[e._v(\"Superando Forks e Ataques de Censura\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#especificacao-tmsp\"}},[e._v(\"Especificação TMSP\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#appendtx\"}},[e._v(\"AppendTx\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#checktx\"}},[e._v(\"CheckTx\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#commit\"}},[e._v(\"Commit\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#query\"}},[e._v(\"Query\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#flush\"}},[e._v(\"Flush\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#info\"}},[e._v(\"Info\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#setoption\"}},[e._v(\"SetOption\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#initchain\"}},[e._v(\"InitChain\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#beginblock\"}},[e._v(\"BeginBlock\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#endblock\"}},[e._v(\"EndBlock\")])])])]),o(\"li\",[o(\"a\",{attrs:{href:\"#reconhecimento-de-entrega-de-pacotes-ibc\"}},[e._v(\"Reconhecimento de entrega de pacotes IBC\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#arvore-merkle-e-especificacao-de-prova\"}},[e._v(\"Árvore Merkle e Especificação de Prova\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#arvore-simples\"}},[e._v(\"Árvore Simples\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#arvore-iavl\"}},[e._v(\"Árvore IAVL+\")])])])]),o(\"li\",[o(\"a\",{attrs:{href:\"#tipos-de-transacao\"}},[e._v(\"Tipos de Transação\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#ibcblockcommittx\"}},[e._v(\"IBCBlockCommitTx\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#ibcpackettx\"}},[e._v(\"IBCPacketTx\")])])])])])]),o(\"li\",[o(\"a\",{attrs:{href:\"#agradecimentos\"}},[e._v(\"Agradecimentos\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#citacoes\"}},[e._v(\"Citações\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#links-nao-classificados\"}},[e._v(\"Links não classificados\")])])])])])]),o(\"p\"),o(\"p\",[e._v(\"O sucesso combinado do ecossistema de código aberto, compartilhamento\\nde arquivos descentralizado e criptomoedas públicas tem inspirado um conhecimento sobre\\nprotocolos descentralizados na Internet que podem ser utilizados para melhorar radicalmente\\na infraestrutura. Vimos aplicações de blockchain especializadas como Bitcoin\\n\"),o(\"a\",{attrs:{href:\"https://bitcoin.org/bitcoin.pdf\"}},[e._v(\"[1]\")]),e._v(\" (uma criptomoeda), Zerocash \"),o(\"a\",{attrs:{href:\"http://zerocash-project.org/paper\"}},[e._v(\"[2]\")]),e._v(\" (uma criptomoeda para privacidade\\n), and generalized smart contract platforms such as Ethereum \"),o(\"a\",{attrs:{href:\"https://github.com/ethereum/wiki/wiki/White-Paper\"}},[e._v(\"[3]\")]),e._v(\",\\ncom inúmeras aplicações distribuídas para a Etherium Virtual Machine (EVM), como Augur (uma previsão\\nde mercado) e TheDAO \"),o(\"a\",{attrs:{href:\"https://download.slock.it/public/DAO/WhitePaper.pdf\"}},[e._v(\"[4]\")]),e._v(\" (um clube de investimento).\")]),o(\"p\",[e._v(\"Contudo, até à data, estas blockchains sofreram uma série de inconvenientes,\\nincluindo sua ineficiência energética, desempenho fraco ou limitado e\\nmecanismos de governança imaturos. Propostas de escala\\nde processamento de transações da Bitcoin, como Testemunhas Separadas \"),o(\"a\",{attrs:{href:\"https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki\"}},[e._v(\"[5]\")]),e._v(\" e\\nBitcoinNG \"),o(\"a\",{attrs:{href:\"https://arxiv.org/pdf/1510.02037v2.pdf\"}},[e._v(\"[6]\")]),e._v(\", soluções de escalonamento vertical que permanecem\\nlimitadas pela capacidade de uma única máquina física, a fim de\\nproporcionar uma auditabilidade completa. A Rede Lightning \"),o(\"a\",{attrs:{href:\"https://lightning.network/lightning-network-paper-DRAFT-0.5.pdf\"}},[e._v(\"[7]\")]),e._v(\" pode ajudar\\no Bitcoin no quesito volume de transações, deixando algumas transações completamente\\nfora da carteira, e é bem adequado para micropagamentos e preservando a privacisadade por pagamentos\\nRails, mas pode não ser adequado para necessidades de escala mais abrangente.\")]),o(\"p\",[e._v(\"Uma solução ideal é a de permitir blockchains paralelos múltiplos para\\ninteroperação, mantendo suas propriedades de segurança. Isto provou\\nser difícil, se não impossível, com prova de trabalho. A mineração combinada, por exemplo,\\npermite que o trabalho feito para proteger uma blockchain mãe seja reutilizado em uma blockchain nova,\\nmas as transações ainda devem ser validadas, em ordem, por cada nó, e uma\\nblockchain Merge-mined é vulnerável a ataques se a maioria do poder de\\nhashing sobre a mãe não é ativamente merge-mined da nova. Uma revisão acadêmica\\ndo \"),o(\"a\",{attrs:{href:\"http://vukolic.com/iNetSec_2015.pdf\"}},[e._v(\"arquiteturas de redes alternativas blockchain\\n\")]),e._v(\" é fornecida para\\ncontextualizar, e fornecemos resumos de outras propostas e suas desvantagens em\\n\"),o(\"a\",{attrs:{href:\"#trabalho-relatado\"}},[e._v(\"Trabalho relatado\")]),e._v(\".\")]),o(\"p\",[e._v(\"Nesse relato nós apresentamos a Cosmos, uma novela da arquitetura de rede blockchain que aborda todos\\nesses problemas. Cosmos é uma rede de muitos blockchains independentes, chamados\\nZonas. As zonas são alimentadas pelo Tendermint BFTork \"),o(\"a\",{attrs:{href:\"https://github.com/tendermint/tendermint/wiki\"}},[e._v(\"[8]\")]),e._v(\", que fornece uma\\nalta performace, consistência, segurança\\n\"),o(\"a\",{attrs:{href:\"https://blog.cosmos.network/tendermint-vs-pbft-12e9f294c9ab\"}},[e._v(\"PBFT-como\")]),e._v(\" um mecanismo de consenso\\nrigoroso, onde \"),o(\"a\",{attrs:{href:\"#fork-respons%C3%A1vel\"}},[e._v(\"fork-responsável\")]),e._v(\" tem-se garantias de deter\\ncomportamentos maliciosos. O algoritmo de consenso BFT do Tendermint BFT é\\nbem adaptado para integrar blockchains públicas de prova de estaca.\")]),o(\"p\",[e._v(\"A primeira zona na Cosmos é chamada de Cosmos Hub. A Cosmos Hub é uma criptomoeda\\nmulti-asset de prova de estaca com um simples mecanismo de governança\\no qual permite a rede se adaptar e atualizar. Além disso, a Cosmos Hub pode ser\\nextendida por conexão com outras zonas.\")]),o(\"p\",[e._v(\"O hub e as zonas da rede Cosmos comunicam-se uma com a outra através de um\\nprotocolo de comunicação Inter-blockchain (IBC), um tipo de UDP ou TCP virtual para\\nblockchains. Os tokens podem ser transferidos de uma zona para outra com segurança e\\nrapidez sem necessidade de liquidez cambial entre as zonas. Em vez disso, todas\\nas transferências de tokens inter-zonas passam pelo Hub Cosmos, que mantêm\\na quantidade total de tokens detidas por cada zona. O hub isola cada zona da\\nfalha das outras zonas. Porque qualquer um pode conectar uma nova zona no Hub Cosmos,\\no que permite futuras compatibilidades com novas blockchains inovadoras.\")]),o(\"h2\",{attrs:{id:\"tendermint\"}},[e._v(\"Tendermint\")]),o(\"p\",[e._v(\"Nesta seção, descrevemos o protocolo de consenso da Tendermint e a interface\\nusada para construir aplicações através dele. Para mais detalhes, consulte o \"),o(\"a\",{attrs:{href:\"#ap%C3%AAndice\"}},[e._v(\"apêndice\")]),e._v(\".\")]),o(\"h3\",{attrs:{id:\"validadores\"}},[e._v(\"Validadores\")]),o(\"p\",[e._v(\"No algorítimo de tolerância e falhas clássicas Bizantinas (BFT), cada node tem o mesmo\\npeso. Na Tendermint, nodes tem uma quantidade positiva de \"),o(\"em\",[e._v(\"poder de voto\")]),e._v(\", e\\nesses nodes que tem poder de voto positivo são chamados de \"),o(\"em\",[e._v(\"validadores\")]),e._v(\". Validadores\\nparticipam de um protocolo de consenso por transmissão de assinaturas criptográficas,\\nou \"),o(\"em\",[e._v(\"votos\")]),e._v(\", para concordar com o próximo bloco.\")]),o(\"p\",[e._v(\"Os poderes de voto dos validadores são determinados na gênese, ou são alterados\\nde acordo com a blockchain, dependendo da aplicação. Por exemplo,\\nem uma aplicação de prova de participação, como o Hub da Cosmos, o poder de voto pode ser\\ndeterminado pela quantidade de tokens usados como garantia.\")]),o(\"p\",[o(\"em\",[e._v(\"NOTA: Frações como ⅔ e ⅓ referem-se a frações do total de votos,\\nnunca o número total de validadores, a menos que todos os validadores tenham\\npeso.\")]),o(\"em\",[e._v(\"NOTE: +⅔ significa “mais do que ⅔”, enquanto ⅓+ significa “⅓ ou mais”.\")])]),o(\"h3\",{attrs:{id:\"consenso\"}},[e._v(\"Consenso\")]),o(\"p\",[e._v(\"Tendermint é um protocolo de consenso BFT parcialmente sincronizado e derivado do\\nalgoritmo de consenso DLS \"),o(\"a\",{attrs:{href:\"http://groups.csail.mit.edu/tds/papers/Lynch/jacm88.pdf\"}},[e._v(\"[20]\")]),e._v(\". Tendermint é notável por sua simplicidade,\\ndesempenho, e \"),o(\"a\",{attrs:{href:\"#fork-respons%C3%A1vel\"}},[e._v(\"fork-responsável\")]),e._v(\". O protocolo\\nrequer um grupo determinado de validadores, onde cada validador é identificado por\\nsua chave pública. Validadores chegarão a um consenso em um bloco por vez,\\nonde um bloco é uma lista de transações. A votação para o consenso sobre um bloco\\nacontece por rodada. Cada rodada tem uma líder-de-rodada, ou proponente, que propõe um bloco. Os\\nvalidadores, em seguida, votam, por etapas, sobre a aceitação do bloco proposto\\nou passam para a próxima rodada. O proponente de uma rodada é escolhido\\nde acordo com uma lista ordenada de validadores, proporcionalmente à seu\\npoder de voto.\")]),o(\"p\",[e._v(\"Os detalhes completos do protocolo estão descritos\\n\"),o(\"a\",{attrs:{href:\"https://github.com/tendermint/tendermint/wiki/Byzantine-Consensus-Algorithm\"}},[e._v(\"aqui\")]),e._v(\".\")]),o(\"p\",[e._v(\"A segurança da Tendermint é baseada na tolerância e falhas clássicas Bizantinas ótimas\\natravés de super-maioria (+⅔) e um mecanismo de bloqueio. Juntas, elas garantem\\nisso:\")]),o(\"ul\",[o(\"li\",[e._v(\"⅓+ o poder de voto deve ser bizantino devido a violações de segurança, onde mais\\n  que dois valores são comprometidos.\")]),o(\"li\",[e._v(\"se algum conjunto de validadores tiver sucesso em violar a segurança, ou mesmo tentarem\\npara isso, eles podem ser identificados pelo protocolo. Isso inclui tanto o voto\\npara blocos conflitantes quanto a transmissão de votos injustificados.\")])]),o(\"p\",[e._v(\"Apesar de suas fortes garantias, a Tendermint oferece um desempenho excepcional. Dentro\\nde Benchmarks de 64 nós distribuídos em 7 datacenters em 5 continentes, em\\nnuvens de commodities, o consenso da Tendermint pode processar milhares de\\ntransações por segundo, com tempo de resposta entre um a dois\\nsegundos. Notavelmente, o desempenho muito além de mil transações por segundo\\né mantido mesmo em condições adversas, com validadores falhando ou\\ncombinando votos maliciosamente. Veja a figura abaixo para mais detalhes.\")]),o(\"p\",[o(\"img\",{attrs:{src:\"https://raw.githubusercontent.com/gnuclear/atom-whitepaper/master/images/tendermint_throughput_blocksize.png\",alt:\"Figura do desempenho da Tendermint\"}})]),o(\"h3\",{attrs:{id:\"clientes-light\"}},[e._v(\"Clientes Light\")]),o(\"p\",[e._v(\"O principal benefício do algoritmo de consenso da Tendermint é um cliente leve e simplificado\\nde segurança, tornando-o um candidato ideal para o uso de dispositivos móveis e casos de uso na\\ninternet. Enquanto um cliente leve do Bitcoin deve sincronizar blockchains e encontrar\\no que tem mais prova de trabalho, os clientes light da Tendermint precisa apenas\\ndas alterações feitas pelo conjunto dos validadores, em seguida, verifica-se o +⅔ PreCommits\\nno último bloco para determinar o estado atual.\")]),o(\"p\",[e._v(\"Provas claras e sucintas do cliente também permite \"),o(\"a\",{attrs:{href:\"#comunica%C3%A7%C3%A3o-inter-blockchain-ibc\"}},[e._v(\"comunicação-inter-\\nblockchain\")]),e._v(\".\")]),o(\"h3\",{attrs:{id:\"previnindo-ataques\"}},[e._v(\"Previnindo ataques\")]),o(\"p\",[e._v(\"A Tendermint dispõe de medidas de proteção para evitar\\nataques, como \"),o(\"a\",{attrs:{href:\"#previnindo-ataques-de-longa-dist%C3%A2ncia\"}},[e._v(\"gastos duplos em longa-distância-sem-estaca double\\nspends\")]),e._v(\" e\\n\"),o(\"a\",{attrs:{href:\"#superando-forks-e-censurando-ataques\"}},[e._v(\"censura\")]),e._v(\". Esses são discutidos\\ncompletamente no \"),o(\"a\",{attrs:{href:\"#ap%C3%AAndice\"}},[e._v(\"apêndice\")]),e._v(\".\")]),o(\"h3\",{attrs:{id:\"tmsp\"}},[e._v(\"TMSP\")]),o(\"p\",[e._v(\"O algoritmo de consenso Tendermint é implementado através de um programa chamado Tendermint\\nCore. O Tendermint BFT é um “mecanismo de consenso” independente de aplicações que\\ntransformam qualquer aplicação blackbox em uma réplica distribuída na\\nBlockchain. Tendermint BFT conecta-se ao blockchain\\natravés de aplicações do Tendermint Socket Protocol (TMSP) \"),o(\"a\",{attrs:{href:\"https://github.com/tendermint/tmsp\"}},[e._v(\"[17]\")]),e._v(\". Assim, o TMSP\\npermite que as aplicações da blockchain sejam programadas em qualquer idioma, não apenas\\na linguagem de programação que o mecanismo de consenso é escrito, além disso,\\no TMSP torna possível a troca fácil da camada de consenso de qualquer\\ntipo de blockchain.\")]),o(\"p\",[e._v(\"Nós fizemos uma analogia com a bem conhecida criptogradia do Bitcoin. Bitcoin é uma\\nblockchain de criptomoedas onde cada nó mantém uma Unspent totalmente auditada\\ne banco de dados de saída de transação (UTXO). Se alguém quisesse criar um Bitcoin-like\\nTMS, a Tendermint BFT seria responsável por\")]),o(\"ul\",[o(\"li\",[e._v(\"Compartilhar blocos e transações entre os nós\")]),o(\"li\",[e._v(\"Estabelecer uma ordem de transações canônica/imutável (a blockchain)\")])]),o(\"p\",[e._v(\"Entretanto, o aplicativo TMSP seria responsável por\")]),o(\"ul\",[o(\"li\",[e._v(\"Manter o banco de dados UTXO\")]),o(\"li\",[e._v(\"Validar a criptografia das assinaturas das transações\")]),o(\"li\",[e._v(\"Previnir transações vindas de gastos de fundos não exisentes\")]),o(\"li\",[e._v(\"Permitir aos clientes a consulta do banco de dados UTXO\")])]),o(\"p\",[e._v(\"Tendermint é capaz de decompor o design da blockchain, oferecendo um simples\\nAPI entre o processo da aplicação e o processo do consenso.\")]),o(\"h2\",{attrs:{id:\"visao-geral-da-cosmos\"}},[e._v(\"Visão Geral da Cosmos\")]),o(\"p\",[e._v(\"Cosmos é uma rede de blockchains paralelos e independentes que são alimentadas pelo\\nclássico algorítimo de consenso BFT como a Tendermint\\n\"),o(\"a\",{attrs:{href:\"http://github.com/tendermint/tendermint\"}},[e._v(\"1\")]),e._v(\".\")]),o(\"p\",[e._v(\"A primeira blockchain dessa rede será a Cosmos Hub. A Cosmos Hub\\nconecta as outras blockchains (ou \"),o(\"em\",[e._v(\"zonas\")]),e._v(\") através do protocolo de comunicação-inter-\\nblockchain. A Cosmos Hub rastreia vários tipos de tokens e mantém\\nregisto do número total de tokens em cada zona ligada. Os tokens podem ser\\ntransferidos de uma zona para outra de forma segura e rápida, sem necessidade de\\numa troca líquida entre zonas, porque todas as transferências de moedas ocorre\\natravés da Cosmos Hub.\")]),o(\"p\",[e._v(\"Essa arquitetura resolve muitos dos problemas enfrentados atualmente pelas blockchains,\\ntais como interoperabilidade de aplicativos, escalabilidade e capacidade de atualização contínua.\\nPor exemplo, as zonas baseadas do Bitcoin, Go-Ethereum, CryptoNote, ZCash, ou qualquer\\nsistema blockchain pode ser ligado ao Cosmos Hub. Essas zonas permite a Cosmos\\no escalonamento infinito para atender a demanda global de transações. As Zonas também são um grande\\napoio para a exchange distribuída, que também serão apoiadas.\")]),o(\"p\",[e._v(\"Cosmos não é apenas uma única ledger distribuídos, o Cosmos Hub não é um\\njardim cercado ou o centro do universo. Estamos elaborando um protocolo para\\numa rede aberta de legers distribuídos que pode servir como um novo\\nfuturos para sistemas financeiros, baseados em princípios de criptografia, economia\\nteoria de consenso, transparência e responsabilidade.\")]),o(\"h3\",{attrs:{id:\"tendermint-bft\"}},[e._v(\"Tendermint-BFT\")]),o(\"p\",[e._v(\"O Cosmos Hub é a primeira blockchain pública na rede Cosmos, alimentada pelo\\nalgoritimo de consenso BFT Tendermint. A Tendermint é um projeto de fonte aberta que\\nnasceu em 2014 para abordar a velocidade, a escalabilidade e as questões\\ndo algoritimo de consenso da prova-de-trabalho do Bitcoin. Usando e melhorando\\nalgoritmos BFT comprovados e desenvolvidos no MIT em 1988 \"),o(\"a\",{attrs:{href:\"http://groups.csail.mit.edu/tds/papers/Lynch/jacm88.pdf\"}},[e._v(\"[20]\")]),e._v(\", o time Tendermint foi o primeiro a\\nque demonstrou conceitualmente uma prova de estaca das criptomoedas que aborda o\\nproblema de “sem-estaca” sofrido pelas criptomoedas da primeira geração\\ntais como NXT e BitShares.\")]),o(\"p\",[e._v(\"Hoje, praticamente todas carteiras móveis de Bitcoin usam servidores confiáveis, que fornece\\na elas transações com verificação. Isso porque a prova-de-trabalho exige\\nmuitas confirmações antes que uma transação possa ser considerada\\nirreversivel e completa. Os ataques de gasto-duplo já foram demonstrados em\\nserviços como a CoinBase.\")]),o(\"p\",[e._v(\"Ao contrário de outros sistemas de consenso blockchain, a Tendermint oferece\\ncomprovação segura de pagamento para o cliente móvel. Uma vez que a Mint é\\nprojetada para nunca passar por um fork, carteiras móveis podem receber confirmações de transações\\ninstantâneas, o que torna os pagamentos confiáveis e práticos através de\\nsmartphones. Isto tem implicações significativas para as aplicações da Internet.\")]),o(\"p\",[e._v(\"Validadores na Cosmos tem uma função similar aos mineiros do Bitcoin, mas usam\\nassinaturas criptografadas para votar. Validadores são máquinas seguras e dedicadas\\nque são responsáveis por validar os blocos. Os não validadores podem delegar através de seus tokens estacados\\n(chamados “atoms”) a qualquer validador para ganhar uma parcela das taxas da blockchain\\ne recompensas de atoms, mas eles correm o risco de serem punidos (cortados) se o\\no validador de delegados for invadido ou violar o protocolo. A segurança comprovada\\ngarantida pelo consenso BFT da Tendermint, e o depósito de garantia das\\npartes interessadas - validadores e delegados - fornecem dados prováveis,\\nsegurança para os nós e clientes light.\")]),o(\"h3\",{attrs:{id:\"governanca\"}},[e._v(\"Governança\")]),o(\"p\",[e._v(\"Ledgers de distribuição pública devem ser constituídos de um sistema de governança.\\nO Bitcoin confia na Fundação Bitcoin e na mineração para\\ncoordenar upgrades, mas este é um processo lento. Ethereum foi dividido em ETH e\\nETC depois de hard-fork para se recuperar do hack TheDAO, em grande parte porque não havia\\ncontrato sócial prévio, nem um mecanismo para tomar tais decisões.\")]),o(\"p\",[e._v(\"Os validadores e os delegados do Cosmos Hub podem votar propostas que\\nalteraram automaticamente os parâmetros predefinidos do sistema (tal como o gás limite do\\nbloco), coordenar upgrades, bem como votar em emendas para a\\nconstituição que governa as políticas do Cosmos Hub. A Constituição\\npermite a coesão entre as partes interessadas em questões como o roubo\\ne bugs (como o incidente TheDAO), permitindo uma resolução mais rápida e mais limpa.\")]),o(\"p\",[e._v(\"Cada zona pode ter sua própria constituição e mecanismo de governança.\\nPor exemplo, o Cosmos Hub pode ter uma constituição que reforça a imutabilidade\\nno Hub (sem roll-backs, a não ser por bugs em implementações dos nós do Cosmos Hub),\\nenquanto cada zona pode ter sua própria política sobre os roll-backs.\")]),o(\"p\",[e._v(\"Ao disponibilizar a interoperabilidade em diferentes políticas das zonas, a rede Cosmos\\ndá aos usuários total liberdade e potenciais permissões para\\nexperimentos.\")]),o(\"h2\",{attrs:{id:\"o-hub-e-as-zonas\"}},[e._v(\"O Hub e as Zonas\")]),o(\"p\",[e._v('Aqui nós descrevemos o modelo do roteiro de descentralização e ecalabilidade. Cosmos é uma\\nrede de muitas blockchains alimentadas pela Tendermint. Enquanto existirem propostas visando\\ncriar um\"blockchain solitário\" com ordens de transações cheias, a Cosmos\\npermite que muitas blockchains rodem junto de outra enquanto mantêm a\\ninteroperabilidade.')]),o(\"p\",[e._v(\"Basicamente, o Cosmos Hub gerencia várias blockchains independentes chamadas “zonas”\\n(as vezes chamadas de “shards”, em referência a técnica de escalonamento de\\nbando de dados conhecida como “sharding”). Uma constante transmissão de blocos recentes das\\nzonas atuando no Hub permite ao Hub manter o estado de cada zona atualizado.\\nSendo assim, cada zona mantêm ativa o estado do Hub (mas as zonas não se mantêm ativas\\ncom qualquer outro exceto o Hub). Pacotes de informação são\\nentão comunicados de uma zona para outra atráves de Merkle-proofs como evidências,\\nessas informações são enviadas e recebidas. Esse mecanismo é chamado de\\ncomunicação inter-blockchain, ou IBC para encurtar.\")]),o(\"p\",[o(\"img\",{attrs:{src:\"https://raw.githubusercontent.com/gnuclear/atom-whitepaper/master/images/hub_and_zones.png\",alt:\"Figura de reconhecimentodo hub e das zonas\"}})]),o(\"p\",[e._v(\"Qualquer uma das zonas podem ser hubs para formar gráficos acíclicos, mas\\nmas para deixar claro, nós vamos apenas descrever uma simples configuração para\\num único hub, e várias zonas que não são hubs.\")]),o(\"h3\",{attrs:{id:\"o-hub\"}},[e._v(\"O Hub\")]),o(\"p\",[e._v(\"O Cosmos Hub é uma blockchain que hospeda um ledger de distribuíção de multi-asset,\\nonde os tokens podem ser mantidos por usuários individuais ou pelas próprias zonas. Esses\\ntokens podem ser movidos de uma zona para outra em um pacote IBC especial chamado\\n“coin packet”. O hub é responsavel por preservar a manutenção global de\\ntoda a quantia de cada token nas zonas. As transações de moedas no pacote IBC\\nprecisam ser feitas pelo remetente, hub, e blockchain recebedor.\")]),o(\"p\",[e._v(\"Desde a atuação do Cosmos Hub como ledger principal para todos o\\nsistema, a segurança do Hub é de suma importância. Enquanto cada\\nzona pode ser uma blockchain Tendermint que é segurada por 4((ou talvez\\nmenos caso o consenso BFT não seja necessário), o Hub precisa ser segurado por uma descentralização\\nglobalizada feita pelos validadores que podem evitar os mais severos tipos de\\nataques, como uma partição de rede continental ou um estado-nação fazendo\\nataques.\")]),o(\"h3\",{attrs:{id:\"as-zonas\"}},[e._v(\"As Zonas\")]),o(\"p\",[e._v(\"Uma zona Cosmos é uma blockchain independente das trocas de mensagens IBC com o\\nHub. Na perspectiva do Hub, uma zona é uma conta multi-asset dynamic-membership\\nmulti-signature que pode enviar e receber tokens usando pacotes IBC. Como\\numa conta de criptomoeda, uma zona não pode transferir mais tokens do que ela possui, mas\\npode receber tokens de outras que os tem. Uma zona pode ser usada como uma\\n“fonte” de um ou mais tipos de tokens, garantindo o poder de aumentar o estoque desse\\ntoken.\")]),o(\"p\",[e._v(\"Os atoms do Cosmos Hub podem ser estacados por validadores de uma zona conectada ao\\nHub. Enquanto os ataques de gasto-duplo nesses zonas podem resultar em um core dos\\natoms com o fork-responsável da Tendermint, uma zona onde +⅔ do poder de voto\\nsão Bizantinos podem deixar o estado inválido. O Cosmos Hub não verifica ou\\nexecuta transações ocorridas em outras zonas, então essa é uma responsabilidade dos\\nusuários para enviar os tokes ara zonas que eles confiem. Futuramente, o sistema de\\ngovernança do Cosmos Hub irá implementar propostas para o Hub e para as falhas\\ndas zonas. Por exemplo, um token de saída transferido para algumas (ou todas) zonas podem ser\\nsegurados em caso de uma emergência de quebra de circuito das zonas(uma parada temporária\\nnas transferências dos tokens) quando um ataque é detectado.\")]),o(\"h2\",{attrs:{id:\"comunicacao-inter-blockchain-ibc\"}},[e._v(\"Comunicação Inter-blockchain (IBC)\")]),o(\"p\",[e._v(\"Agora nós olhamos para como o Hub e as zonas vão se comunicar. Por exemplo, se\\naqui são três blockchains, “Zona1”, “Zona2”, and “Hub”, e nós queremos que a\\n“Zona1” produza um pacote destinado para a “Zona2” indo através do “Hub”. Para mover um\\npacote de uma blockchain para outra, uma prova é feita na\\ncadeia recebedora. A prova atesta esse envio publicado na cadeia de destino por uma alegação\\nde pacote. Para a cadeia recebedora checar essa prova, isso é possível\\npor um block principal de envio. Esse mecanismo é similar ao usado por\\ncadeias paralelas, que requerem duas cadeias interagindo uma com a outra via\\ntransmissões bidirecionais por dados de prova-de-existência (transações).\")]),o(\"p\",[e._v(\"O protocolo IBC pode naturalmente ser definido usando dois tipos de transações: uma\\ntransação \"),o(\"code\",{pre:!0},[e._v(\"IBCBlockCommitTx\")]),e._v(\", a qual permite uma blockchain provar para qualquer\\nespectador o mais recente hash-de-bloco, e uma transação \"),o(\"code\",{pre:!0},[e._v(\"IBCPacketTx\")]),e._v(\", a qual\\npermite uma blockchain provar para qualquer espectador que o pacote recebido foi realmente\\npublicado pelo remetente, via Merkle-proof para um hash-de-bloco\\nrecente.\")]),o(\"p\",[e._v(\"Ao misturar o mecanismo ICB em duas transações separadas, nós permitimos\\nque o mecanismo de mercado de taxa nativa da blockchain recebedora determine quais pacotes\\nirão se comprometer (isto é, ser reconhecido), permitindo simultaneamente que uma\\nblockchain envie de quantos pacotes de saída forem permitidos.\")]),o(\"p\",[o(\"img\",{attrs:{src:\"https://raw.githubusercontent.com/gnuclear/atom-whitepaper/master/msc/ibc_without_ack.png\",alt:\"Figura da Zona1, Zona2, e Hub IBC semreconhecimento\"}})]),o(\"p\",[e._v(\"No exemplo acima, para atualizar o hash de blocos da\\n“Zona1” no “Hub” (ou do “Hub” para a “Zona2”), uma transação \"),o(\"code\",{pre:!0},[e._v(\"IBCBlockCommitTx\")]),e._v(\"\\nprecisa ser feita no “Hub” com o hash de bloco da “Zona1” (ou na\\n“Zona2” com o hash de bloco do “Hub”).\")]),o(\"p\",[o(\"em\",[e._v(\"Veja \"),o(\"a\",{attrs:{href:\"#ibcblockcommittx\"}},[e._v(\"IBCBlockCommitTx\")]),e._v(\" e \"),o(\"a\",{attrs:{href:\"#ibcpacketcommit\"}},[e._v(\"IBCPacketTx\")]),e._v(\"\\npara mais informações sobre os 2 tipos de transação IBC.\")])]),o(\"h2\",{attrs:{id:\"casos-de-uso\"}},[e._v(\"Casos de Uso\")]),o(\"h3\",{attrs:{id:\"exchange-distribuidas\"}},[e._v(\"Exchange Distribuídas\")]),o(\"p\",[e._v(\"Da mesma forma que Bitcoin é mais seguro por ter uma distribuíção,\\ne replicação em massa, podemos tornar as exchanges menos vulneráveis a\\nHacks internos executando-a no blockchain. Chamamos isso de exchange\\ndistribuída.\")]),o(\"p\",[e._v(\"O que a comunidade de criptomoedas chama hoje de intercâmbio descentralizado\\nbaseado em algo chamado transações “atomic cross-chain” (AXC). Com uma transação\\nAXC, dois usuários em duas diferentes cadeias podem fazer duas transações\\nde transferências que serão feitas juntas nas duas ledgers, ou nenhuma (isto é,\\nAtomicamente). Por exemplo, dois usuários podem trocar bitcoins por ether (ou qualquer dois\\nTokens em dois ledgers diferentes) usando transações AXC, mesmo que o Bitcoin\\ne o Ethereum não estão conectados entre si. O benefício de executar um\\ntroca em transações AXC é que nenhum dos usuários precisam confiar um no outro ou\\nno serviço de correspondência comercial. A desvantagem é que ambas as partes precisam estar\\non-line para o negócio ocorrer.\")]),o(\"p\",[e._v(\"Outro tipo de intercâmbio descentralizado é um sistema de\\nexchange que funciona em seu próprio blockchain. Os usuários deste tipo de exchange podem\\nenviar uma ordem de limite e desligar o computador, e o negócio pode ser executado\\nsem que o usuário esteja online. O blockchain combina e completa o negócio\\nem nome do negociante.\")]),o(\"p\",[e._v(\"Uma exchange centralizada pode criar um vasto livro de ordens de ordens e\\natrair mais comerciantes. A liquidez gera mais liquidez no mundo cambial,\\ne assim há um forte efeito na rede (ou pelo menos efeito de vencedor-leva-mais)\\nno negócio de câmbio. A atual líder para troca de criptomoedas\\nhoje é a Poloniex com um volume de 24 milhões de dólares por dia, e em segundo lugar a\\nBitfinex com um volume de US$5 milhões por dia. Dados esses fortes efeitos na rede,\\né improvável que as exchanges descentralizadas baseadas no AXC ganhem volume\\ncentrais. Para uma exchange descentralizada competir com um\\nexchange centralizada, seria necessário dar suporte aos livros de\\nordens. Somente uma exchange distribuída em uma blockchain pode fornecer isso.\")]),o(\"p\",[e._v(\"Tendermint fornece benefícios adicionais para realizar uma transação mais rápida. Com a\\nfinalidade de dar prioridade a rapidez sem sacrificar a consistência, as zonas no Cosmos podem\\nfinalizar transações rápidas - tanto para transações de ordem de\\ntransferências de tokens quanto para outras zonas IBC.\")]),o(\"p\",[e._v(\"Dado o estado das exchanges de criptomoedas hoje em dia, uma grande\\nexchange distribuída da Cosmos (aka o Cosmos DEX). A transação e\\na capacidade de processamento, bem como a latência de processos, podem ser\\ncentrais. Os comerciantes podem enviar ordens de limite que podem ser executadas\\nsem que ambas as partes tenham que estar online. E com Tendermint, o Cosmos Hub,\\ne o IBC, os comerciantes podem mover fundos dentro e fora da exchange e para outras\\nzonas com rapidez.\")]),o(\"h3\",{attrs:{id:\"pegging-para-outras-criptomoedas\"}},[e._v(\"Pegging para Outras Criptomoedas\")]),o(\"p\",[e._v(\"Uma zona privilegiada pode agir como token simbolico de uma\\ncriptomoeda. A peg é semelhante à relação entre uma\\nzona e o Cosmos Hub; Ambos devem manter-se atualizados com os\\noutros, afim de verificar provas de que os tokens passaram de um para o outro. A\\nPeg-zone na rede Cosmos mantém-se com o Hub, bem como o\\noutra cryptomoeda. A indireção através da peg-zone permite a lógica de\\nque o Hub permaceça simples e imutável para outras estratégias de consenso blockchain\\ncomo a mineração de prova-de-trabalho do Bitcoin.\")]),o(\"p\",[e._v(\"Por exemplo, uma zona Cosmos com um conjunto validador específico, possivelmente o mesmo que\\no Hub, poderia atuar como um ether-peg, onde a aplicação TMSP sobre\\na zona (“peg-zone”) tem mecanismos para trocar mensagens IBC com um\\nPeg-contract na blockchain (a “origem”). Este contrato\\npermite que os titulares de ether enviem ether para a zona de peg, enviando-o para\\nPeg-contract na Ethereum. Uma vez que o ether é recebido pelo peg-contract, o ether\\nnão pode ser retirado a menos que um pacote IBC apropriado seja recebido pelo\\nPeg-contract da peg-zone. Quando uma zona recebe um pacote IBC provando\\nque o ether foi recebido no peg-contract para uma determinada conta Ethereum,\\na conta correspondente é criada na peg-zone com esse saldo. O ether na\\npeg-zone (“pegged-ether”) pode então ser transferido para o Hub,\\ne mais tarde ser destruído com uma transação que envia para um determinado\\nendereço de retirada no Ethereum. Um pacote IBC provando que a transação\\nna Peg-Zone podem ser lançados no peg-contract Ethereum para permitir que o\\nEther seja retirado.\")]),o(\"p\",[e._v(\"Naturalmente, o risco do contrato do pegging e um conjunto de validadores desonestos. -bizantino.\\nO poder de voto bizantino poderia causar um fork, retirando o ether do\\npeg-contract mantendo o pegged-ether na peg-zone. Na pior das hipóteses,\\n+⅔ do poder de voto bizantino pode roubar o ether daqueles que o enviaram para o\\npeg-contract, desviando-se da pegging e da peg-zone de origem.\")]),o(\"p\",[e._v(\"É possível abordar essas questões projetando o peg para ser totalmente\\nresponsável. Por exemplo, todos os pacotes IBC, a partir do hub de\\norigem, poderão exigir um reconhecimento pela zona de fixação de tal forma que\\nas transições de estados da peg-zone podem ser desafiadas de forma eficiente e verificadas pelo\\nhub ou pelo peg-contract de origem. O Hub e a origem devem\\npermitir que os validadores da zona de fixação apresentem garantias e as transferências\\ncontratuais devem ser atrasadas (e um prazo de vinculação de colateral suficientemente\\nlongo) para permitir que quaisquer desafios sejam feitos por auditores independentes. Nós saímos\\nda concepção, da especificação e implementação deste sistema aberto como uma\\nfutura proposta de melhoria da Cosmos, a ser aprovada pela governança do sistema do Cosmos\\nHub.\")]),o(\"p\",[e._v(\"Embora a atmosfera sociopolítica ainda não esteja bastante desenvolvida, podemos\\naumentar o mecanismo para permitir que as zonas se liguem as moedas FIAT de um\\nestado-nação, formando um validador responsável estabelecido a partir de uma combinação da\\nmoeda da nação, mais particularmente, pelos seus bancos. Claro,\\nprecauções adicionais devem ser tomadas para aceitar apenas moedas apoiadas por\\nsistemas que possam reforçar a capacidade de auditoria das atividades dos bancos\\ne de notário grupos de grandes instituições de confiança.\")]),o(\"p\",[e._v(\"Um resultado dessa integração poderia ser, por exemplo, permitir que\\numa conta em um banco na zona possa mover dólares de sua conta bancária\\npara outras contas na zona, ou para o hub, ou inteiramente para outra zona.\\nNesse sentido, o Cosmos Hub pode atuar como um canal sem\\nmoedas e criptomoedas, removendo as barreiras que limitariam\\nsua interoperabilidade com o mundo dos intercâmbios.\")]),o(\"h3\",{attrs:{id:\"ethereum-scaling\"}},[e._v(\"Ethereum Scaling\")]),o(\"p\",[e._v(\"Resolver o problema de escalonamento é um problema aberto para a Ethereum. Atualmente,\\nos nós Ethereum processam cada transação única e também armazenam todos os estados.\\n\"),o(\"a\",{attrs:{href:\"https://docs.google.com/presentation/d/1CjD0W4l4-CwHKUvfF5Vlps76fKLEC6pIwu1a_kC_YRQ/mobilepresent?slide=id.gd284b9333_0_28\"}},[e._v(\"link\")]),e._v(\".\")]),o(\"p\",[e._v(\"Desde que a Tendermint pode realizar os blocos muito mais rápido do que a prova-de-trabalho da Ethereum,\\nas zonas EVM alimentadas e operando pelo consenso da Tendermint\\nfornecem maior desempenho para blocos da blockchain Ethereum. Além disso, embora o\\nCosmos Hub e o mecanismo de pacotes IBC não permitam a execução da lógica de contratos\\narbitrários, podem ser usados para coordenar os movimentos Ethereum e a execução de\\ncontratos simbólicos em diferentes zonas, fornecendo uma base para\\no token ethereum através de sharding.\")]),o(\"h3\",{attrs:{id:\"integracao-de-multi-aplicacao\"}},[e._v(\"Integração de Multi-Aplicação\")]),o(\"p\",[e._v(\"As zonas Cosmos executam lógica de aplicação arbitrária, que é definida no início da\\nvida da zona e podem potencialmente ser atualizados ao longo do tempo pela governança. Essa flexibilidade\\npermite que as zonas Cosmos ajam como pegs para outras criptomoedas como Ethereum ou\\nBitcoin, e também permite derivados desses blockchains, que utilizam a\\nmesma base de código, mas com um conjunto de validador diferente e distribuição inicial. Isto\\npermite que muitos tipos de criptomoedas existentes, como as Ethereum,\\nZerocash, Bitcoin, CryptoNote e assim por diante, possam ser usados com o Tendermint BFT,\\nque é um motor de consenso de maior desempenho, em uma rede comum, abrindo\\noportunidade de interoperabilidade entre as plataformas. Além disso, como\\nmulti-asset blockchain, uma única transação pode conter vários\\nonde cada entrada pode ser qualquer tipo de token, permitindo a Cosmos\\nser uma plataforma para a exchange descentralizada, mesmo que as ordens sejam\\npara outras plataformas. Alternativamente, uma zona pode servir como um\\nfault-tolerant (com livros de ordens), o que pode ser uma melhoria\\nnas exchanges centralizadas de criptomoeda que tendem a ser invadidas com\\no tempo.\")]),o(\"p\",[e._v(\"As zonas também podem servir como versões bloqueadas de empresas e\\nsistemas, onde partes de um serviço particular da organização ou grupo de organizações\\nque são tradicionalmente executadas como um aplicativo TMSP\\nem uma certa zona, o que lhe permite receber a segurança e a interoperabilidade da\\nrede pública Cosmos sem sacrificar o controle sobre o serviço subjacente.\\nAssim, a Cosmos pode oferecer o melhor da tecnologia blockchain para ambos os mundos e\\npara as organizações, que se recusam a deixar completamente o controle\\npara um distribuidor terceirizado.\")]),o(\"h3\",{attrs:{id:\"reducao-de-particao-de-rede\"}},[e._v(\"Redução de partição de rede\")]),o(\"p\",[e._v(\"Alguns afirmam que um grande problema da coerência-favorecendo algoritmos de consenso\\ncomo o Tendermint é que qualquer partição de rede que faz com que não haja uma única\\npartição com +⅔ de poder de votação (por exemplo, ⅓+ ficando offline) irá parar o consenso\\ncompletamente. A arquitetura Cosmos pode ajudar a mitigar esse problema usando umas\\nzonas regionais autônomas, onde o poder de voto para cada zona é\\ndistribuído com base em uma região geográfica comum. Por exemplo, um\\nparâmetro pode ser para cidades individuais, ou regiões, para operar suas próprias zonas\\nde partilha com um centro em comum (por exemplo, o Cosmos Hub), permitindo que a\\no hub possa parar devido a uma paralisação de rede temporária.\\nObserve que isso permite uma geologia real, política e rede-topológica,\\nque são recursos a serem considerados no projeto de sistemas robustos federados de fault-tolerant.\")]),o(\"h3\",{attrs:{id:\"sistema-de-resolucao-de-nomes-federados\"}},[e._v(\"Sistema de Resolução de Nomes Federados\")]),o(\"p\",[e._v(\"NameCoin foi uma das primeiras blockchains a tentar resolver o\\nproblema de resolução de nomes através de uma adaptação da blockchain do Bitcoin. Infelizmente\\ntêm ocorrido várias questões com esta abordagem.\")]),o(\"p\",[e._v(\"Com a Namecoin, podemos verificar que, por exemplo, o nome \"),o(\"em\",[e._v(\"@satoshi\")]),e._v(\" foi registrado como\\nparticular, em algum momento do passado, mas não saberíamos se\\na chave pública tinha sido atualizada recentemente, a menos que baixassemos todos os blocos\\ndesde a última atualização desse nome. Isto é devido as limitações do modelo de\\nMerkle-ization de UTXO do Bitcoin, onde somente as transações (não\\nmutáveis) são Merkle-ized no hash do bloco. Isso nos permite\\nprovar a existência, mas não a não-existência de atualizações posteriores a um nome. Assim, nós\\nnão podemos saber com certeza o valor mais recente de um nome sem confiar em um\\nnó, ou recorrer a gastos significativos na largura de banda, baixando o\\nBlockchain.\")]),o(\"p\",[e._v(\"Mesmo se uma árvore de pesquisa Merkle-ized for implementada na NameCoin, sua dependência\\nsobre a prova-de-trabalho torna a verificação do cliente light problemática. Os clientes light devem\\nbaixar uma cópia completa dos cabeçalhos para todos os blocos em toda a blockchain\\n(ou pelo menos todos os cabeçalhos desde a última atualização de um nome). Isso significa que\\nos requisitos de largura de banda crescem linearmente com a o passar do tempo \"),o(\"a\",{attrs:{href:\"https://en.bitcoin.it/wiki/Thin_Client_Security\"}},[e._v(\"[21]\")]),e._v(\".\\nAlém disso, as mudanças de nome em um bloco de prova-de-trabalho requerem\\na confirmação do trabalho, o que pode levar até uma hora\\nno Bitcoin.\")]),o(\"p\",[e._v(\"Com Tendermint, tudo o que precisamos é o hash de bloco mais recente assinado por um quorum de\\nvalidadores (por poder de voto), e uma prova Merkle para o valor atual associado\\ncom o nome. Isto torna possível ter uma solução sucinta, rápida e segura\\npara a verificação de valores de nome no cliente light.\")]),o(\"p\",[e._v(\"Na Cosmos, podemos aplicar este conceito e estendê-lo ainda mais. Cada\\nzona de registro de nomes na Cosmos pode ter um domínio de nível superior (TLD)\\nassociado, como o “.com” ou “.org”, e cada zona de registro de nome pode ter\\nsuas próprias regras de governança e registro.\")]),o(\"h2\",{attrs:{id:\"emissao-e-incentivos\"}},[e._v(\"Emissão e Incentivos\")]),o(\"h3\",{attrs:{id:\"o-token-atom\"}},[e._v(\"O Token Atom\")]),o(\"p\",[e._v(\"Enquanto o Cosmos Hub é um ledger de distribuíção multi-asset, há um token nativo\\nespecial chamado \"),o(\"em\",[e._v(\"atom\")]),e._v(\". Os atoms são o únicos símbolos do Cosmos\\nHub. Os atoms são uma licença para o titular votar, validar ou delegar\\nvalidadores. Como o ether da Ethereum, os atoms também podem ser usados para\\nreduzir o spam. Atoms inflacionários adicionais e as taxas do bloco de transação\\nsão recompensadas pelos validadores e delegados que\\no validarão.\")]),o(\"p\",[e._v(\"A transação \"),o(\"code\",{pre:!0},[e._v(\"BurnAtomTx\")]),e._v(\" pode ser usada para cobrir proporcionalmente a quantidade\\nde tokens reservados para a pool.\")]),o(\"h4\",{attrs:{id:\"levantamento-de-fundos\"}},[e._v(\"Levantamento de Fundos\")]),o(\"p\",[e._v(\"A distribuição inicial dos tokens atom e validadores na Genesis vão para os\\ndoadores do Levantamento de Fundos da Cosmos (75%), doadores pesados (5%), Fundação da Rede\\nCosmos (10%), e a ALL IN BITS, Inc (10%). A partir da Genesis em diante, 1/3 da\\nquantidade total de atoms será recompensada aos validadores e delegados durante\\ntodo o ano.\")]),o(\"p\",[e._v(\"Veja o \"),o(\"a\",{attrs:{href:\"https://github.com/cosmos/cosmos/blob/master/PLAN.md\"}},[e._v(\"Plano Cosmos\")]),e._v(\"\\npara detalhes adicionais.\")]),o(\"h4\",{attrs:{id:\"investindo\"}},[e._v(\"Investindo\")]),o(\"p\",[e._v(\"Para evitar que o levantamento de fundos atraia especuladores de curto prazo apenas interessados\\nem esquemas de pump and dump, os atoms da Genesis não serão transferíveis até\\neles tenham investido. Cada conta irá adquirir atoms durante um período de 2 anos com\\ntaxa constante a cada hora, determinada pelo número total de atoms da Genesis/(2*\\n365 * 24) horas. Os atoms ganhos pela recompensa do bloco são pré-investidos,\\ne podem ser transferidos imediatamente, de modo que os validadores e os delegados ligados possam ganhar\\nmais da metade de seus atoms da Genesis após o primeiro ano.\")]),o(\"h3\",{attrs:{id:\"limitacoes-do-numero-de-validadores\"}},[e._v(\"Limitações do Número de Validadores\")]),o(\"p\",[e._v(\"Diferentemente do Bitcoin ou de outros blockchains de prova-de-trabalho, o blockchain Tendermint será\\nmais lento com mais validadores devido ao aumento da complexidade da comunicação.\\nFelizmente, podemos oferecer suporte a validadores suficientes para a\\ndistribuição na Blockchain com tempos de confirmação de transação muito mais rápidos e, através de\\nlargura de banda, armazenamento e aumento da capacidade de computação paralela, seremos capazes de\\nter mais validadores no futuro.\")]),o(\"p\",[e._v(\"No dia da Genesis, o número máximo de validadores será definido como 100,\\no número aumentará a uma taxa de 13% durante 10 anos até atingir a marca de 300\\nValidadores.\")]),o(\"pre\",{pre:!0},[o(\"code\",{pre:!0,attrs:{\"v-pre\":\"\"}},[e._v(\"Ano 0: 100\\nAno 1: 113\\nAno 2: 127\\nAno 3: 144\\nAno 4: 163\\nAno 5: 184\\nAno 6: 208\\nAno 7: 235\\nAno 8: 265\\nAno 9: 300\\nAno 10: 300\\n...\\n\")])]),o(\"h3\",{attrs:{id:\"tornando-se-um-validador-depois-do-dia-da-genesis\"}},[e._v(\"Tornando-se um Validador depois do dia da Genesis\")]),o(\"p\",[e._v(\"Os titulares de atoms que ainda não são capazes de se tornarem validadores assinados e\\nsubmeter uma transação \"),o(\"code\",{pre:!0},[e._v(\"BondTx\")]),e._v(\". A quantidade de atoms fornecida como garantia\\ndeve ser diferente de zero. Qualquer pessoa pode se tornar um validador a qualquer momento, exceto quando o\\ntamanho do conjunto de validadores atual é maior que o número máximo de\\nvalidadores permitidos. Nesse caso, a transação só é válida se o montante\\nde atoms é maior do que a quantidade de atoms efetivos mantidos pelo menor\\nvalidador, onde atoms eficazes incluem atoms delegados. Quando um novo validador\\nsubstitui um validador existente de tal forma, o validador existente torna-se\\ninativo e todos os atoms e atoms delegados entram no estado de unbonding.\")]),o(\"h3\",{attrs:{id:\"penalidades-para-validadores\"}},[e._v(\"Penalidades para Validadores\")]),o(\"p\",[e._v(\"Deve haver alguma penalidade imposta aos validadores por qualquer desvio intencional\\nou não intencional do protocolo sancionado. Algumas evidências são imediatamente admissíveis,\\ncomo um double-sign na mesma altura e volta, ou uma violação de “prevote-the-lock”\\n(uma regra do protocolo de consenso Tendermint). Tais evidências resultarão em que o\\nvalidador perca sua boa reputação e seus átomos ligados, bem como sua proporção de tokens\\nna pool reserva - coletivamente chamados de “stake” - serão cortados.\")]),o(\"p\",[e._v(\"Às vezes, os validadores não estarão disponíveis, devido a interrupções na rede regional,\\nfalha de energia ou outros motivos. Se, em qualquer ponto nos blocos \"),o(\"code\",{pre:!0},[e._v(\"ValidatorTimeoutWindow\")]),e._v(\"\\nanteriores, o voto de validação de um validador não estiver incluído na cadeia de\\nblocos mais do que \"),o(\"code\",{pre:!0},[e._v(\"ValidatorTimeoutMaxAbsent\")]),e._v(\" vezes, esse validador ficará inativo e\\nperderá \"),o(\"code\",{pre:!0},[e._v(\"ValidatorTimeoutPenalty\")]),e._v(\" (PADRÃO DE 1%) de sua participação.\")]),o(\"p\",[e._v(\"Alguns comportamentos “maliciosos” não produzem provas obviamente discerníveis sobre\\na blockchain. Nesses casos, os validadores podem coordenar fora da banda para forçar\\no tempo limite desses validadores maliciosos, se houver um consenso majoritário.\")]),o(\"p\",[e._v(\"Em situações em que o Cosmos Hub parar devido a uma coalizão de ⅓+ de poder de voto\\noffline, ou em situações onde uma coalizão de ⅓+ de poder de voto censurar evidências de\\ncomportamento malicioso entrando na blockchain, o hub deve recuperar com um hard-fork\\nde proposta reorganizacional. (Link to “Forks and Censorship Attacks”).\")]),o(\"h3\",{attrs:{id:\"taxas-de-transacao\"}},[e._v(\"Taxas de Transação\")]),o(\"p\",[e._v(\"Os validadores do Cosmos Hub podem aceitar qualquer tipo de token ou combinação\\nde tipos como taxas para processar uma transação. Cada validador pode fixar subjetivamente a\\ntaxa de câmbio que quiser e escolher as transações que desejar, desde que o \"),o(\"code\",{pre:!0},[e._v(\"BlockGasLimit\")]),e._v(\"\\nnão seja excedido. As taxas cobradas, menos quaisquer impostos especificados abaixo,\\nsão redistribuídas aos stakeholders ligados em proporção aos seus átomos ligados, cada \"),o(\"code\",{pre:!0},[e._v(\"ValidatorPayoutPeriod\")]),e._v(\" (PADRÃO DE 1 hora).\")]),o(\"p\",[e._v(\"Das taxas de transação cobradas, \"),o(\"code\",{pre:!0},[e._v(\"ReserveTax\")]),e._v(\" (PADRÃO DE 2%) irá para a pool reserva\\npara aumentar a pool reserva e aumentar a segurança e o valor da rede Cosmos. Além disso, um\\n\"),o(\"code\",{pre:!0},[e._v(\"CommonsTax\")]),e._v(\" (PADRÃO DE 3%) irá para o financiamento de bens comuns. Estes fundos vão para o\\n\"),o(\"code\",{pre:!0},[e._v(\"CustodianAddress\")]),e._v(\" para ser distribuído de acordo com as decisões tomadas pelo sistema de governança.\")]),o(\"p\",[e._v(\"Os titulares de átomos que delegam o seu poder de voto a outros validadores pagam uma comissão\\nao validador delegado. A comissão pode ser definida por cada validador.\")]),o(\"h3\",{attrs:{id:\"incentivando-hackers\"}},[e._v(\"Incentivando Hackers\")]),o(\"p\",[e._v(\"A segurança do Cosmos Hub é uma função da segurança dos validadores subjacentes e da escolha\\nda delegação pelos delegados. A fim de incentivar a descoberta e notificação precoce de vulnerabilidades\\nencontradas, o Cosmos Hub incentiva os hackers a publicar exploits bem sucedidos através de uma transação\\n\"),o(\"code\",{pre:!0},[e._v(\"ReportHackTx\")]),e._v(' que diz,\" Este validador foi hackeado. Por favor, envie recompensa para este endereço\".\\nDepois de tal exploração, o validador e os delegados ficarão inativos, '),o(\"code\",{pre:!0},[e._v(\"HackPunishmentRatio\")]),e._v(\" (PADRÃO DE 5%)\\ndos átomos de todos serão cortados, e\"),o(\"code\",{pre:!0},[e._v(\"HackRewardRatio\")]),e._v(\" (PADRÃO DE 5%) dos átomos de todos\\nserão recompensado com o endereço de recompensa do hacker. O validador deve recuperar os átomos\\nrestantes usando sua chave de backup.\")]),o(\"p\",[e._v(\"Para evitar que esse recurso seja abusado para transferir átomos não invadidos,\\na porção de átomos adquirido vs relativo de validadores e delegados antes e depois do \"),o(\"code\",{pre:!0},[e._v(\"ReportHackTx\")]),e._v(\"\\npermanecerá o mesmo, e o bounty do hacker irá incluir alguns átomos relativos, se houver.\")]),o(\"h3\",{attrs:{id:\"especificacao-de-governanca\"}},[e._v(\"Específicação de Governança\")]),o(\"p\",[e._v(\"O Cosmos Hub é operado por uma organização distribuída que requer um mecanismo de\\ngovernança bem definido para coordenar várias mudanças na blockchain, como parâmetros\\nvariáveis do sistema, bem como atualizações de software e emendas constitucionais.\")]),o(\"p\",[e._v(\"Todos os validadores são responsáveis por votar em todas as propostas.\\nNão votar em uma proposta em tempo hábil resultará na desativação automática do\\nvalidador por um período de tempo denominado \"),o(\"code\",{pre:!0},[e._v(\"AbsenteeismPenaltyPeriod\")]),e._v(\" (PADRÃO DE 1 semana).\")]),o(\"p\",[e._v(\"Os delegados herdam automaticamente o voto do validador delegado.\\nEste voto pode ser anulado manualmente. Os átomos não ligados obtêm nenhum voto.\")]),o(\"p\",[e._v(\"Cada proposta requer um depósito de tokens de \"),o(\"code\",{pre:!0},[e._v(\"MinimumProposalDeposit\")]),e._v(\",\\nque pode ser uma combinação de um ou mais tokens incluindo átomos.\\nPara cada proposta, os eleitores podem votar para receber o depósito.\\nSe mais da metade dos eleitores optarem por receber o depósito (por exemplo, porque a proposta era spam),\\no depósito vai para a pool reserva, exceto os átomos que são queimados.\")]),o(\"p\",[e._v(\"Para cada proposta, os eleitores podem votar nas seguintes opições:\")]),o(\"ul\",[o(\"li\",[e._v(\"Sim\")]),o(\"li\",[e._v(\"Com Certeza\")]),o(\"li\",[e._v(\"Não\")]),o(\"li\",[e._v(\"Nunca\")]),o(\"li\",[e._v(\"Abstenção\")])]),o(\"p\",[e._v(\"É necessário uma maioria estrita de votos Yea(Sim) ou YeaWithForce(Com certeza)\\n(ou votos Nay(Não) ou NayWithForce(Nunca)) para que a proposta seja decidida como aceita\\n(ou decidida como falha), mas 1/3+ pode vetar a decisão da maioria votando “Com certeza”.\\nQuando uma maioria estrita é vetada, todos são punidos com a perda de \"),o(\"code\",{pre:!0},[e._v(\"VetoPenaltyFeeBlocks\")]),e._v(\"\\n(PADRÃO DE no valor de um dia de blocos) de taxas (exceto os impostos que não serão afetados),\\ne a parte que vetou a decisão da maioria será adicionalmente punida com a perda de \"),o(\"code\",{pre:!0},[e._v(\"VetoPenaltyAtoms\")]),e._v(\"\\n(PADRÃO DE 0.1%) de seus átomos.\")]),o(\"h3\",{attrs:{id:\"parametro-de-mudanca-de-proposta\"}},[e._v(\"Parâmetro de Mudança de Proposta\")]),o(\"p\",[e._v(\"Qualquer um dos parâmetros aqui definidos pode ser alterado com a aceitação\\nde um \"),o(\"code\",{pre:!0},[e._v(\"ParameterChangeProposal\")]),e._v(\".\")]),o(\"h3\",{attrs:{id:\"texto-da-proposta\"}},[e._v(\"Texto da Proposta\")]),o(\"p\",[e._v(\"Todas as outras propostas, como uma proposta de atualização do protocolo, serão coordenadas através do genérico \"),o(\"code\",{pre:!0},[e._v(\"TextProposal\")]),e._v(\".\")]),o(\"h2\",{attrs:{id:\"roteiro\"}},[e._v(\"Roteiro\")]),o(\"p\",[e._v(\"Veja \"),o(\"a\",{attrs:{href:\"https://github.com/cosmos/cosmos/blob/master/PLAN.md\"}},[e._v(\"o Plano Cosmos\")]),e._v(\".\")]),o(\"h2\",{attrs:{id:\"trabalho-relacionado\"}},[e._v(\"Trabalho Relacionado\")]),o(\"p\",[e._v(\"Houve muitas inovações no consenso da blockchain e na escalabilidade nos últimos dois anos.\\nEsta seção fornece um breve levantamento de um seleto número das mais importantes.\")]),o(\"h3\",{attrs:{id:\"sistemas-de-consenso\"}},[e._v(\"Sistemas de Consenso\")]),o(\"h4\",{attrs:{id:\"classic-byzantine-fault-tolerance\"}},[e._v(\"Classic Byzantine Fault Tolerance\")]),o(\"p\",[e._v(\"Consenso na presença de participantes maliciosos é um problema que remonta ao início dos anos 1980,\\nquando Leslie Lamport cunhou a frase “falha bizantina” para se referir ao comportamento do processo\\narbitrário que se desvia do comportamento pretendido, que contraste com uma “falha acidental”,\\nem que um processo simplesmente falha. Soluções iniciais foram descobertas para redes síncronas onde\\nhá um limite superior na latência da mensagem, embora o uso prático fosse limitado a ambientes altamente controlados,\\ncomo controladores de avião e datacenters sincronizados via relógios atômicos.\\nNão foi até o final dos anos 90 que a Practical Byzantine Fault Tolerance (PBFT) foi introduzida como\\num eficiente algoritmo de consenso parcialmente síncrono capaz de tolerar até ⅓ de processos\\ncomportando-se arbitrariamente. PBFT tornou-se o algoritmo padrão, gerando muitas variações,\\nincluindo mais recentemente uma criada pela IBM como parte de sua contribuição para a Hyperledger.\")]),o(\"p\",[e._v(\"O principal benefício do consenso Tendermint sobre PBFT é que o Tendermint tem uma estrutura\\nsubjacente melhorada e simplificada, um dos quais é um resultado de adotar o paradigma blockchain.\\nBlocos Tendermint devem confirmar em ordem, o que evita a complexidade e sobrecarga de comunicação\\nassociada a alteração de visão do PBFT’s. No Cosmos e muitas outras criptomoedas,\\nnão há necessidade de permitir o bloco \"),o(\"em\",[e._v(\"N+i\")]),e._v(\" onde \"),o(\"em\",[e._v(\"i >= 1\")]),e._v(\" se confirmar,\\nquando o próprio bloco \"),o(\"em\",[e._v(\"N\")]),e._v(\" ainda não se confirmou. Se a largura de banda é a razão\\npela qual o bloco \"),o(\"em\",[e._v(\"N\")]),e._v(\" não se confirmou em uma zona do Cosmos, então isso não ajuda\\na usar os votos de compartilhamento de largura de banda para blocos \"),o(\"em\",[e._v(\"N+i\")]),e._v(\".\\nSe uma partição de rede ou nós offline for a razão pela qual o bloco \"),o(\"em\",[e._v(\"N\")]),e._v(\" não foi confirmado,\\n\"),o(\"em\",[e._v(\"N+i\")]),e._v(\" não se comprometerá de qualquer maneira.\")]),o(\"p\",[e._v(\"Além disso, o lote de transações em blocos permite que o Merkle-hashing regule o estado da aplicação,\\nao invés de resumos periódicos com esquemas de pontos de verificação como PBFT faz.\\nIsso permite confirmações de transações mais rápidas para clientes leves e uma comunicação mais rápida entre a blockchain.\")]),o(\"p\",[e._v(\"Tendermint BFT também inclui muitas otimizações e recursos que vão acima e além do que é especificado no PBFT.\\nPor exemplo, os blocos propostos pelos validadores são divididos em partes,\\nMerkleized e inútilizados de tal forma que melhora o desempenho da transmissão\\n(ver LibSwift \"),o(\"a\",{attrs:{href:\"http://www.ds.ewi.tudelft.nl/fileadmin/pds/papers/PerformanceAnalysisOfLibswift.pdf\"}},[e._v(\"[19]\")]),e._v(\" para inspiração). Além disso, Tendermint BFT não faz qualquer suposição sobre\\na conectividade ponto-a-ponto, e funciona durante o tempo que a rede P2P está fracamente conectada.\")]),o(\"h4\",{attrs:{id:\"participacao-delegada-do-bitshares\"}},[e._v(\"Participação delegada do BitShares\")]),o(\"p\",[e._v(\"Apesar de não serem os primeiros a implementar a prova-de-participação (Proof-of-Stake - PoS),\\no BitShares \"),o(\"a\",{attrs:{href:\"https://bitshares.org/technology/delegated-proof-of-stake-consensus/\"}},[e._v(\"[12]\")]),e._v(\" contribuiu consideravelmente para a pesquisa e adoção das blockchains que usam o PoS,\\nparticularmente aqueles conhecidos como PoS “delegados”. No BitShares, as partes interessadas elegem “testemunhas”,\\nresponsáveis por ordenar e confirmar transações e “delegados”, responsáveis pela coordenação\\nde atualizações de software e alterações de parâmetros. Embora o BitShares atinja alto desempenho\\n(100k tx/s, 1s de latência) em condições ideais, ele está sujeito a ataques de duplo gasto por testemunhas\\nmaliciosas que “forkem” a blockchain sem sofrer uma punição econômica explícita - ele sofre do problema\\n“nada a perder”. O BitShares tenta suavizar o problema permitindo que as transações se refiram a\\nblocos-hashes recentes. Além disso, as partes interessadas podem remover ou substituir\\ntestemunhas de má conduta diariamente, embora isso não faça nada para punir\\nexplicitamente os ataques bem sucedidos de duplo gasto.\")]),o(\"h4\",{attrs:{id:\"stellar\"}},[e._v(\"Stellar\")]),o(\"p\",[e._v(\"Baseando-se em uma abordagem pioneira da Ripple, a Stellar \"),o(\"a\",{attrs:{href:\"https://www.stellar.org/papers/stellar-consensus-protocol.pdf\"}},[e._v(\"[13]\")]),e._v(\" refinou um modelo do\\nFederated Byzantine Agreement em que os processos que participam do consenso não constituem\\num conjunto fixo e globalmente conhecido. Em vez disso, cada nó de processo codifica uma ou mais\\n“fatias de quórum”, cada uma constituindo um conjunto de processos confiáveis. Um “quórum” na\\nStellar é definido como um conjunto de nós que contêm pelo menos uma fatia de quórum para cada\\nnó no conjunto, de modo que o acordo possa ser alcançado.\")]),o(\"p\",[e._v(\"A segurança do mecanismo Stellar baseia-se no pressuposto de que a intersecção de \"),o(\"em\",[e._v(\"qualquer\")]),e._v(\" dois\\nquóruns é não-vazia, enquanto a disponibilidade de um nó requer pelo menos uma das suas fatias de\\nquórum para consistir inteiramente de nós corretos, criando um troca externa entre o uso de grandes\\nou pequenas fatias-quórum que podem ser difíceis de equilíbrar sem impor pressupostos significativos\\nsobre a confiança. Em última análise, os nós precisam, de alguma forma, escolher fatias de quórum adequadas\\npara que haja tolerância suficiente a falhas (ou qualquer “nó intacto” em geral, do qual muitos dos\\nresultados do trabalho dependem) e a única estratégia fornecida para garantir tal configuração é\\nhierárquica e similar ao Border Gateway Protocol (BGP), usado por ISPs de primeira linha na\\ninternet para estabelecer tabelas de roteamento globais e usado pelos navegadores para gerenciar\\ncertificados TLS; Ambos notórios por sua insegurança.\")]),o(\"p\",[e._v(\"A crítica sobre papel da Stellar nos sistemas PoS baseados em Tendermint é atenuada pela estratégia\\nde token descrita aqui, em que um novo tipo de token chamado \"),o(\"em\",[e._v(\"atom\")]),e._v(\" é emitido para representar\\nreivindicações para futuras porções de taxas e recompensas. A vantagem do PoS baseado em Tendermint,\\nportanto, é a sua relativa simplicidade, ao mesmo tempo que oferece garantias de segurança suficientes e prováveis.\")]),o(\"h4\",{attrs:{id:\"bitcoinng\"}},[e._v(\"BitcoinNG\")]),o(\"p\",[e._v(\"O BitcoinNG é uma proposta de melhoria do Bitcoin que permitiria formas de escalabilidade vertical,\\ncomo o aumento do tamanho do bloco, sem as conseqüências econômicas negativas normalmente associadas a tal mudança,\\ncomo o impacto desproporcionalmente grande sobre os pequenos mineradores. Esta melhoria é conseguida separando\\na eleição do líder da transmissão da transação: os líderes são eleitos pela primeira vez\\npor prova de trabalho(PoW) em “microblocos”, e então são capazes de transmitir transações a\\nserem confirmadas até que um novo microbloco seja encontrado. Isso reduz os requisitos\\nde largura de banda necessários para vencer a corrida PoW, permitindo que os pequenos\\nmineiros possam competir mais justamente, e permitindo que as transações sejam confirmadas\\ncom mais regularidade pelo último minerador para encontrar um micro-bloco.\")]),o(\"h4\",{attrs:{id:\"casper\"}},[e._v(\"Casper\")]),o(\"p\",[e._v(\"Casper \"),o(\"a\",{attrs:{href:\"https://blog.ethereum.org/2015/08/01/introducing-casper-friendly-ghost/\"}},[e._v(\"[16]\")]),e._v(\" é uma proposta de algoritmo de consenso PoS para o Ethereum.\\nSeu modo principal de operação é “consenso-por-aposta”. Ao permitir que os validadores apostem\\niterativamente em qual bloco eles acreditam que será confirmado na blockchain com base nas\\noutras apostas que eles têm visto até agora, a finalidade pode ser alcançada eventualmente.\\n\"),o(\"a\",{attrs:{href:\"https://blog.ethereum.org/2015/12/28/understanding-serenity-part-2-casper/\"}},[e._v(\"link\")]),e._v(\". Esta é uma área ativa\\nde pesquisa da equipe de Casper. O desafio está na construção de um mecanismo de apostas que pode ser\\ncomprovado como uma estratégia evolutivamente estável. O principal benefício da Casper em relação à\\nTendermint pode ser a oferta de “disponibilidade sobre a consistência” - consenso não requer\\num quórum +⅔ de poder de voto - talvez ao custo de velocidade de confirmação ou complexidade de implementação.\")]),o(\"h3\",{attrs:{id:\"escala-horizontal\"}},[e._v(\"Escala Horizontal\")]),o(\"h4\",{attrs:{id:\"protocolo-interledger\"}},[e._v(\"Protocolo Interledger\")]),o(\"p\",[e._v(\"O Protocolo Interledger \"),o(\"a\",{attrs:{href:\"https://interledger.org/rfcs/0001-interledger-architecture/\"}},[e._v(\"[14]\")]),e._v(\" não é estritamente uma solução de escalabilidade.\\nEle fornece uma interoperabilidade ad hoc entre diferentes sistemas de ledger através de uma rede\\nde relações bilaterais livremente acopladas. Tal como a Lightning Network, a finalidade do\\nILP é facilitar pagamentos, mas focaliza especificamente pagamentos em diferentes tipos de ledger,\\nestendendo o mecanismo de transações atômicas para incluir não apenas hash-locks, mas também um\\nquórum de notários (chamado de Atomic Transport Protocol). O último mecanismo para reforçar a\\natomicidade em transacções entre-ledger é semelhante ao mecanismo SPV do cliente leve do Tendermint,\\nentão uma ilustração da distinção entre ILP e Cosmos/IBC é garantida, e fornecida abaixo.\")]),o(\"ol\",[o(\"li\",[o(\"p\",[e._v(\"Os notários de um conector em ILP não suportam mudanças de consentimento, e não permitem uma\\npesagem flexível entre notários. Por outro lado, o IBC é projetado especificamente para blockchains,\\nonde os validadores podem ter diferentes pesos, e onde o consentimento pode mudar ao longo da cadeia de blocos.\")])]),o(\"li\",[o(\"p\",[e._v(\"Como na Lightning Network, o receptor do pagamento em ILP deve estar on-line para enviar\\numa confirmação de volta ao remetente. Em uma transferência de token sobre IBC, o conjunto\\nde validadores da blockchain do receptor é responsável por fornecer a confirmação, não o usuário receptor.\")])]),o(\"li\",[o(\"p\",[e._v(\"A diferença mais notável é que os conectores do ILP não são responsáveis ou mantêm o estado\\nautoritário sobre os pagamentos, enquanto que no Cosmos, os validadores de um hub são a autoridade\\ndo estado das transferências de tokens do IBC, bem como a autoridade da quantidade de tokens\\nmantidos por cada zona (mas não a quantidade de tokens mantidos por cada conta dentro de uma zona).\\nEsta é a inovação fundamental que permite a tranferência assimétrica segura de tokens de zona para\\nzona; O conector analógico do ILP no Cosmos é uma persistente e maximamente segura ledger de blockchain, o Cosmos Hub.\")])]),o(\"li\",[o(\"p\",[e._v(\"Os pagamentos entre contas no ILP precisam ser suportados por uma ordem de compra/venda, uma\\nvez que não há transferência assimétrica de moedas de um ledger para outro, apenas a transferência\\nde valor ou equivalentes de mercado.\")])])]),o(\"h4\",{attrs:{id:\"sidechains\"}},[e._v(\"Sidechains\")]),o(\"p\",[e._v(\"Sidechains \"),o(\"a\",{attrs:{href:\"https://blockstream.com/sidechains.pdf\"}},[e._v(\"[15]\")]),e._v(\" são um mecanismo proposto para dimensionar a rede Bitcoin através de\\nblockchains alternativas que são “atreladas” para a blockchain do Bitcoin. As Sidechains\\npermitem que bitcoins se movam efetivamente da blockchain do Bitcoin para a sidechain e retornarem,\\ne permitem a experimentação em novos recursos na sidechain. Como no Cosmos Hub, a sidechain e\\nBitcoin servem como clientes leves uns dos outros, usando provas SPV para determinar quando as moedas\\ndevem ser transferidas para a cadeia lateral e retornarem. Claro, como o Bitcoin usa PoW, sidechains\\ncentradas em torno do Bitcoin sofrem dos muitos problemas e riscos do PoW como um mecanismo de consenso.\\nAlém disso, esta é uma solução Bitcoin-maximalista que não suporta nativamente uma variedade de tokens e\\ntopologia de rede entre-zona como o Cosmos faz. Dito isto, o mecanismo de núcleo bidirecional atrelado é,\\nem princípio, o mesmo que o empregado pela rede Cosmos.\")]),o(\"h4\",{attrs:{id:\"esforcos-de-escalabilidade-do-ethereum\"}},[e._v(\"Esforços de Escalabilidade do Ethereum\")]),o(\"p\",[e._v(\"Ethereum está atualmente pesquisando uma série de estratégias diferentes para fragmentar o\\nestado da blockchain do Ethereum para atender às necessidades de escalabilidade.\\nEsses esforços têm como objetivo manter a camada de abstração oferecida pela atual\\nEthereum Virtual Machine através do espaço de estado compartilhado. Vários esforços de\\npesquisa estão em andamento neste momento. \"),o(\"a\",{attrs:{href:\"https://github.com/ethereum/EIPs/issues/53\"}},[e._v(\"[18]\")]),o(\"a\",{attrs:{href:\"http://vitalik.ca/files/mauve_paper.html\"}},[e._v(\"[22]\")])]),o(\"h5\",{attrs:{id:\"cosmos-vs-ethereum-20-mauve\"}},[e._v(\"Cosmos vs Ethereum 2.0 Mauve\")]),o(\"p\",[e._v(\"Cosmos e Ethereum 2.0 Mauve \"),o(\"a\",{attrs:{href:\"http://vitalik.ca/files/mauve_paper.html\"}},[e._v(\"[22]\")]),e._v(\" tem diferentes objetivos de projeto.\")]),o(\"ul\",[o(\"li\",[e._v(\"Cosmos é especificamente sobre tokens. Malva é sobre escalonamento de computação geral.\")]),o(\"li\",[e._v(\"O Cosmos não está ligado ao EVM, por isso mesmo VMs diferentes podem interoperar.\")]),o(\"li\",[e._v(\"Cosmos permite que o criador da zona determine quem valida a zona.\")]),o(\"li\",[e._v(\"Qualquer pessoa pode iniciar uma nova zona no Cosmos (a menos que a governança decida o contrário).\")]),o(\"li\",[e._v(\"O hub isola falhas de zonas de modo que tokens invariantes sejam preservados.\")])]),o(\"h3\",{attrs:{id:\"escala-geral\"}},[e._v(\"Escala Geral\")]),o(\"h4\",{attrs:{id:\"lightning-network\"}},[e._v(\"Lightning Network\")]),o(\"p\",[e._v(\"A Lightning Network é uma proposta de rede de transferência de token operando em uma camada acima\\nda blockchain do Bitcoin (e outras blockchains públicas), permitindo a melhoria de muitas ordens\\nde magnitude no processamento de transações movendo a maioria das transações fora da ledger de consenso\\npara o chamado “Canais de pagamento”. Isso é possível graças a scripts de criptomoedas em cadeia,\\nque permitem que as partes entrem em contratos estatais bilaterais onde o estado pode ser atualizado\\ncompartilhando assinaturas digitais, e os contratos podem ser fechados definitivamente publicando\\nevidências na blockchain, um mecanismo primeiramente popularizado por trocas atômicas de\\ncross-chains(cadeias cruzadas). Ao abrir canais de pagamento com muitas partes, os participantes\\nda Lightning Network podem se tornar pontos focais para encaminhar os pagamentos de outros,\\nlevando a uma rede de canais de pagamento totalmente conectada, ao custo do capital estar ligado aos canais de pagamento.\")]),o(\"p\",[e._v(\"Enquanto a Lightning Network também pode facilmente se estender através de várias blockchains independentes\\npara permitir a transferência de \"),o(\"em\",[e._v(\"value\")]),e._v(\" através de um mercado de câmbio, não pode ser usado para\\ntransferir assimetricamente \"),o(\"em\",[e._v(\"tokens\")]),e._v(\" de uma blockchain para outra. O principal benefício da rede Cosmos\\ndescrita aqui é permitir tais transferências diretas de tokens. Dito isto, esperamos que os canais de\\npagamento e a Lightning Network sejam amplamente adotados juntamente com nosso mecanismo de transferência\\nde token, por razões de economia de custos e privacidade.\")]),o(\"h4\",{attrs:{id:\"segregated-witness\"}},[e._v(\"Segregated Witness\")]),o(\"p\",[e._v(\"Segregated Witness é uma proposta de melhoria do Bitcoin\\n\"),o(\"a\",{attrs:{href:\"https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki\"}},[e._v(\"link\")]),e._v(\" que visa aumentar em 2X ou 3X a\\ntaxa de transferência por bloco, ao mesmo tempo que faz a sincronização de blocos ser mais rapida para\\nnovos nós. O brilho desta solução é de como ele funciona dentro das limitações do protocolo atual do Bitcoin\\ne permite uma atualização de soft-fork (ou seja, os clientes com versões mais antigas do software\\ncontinuarão funcionando após a atualização). O Tendermint, sendo um novo protocolo, não tem restrições\\nde projeto, por isso tem prioridades diferentes de escalonamento. Sobretudo, o Tendermint usa um algoritmo\\nde rodízio BFT baseado em assinaturas criptográficas em vez de mineração, o que trivialmente permite escalonamento\\nhorizontal através de múltiplas blockchains paralelas, enquanto que os regulares e mais frequentes blocos confirmam\\na escala vertical também.\")]),o(\"hr\"),o(\"h2\",{attrs:{id:\"apendice\"}},[e._v(\"Apêndice\")]),o(\"h3\",{attrs:{id:\"responsabilidade-de-fork\"}},[e._v(\"Responsabilidade de Fork\")]),o(\"p\",[e._v(\"Um protocolo de consenso bem projetado deve fornecer algumas garantias no caso da capacidade de\\ntolerância ser excedida e o consenso falhar. Isto é especialmente necessário nos sistemas econômicos,\\nonde o comportamento Bizantino pode ter recompensa financeira substancial. A\\ngarantia maisimportante é uma forma de \"),o(\"em\",[e._v(\"fork-accountability\")]),e._v(\", onde os processos que\\nfizeram com que o consenso falhasse (ou seja, clientes do protocolo\\nmotivados para aceitar valores diferentes - um fork) podem ser identificados e punidos de acordo com as\\nregras do protocolo , Ou, possivelmente, o sistema jurídico. Quando o sistema jurídico não é confiável\\nou é excessivamente caro para suplicar, os validadores podem ser forçados a fazerem depósitos de segurança\\npara participar, e esses depósitos podem ser revogados ou cortados, quando um comportamento malicioso é detectado \"),o(\"a\",{attrs:{href:\"https://blog.ethereum.org/2014/01/15/slasher-a-punitive-proof-of-stake-algorithm/\"}},[e._v(\"[10]\")]),e._v(\".\")]),o(\"p\",[e._v(\"Observe que isso é diferente do Bitcoin, onde o fork é uma ocorrência regular devido à assincronia de\\nrede e à natureza probabilística de encontrar colisões de hash parciais. Uma vez que, em muitos casos,\\num fork malicioso é indistinguível de um fork devido à assincronia, o Bitcoin não pode implementar de\\nforma confiável a responsabilidade de um fork, com exceção do custo implícito pago por mineradores que\\ntem a oportunidade de minerarem um bloco órfão.\")]),o(\"h3\",{attrs:{id:\"consenso-tendermint\"}},[e._v(\"Consenso Tendermint\")]),o(\"p\",[e._v(\"Chamamos as fases de votação de \"),o(\"em\",[e._v(\"PreVote\")]),e._v(\" e \"),o(\"em\",[e._v(\"PreCommit\")]),e._v(\". Um voto pode ser para um bloco em particular ou\\npara \"),o(\"em\",[e._v(\"Nil\")]),e._v(\". Chamamos uma coleção de +⅔ PreVotes para um único bloco na mesma rodada de um \"),o(\"em\",[e._v(\"Polka\")]),e._v(\", e uma\\ncoleção de +⅔ PreCommits para um único bloco na mesma rodada de um \"),o(\"em\",[e._v(\"Commit\")]),e._v(\". Se +⅔ PreCommit para Nil na\\nmesma rodada, eles passam para a próxima rodada.\")]),o(\"p\",[e._v(\"Observe que o determinismo estrito no protocolo incorre em uma suposição de sincronia fraca, pois os líderes\\ncom falhas devem ser detectados e ignorados. Assim, os validadores aguardam algum tempo, \"),o(\"em\",[e._v(\"TimeoutPropose\")]),e._v(\",\\nantes de Prevote Nil, e o valor de TimeoutPropose aumenta a cada rodada. A progressão através do\\nresto de uma rodada é totalmente assincrôna, onde o progresso é feito somente quando um validador\\nouve de +⅔ da rede. Na prática, seria necessário um adversário extremamente forte para impedir\\nindefinidamente a suposição de sincronia fraca (fazendo com que o consenso deixasse de confirmar um bloco),\\ne isso pode ser ainda mais difícil usando valores randomizados de TimeoutPropose em cada validador.\")]),o(\"p\",[e._v(\"Um conjunto adicional de restrições, ou Locking Rules(Regras de bloqueio), garante que a rede acabará\\npor confirmar apenas um bloco em cada altura. Qualquer tentativa maliciosa de confirmar de causar um\\nbloco a ser confirmado a uma determinada altura pode ser identificada. Primeiro, um PreCommit para um\\nbloco deve vir com justificação, na forma de um Polka para esse bloco. Se o validador já tiver PreCommit\\num bloco na rodada \"),o(\"em\",[e._v(\"R\"),o(\"em\",[e._v(\"1\")]),e._v(\", nós dizemos que eles estão _locked\")]),e._v(\" nesse bloco, e o Polka usado\\npara justificar o novo PreCommit na rodada \"),o(\"em\",[e._v(\"R_2\")]),e._v(\" deve vir de uma rodada \"),o(\"em\",[e._v(\"R_polka\")]),e._v(\"\\nonde \"),o(\"em\",[e._v(\"R_1 < R_polka <= R_2\")]),e._v(\". Em segundo lugar, os validadores devem propor e/ou pré-votar\\no bloco que eles estão travados. Juntas, essas condições garantem que um validador não PreCommit\\nsem evidência suficiente como justificativa, e que os validadores que já têm PreCommit não podem\\ncontribuir para a evidência de PreCommit algo mais. Isso garante a segurança e a vivacidade do algoritmo de consenso.\")]),o(\"p\",[e._v(\"Os detalhes completos do protocolo são descritos\\n\"),o(\"a\",{attrs:{href:\"https://github.com/tendermint/tendermint/wiki/Byzantine-Consensus-Algorithm\"}},[e._v(\"aqui\")]),e._v(\".\")]),o(\"h3\",{attrs:{id:\"clientes-leves-do-tendermint\"}},[e._v(\"Clientes Leves do Tendermint\")]),o(\"p\",[e._v(\"A necessidade de sincronizar todos os cabeçalhos de bloco é eliminada no Tendermint-PoS, como por exemplo\\na existência de uma cadeia alternativa (um fork) significando que ⅓+ do stake ligado pode ser reduzido.\\nNaturalmente, a partir que dividir requer que \"),o(\"em\",[e._v(\"someone\")]),e._v(\" compartilhe evidência de um fork, clientes leves\\ndevem armazenar qualquer bloco-hash comprometido que eles vêem. Além disso, os clientes leves podem\\nperiodicamente ficarem sincronizados com as alterações no conjunto de validadores, para evitar\\n\"),o(\"a\",{attrs:{href:\"#preventing-long-range-attacks\"}},[e._v(\"ataques de longo alcance\")]),e._v(\" (mas outras soluções são possíveis).\")]),o(\"p\",[e._v(\"Em espírito semelhante do Ethereum, o Tendermint permite que os aplicativos incorporem um hash de raiz\\nMerkle global em cada bloco, permitindo verifícações fáceis de consultas de estado para fins como saldos\\nde contas, o valor armazenado em um contrato ou a existência de saída de uma transação não gasta,\\ndependendo da natureza da aplicação.\")]),o(\"h3\",{attrs:{id:\"prevencao-de-ataques-de-longo-alcance\"}},[e._v(\"Prevenção de ataques de longo alcance\")]),o(\"p\",[e._v(\"Assumindo uma coleção suficientemente elástica de redes de difusão e um conjunto de validador\\nestático, qualquer fork na blockchain pode ser detectado e os depósitos dos validadores ofensivos cortados.\\nEsta inovação, sugerida pela primeira vez por Vitalik Buterin no início de 2014, resolve o problema do “nada a perder” de outras\\ncriptomoedas de PoW (ver \"),o(\"a\",{attrs:{href:\"#related-work\"}},[e._v(\"Trabalho Relacionado\")]),e._v(\"). No entanto, uma vez que os conjuntos de\\nvalidadores devem ser capazes de mudar, durante um longo período de tempo, os validadores originais podem\\ntornar-se não ligados e, portanto, seriam livres para criar uma nova cadeia a partir do bloco gênese,\\nnão incorrendo nenhum custo, visto que eles não tem depósitos trancados. Este ataque veio a ser conhecido\\ncomo Ataque de Longo Alcance (Long Range Attack - LRA), em contraste com um Ataque de Curto Alcance,\\nonde os validadores que estão atualmente ligados causam um fork e são, portanto, puníveis\\n(assumindo um algoritimo BFT de fork-responsável como o consenso Tendermint).\\nAtaques de longo alcance são muitas vezes pensados para serem um golpe crítico para o PoW.\")]),o(\"p\",[e._v(\"Felizmente, o LRA pode ser atenuado da seguinte forma. Em primeiro lugar, para que um validador se\\ndesatar (assim recuperando seu depósito colateral e não mais ganhando taxas para participar no consenso),\\no depósito deve ser tornado intransferível por um período de tempo conhecido como o “unbonding period”\\n(período de desatamento), que pode ser na ordem de semanas ou meses. Em segundo lugar, para um cliente\\nleve ser seguro, a primeira vez que ele se conecta à rede, ele deve verificar um hash de bloqueio recente\\ncontra uma fonte confiável ou, preferencialmente, várias fontes. Esta condição é por vezes referida como\\n“subjetividade fraca”. Finalmente, para permanecer seguro, ele deve sincronizar com o mais recente\\nvalidador definido, pelo menos, tão frequentemente quanto a duração do período de desatamento.\\nIsso garante que o cliente leve saiba sobre as alterações no conjunto de validação definido antes de\\num validador não ter mais o seu capital ligado e, portanto, não mais em jogo, o que permitiria enganar\\no cliente, executando um ataque de longo alcance, criando novos blocos re-começando em uma altura\\na qual foi ligado (assumindo que tem controle de muitas das primeiras chaves privadas).\")]),o(\"p\",[e._v(\"Note que superar o LRA desta forma requer uma revisão do modelo de segurança original do PoW. No PoW,\\npresume-se que um cliente leve pode sincronizar com a altura atual do bloco gênese confiável a qualquer\\nmomento simplesmente processando o PoW em cada cabeçalho de bloco. Para superar o LRA, entretanto,\\nexigimos que um cliente leve entre em linha com alguma regularidade para rastrear mudanças no conjunto\\nde validadores e que, na primeira vez em que eles fiquem on-line, eles devem ser particularmente cuidadosos\\npara autenticar o que ouvem da rede contra fontes confiáveis . Naturalmente, este último requisito é\\nsemelhante ao do Bitcoin, onde o protocolo e o software também devem ser obtidos a partir de uma fonte confiável.\")]),o(\"p\",[e._v(\"O método acima para prevenir LRA é bem adequado para validadores e nós completos de uma blockchain alimentada\\npor Tendermint porque estes nós são destinados a permanecerem conectados à rede. O método também é adequado\\npara clientes leves que podem ser esperados para sincronizar com a rede com freqüência. No entanto, para\\nos clientes leves que não se espera ter acesso frequente à Internet ou à rede da blockchain, ainda pode\\nser utilizada outra solução para superar o LRA. Os detentores de tokens não validadores podem publicar\\nos seus tokens como colaterais com um período de não ligação muito longo (por exemplo, muito mais longo\\ndo que o período de não ligação para validadores) e servir clientes leves com um método secundário de\\natestar a validade dos blocos atuais e hashes de blocos passados. Embora esses tokens não contam para a\\nsegurança do consenso da blockchain, eles podem fornecer fortes garantias para clientes leves. Se a\\nconsulta histórica de hash de blocos fosse suportada no Ethereum, qualquer pessoa poderia vincular\\nseus tokens em um contrato inteligente projetado especialmente para isso e fornecer serviços de\\ncomprovação de pagamentos, efetivamente criando um mercado para a segurança contra LRA de cliente leve.\")]),o(\"h3\",{attrs:{id:\"superando-forks-e-ataques-de-censura\"}},[e._v(\"Superando Forks e Ataques de Censura\")]),o(\"p\",[e._v(\"Devido à definição de uma confimação de bloco, qualquer coalizão de poder de voto ⅓+ pode interromper a\\nblockchain ficando off-line ou não transmitir os seus votos. Tal coalizão também pode censurar transações\\nparticulares rejeitando blocos que incluem essas transações, embora isso resultaria em uma proporção\\nsignificativa de propostas de blocos a serem rejeitadas, o que iria retardar a taxa de blocos\\nconfirmados da blockchain, reduzindo sua utilidade e valor. A coalizão mal-intencionada também pode transmitir\\nvotos em um fio de modo a triturar os blocos confirmados da blockchain para quase parar, ou se envolver em\\nqualquer combinação desses ataques. Finalmente, isso pode fazer com que a cadeia de blocos “forke” (bifurque),\\npor dupla assinatura ou violação as regras de bloqueio.\")]),o(\"p\",[e._v(\"Se um adversário globalmente ativo também estivesse envolvido, poderia dividir a rede de tal maneira que\\npossa parecer que o subconjunto errado de validadores era responsável pela desaceleração. Esta não é apenas\\numa limitação do Tendermint, mas sim uma limitação de todos os protocolos de consenso cuja\\nrede é potencialmente controlada por um adversário ativo.\")]),o(\"p\",[e._v(\"Para estes tipos de ataques, um subconjunto de validadores deve coordenar através de meios externos\\npara assinar um proposta de reorganização que escolhe um fork (e qualquer prova disso) e o\\nsubconjunto inicial de validadores com suas assinaturas. Os validadores que assinam tal\\nproposta de reorganização deixam seu colateral em todos os outros forks. Os clientes\\ndevem verificar as assinaturas na proposta de reorganização, verificar qualquer\\nevidência e fazer um julgamento ou solicitar ao usuário final uma decisão. Por exemplo,\\numa carteira para celular um aplicativo que pode alertar o usuário com um aviso de segurança,\\nenquanto um refrigerador pode aceitar qualquer proposta de reorganização assinada por\\n+½ dos validadores originais por poder de voto.\")]),o(\"p\",[e._v(\"Nenhum algoritmo não-sincrônico tolerante a falhas Bizantino pode chegar a um consenso quando ⅓+\\nde poder de voto for desonesto, mas um fork supõe que ⅓+ do poder de voto já foram desonestos por\\ndupla assinatura ou bloqueio de mudança sem justificativa. Portanto, assinar a proposta de\\nreorganização é um problema de coordenação que não pode ser resolvido por qualquer protocolo\\nnão-sincronico (isto é, automaticamente e sem fazer suposições sobre a confiabilidade da rede subjacente).\\nPor enquanto, deixamos o problema da coordenação da proposta de reorganização para a coordenação\\nhumana através do consenso social na mídia na internet. Os validadores devem ter cuidado para garantir\\nque não haja partições de rede remanescentes antes de assinar uma proposta de reorganização,\\npara evitar situações em que duas propostas de reorganização em conflito sejam assinadas.\")]),o(\"p\",[e._v(\"Assumindo que o meio de coordenação é externo e o protocolo é robusto, resulta-se que os forks são\\numa preocupação menor do que os ataques de censura.\")]),o(\"p\",[e._v(\"Além de forks e censura, que exigem ⅓+ poder de votação Bizantina, uma coalizão de +⅔ poder de\\nvoto pode ser pratica arbitrária, estado inválido. Esta é a característica de qualquer sistema\\nde consenso (BFT). Ao contrário da dupla assinatura, que cria forks com provas facilmente\\nverificáveis, a detecção de obrigatoriedade de um estado inválido requer que os pares não\\nvalidadores verifiquem blocos inteiros, o que implica que eles mantêm uma cópia local do estado\\ne executam cada transação, computando a raiz de estado de forma independente para eles mesmos.\\nUma vez detectado, a única maneira de lidar com essa falha é através do consenso social.\\nPor exemplo, em situações em que o Bitcoin falhou, seja por causa de bugs de software\\n(como em março de 2013), ou praticar um estado inválido devido ao comportamento Bizantino\\ndos mineradores (como em julho de 2015), a comunidade bem conectada de negócios, desenvolvedores,\\nmineradores e outras organizações estabeleceu um consenso social sobre quais ações manuais se\\nfaziam necessárias para curar a rede. Além disso, uma vez que se pode esperar que os validadores\\nde uma cadeia de blocos de Tendermint sejam identificáveis, o compromisso de um estado inválido\\npode até ser punido por lei ou por alguma jurisprudência externa, se desejado.\")]),o(\"h3\",{attrs:{id:\"especificacao-tmsp\"}},[e._v(\"Especificação TMSP\")]),o(\"p\",[e._v(\"TMSP consiste em 3 tipos de mensagens primárias que são entregues do núcleo para o aplicativo.\\nO aplicativo responde com mensagens de resposta correspondentes.\")]),o(\"p\",[e._v(\"A mensagem \"),o(\"code\",{pre:!0},[e._v(\"AppendTx\")]),e._v(\" é o cavalo de trabalho da aplicação. Cada transação na blockchain\\né entregue com esta mensagem. O aplicativo precisa validar cada transação recebida com a\\nmensagem AppendTx contra o estado atual, o protocolo de aplicativo e as credenciais\\ncriptográficas da transação. Uma transação validada precisa atualizar o estado do\\naplicativo - vinculando um valor a um armazenamento de valores chave ou atualizando o banco de dados UTXO.\")]),o(\"p\",[e._v(\"A mensagem \"),o(\"code\",{pre:!0},[e._v(\"CheckTx\")]),e._v(\" é semelhante à AppendTx, mas é apenas para validar transações. O mempool do\\nTendermint BFT primeiro verifica a validade de uma transação com o CheckTx e apenas relata\\ntransações válidas para seus pares. Os aplicativos podem verificar um nonce incremental na transação\\ne retornar um erro em CheckTx se o nonce é antigo.\")]),o(\"p\",[e._v(\"A mensagem \"),o(\"code\",{pre:!0},[e._v(\"Commit\")]),e._v(\" é usada para calcular uma obrigação criptográfica com o estado atual da aplicação,\\npara ser colocada no próximo cabeçalho do bloco. Isso tem algumas propriedades úteis. Inconsistências\\nna atualização desse estado agora aparecerão como forks do blockchain que captura uma classe inteira\\nde erros de programação. Isso também simplifica o desenvolvimento de clientes leves e seguros,\\njá que as provas de Merkle-hash podem ser provadas verificando o hash de blocos,\\ne o hash de blocos é assinado por um quórum de validadores (por poder de voto).\")]),o(\"p\",[e._v(\"Mensagens TMSP adicionais permitem que o aplicativo acompanhe e altere o conjunto\\nde validadores e que o aplicativo receba as informações do bloco, como a altura e os votos de confirmação.\")]),o(\"p\",[e._v(\"Pedidos/respostas TMSP são simples mensagens Protobuf.\\nConfira o \"),o(\"a\",{attrs:{href:\"https://github.com/tendermint/tmsp/blob/master/types/types.proto\"}},[e._v(\"arquivo do esquema\")]),e._v(\".\")]),o(\"h5\",{attrs:{id:\"appendtx\"}},[e._v(\"AppendTx\")]),o(\"ul\",[o(\"li\",[o(\"strong\",[e._v(\"Arguments\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Data ([]byte)\")]),e._v(\": Os bytes de transação solicitada\")])])]),o(\"li\",[o(\"strong\",[e._v(\"Returns\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Code (uint32)\")]),e._v(\": Código de resposta\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Data ([]byte)\")]),e._v(\": Bytes de resultado, se houver\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Log (string)\")]),e._v(\": Debug ou mensagem de erro\")])])]),o(\"li\",[o(\"strong\",[e._v(\"Usage\")]),e._v(\":\"),o(\"br\"),e._v(\"\\nAcrescentar e executar uma transação. Se a transação for válida,\\nCodeType.OK\")])]),o(\"h5\",{attrs:{id:\"checktx\"}},[e._v(\"CheckTx\")]),o(\"ul\",[o(\"li\",[o(\"strong\",[e._v(\"Arguments\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Data ([]byte)\")]),e._v(\": Os bytes de transação solicitados\")])])]),o(\"li\",[o(\"strong\",[e._v(\"Returns\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Code (uint32)\")]),e._v(\": Código de resposta\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Data ([]byte)\")]),e._v(\": Bytes de resultado, se houver\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Log (string)\")]),e._v(\": Debug ou mensagem de erro\")])])]),o(\"li\",[o(\"strong\",[e._v(\"Usage\")]),e._v(\":\"),o(\"br\"),e._v(\"\\nValidar uma transação. Esta mensagem não deve mutar o estado.\\nAs transações são primeiro executadas através do CheckTx antes da transmissão para os pares na camada mempool.\\nVocê pode fazer o CheckTx semi-stateful e limpar o estado após \"),o(\"code\",{pre:!0},[e._v(\"Commit\")]),e._v(\" ou\\n\"),o(\"code\",{pre:!0},[e._v(\"BeginBlock\")]),e._v(\",\\npara permitir sequências dependentes de transações no mesmo bloco.\")])]),o(\"h5\",{attrs:{id:\"commit\"}},[e._v(\"Commit\")]),o(\"ul\",[o(\"li\",[o(\"strong\",[e._v(\"Returns\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Data ([]byte)\")]),e._v(\": O hash Merkle raiz\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Log (string)\")]),e._v(\": Debug ou erro de mensagem\")])])]),o(\"li\",[o(\"strong\",[e._v(\"Usage\")]),e._v(\":\"),o(\"br\"),e._v(\"\\nRetorna um hash Merkle raiz do estado da aplicação.\")])]),o(\"h5\",{attrs:{id:\"query\"}},[e._v(\"Query\")]),o(\"ul\",[o(\"li\",[o(\"strong\",[e._v(\"Arguments\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Data ([]byte)\")]),e._v(\": Os bytes de solicitação consultada\")])])]),o(\"li\",[o(\"strong\",[e._v(\"Returns\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Code (uint32)\")]),e._v(\": Código de resposta\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Data ([]byte)\")]),e._v(\": Os bytes de resposta consultada\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Log (string)\")]),e._v(\": Debug ou erro de mensagem\")])])])]),o(\"h5\",{attrs:{id:\"flush\"}},[e._v(\"Flush\")]),o(\"ul\",[o(\"li\",[o(\"strong\",[e._v(\"Usage\")]),e._v(\":\"),o(\"br\"),e._v(\"\\nLimpar a fila de resposta. Aplicações que implementam \"),o(\"code\",{pre:!0},[e._v(\"types.Application\")]),e._v(\"\\nnão precisa implementar esta mensagem - é tratada pelo projeto.\")])]),o(\"h5\",{attrs:{id:\"info\"}},[e._v(\"Info\")]),o(\"ul\",[o(\"li\",[o(\"strong\",[e._v(\"Returns\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Data ([]byte)\")]),e._v(\": Os bytes de informação\")])])]),o(\"li\",[o(\"strong\",[e._v(\"Usage\")]),e._v(\":\"),o(\"br\"),e._v(\"\\nRetorna informações sobre o estado da aplicação. Aplicação específicão.\")])]),o(\"h5\",{attrs:{id:\"setoption\"}},[e._v(\"SetOption\")]),o(\"ul\",[o(\"li\",[o(\"strong\",[e._v(\"Arguments\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Key (string)\")]),e._v(\": Chave para definir\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Value (string)\")]),e._v(\": Valor a definir para a chave\")])])]),o(\"li\",[o(\"strong\",[e._v(\"Returns\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Log (string)\")]),e._v(\": Debug ou mensagem de erro\")])])]),o(\"li\",[o(\"strong\",[e._v(\"Usage\")]),e._v(\":\"),o(\"br\"),e._v(\"\\nDefine as opções do aplicativo. Exemplo Key=“mode”, Value=“mempool” para uma conexão mempool\\n, ou Key=“mode”, Value=“consensus” para uma conexão de consenso.\\nOutras opções são específicas da aplicação.\")])]),o(\"h5\",{attrs:{id:\"initchain\"}},[e._v(\"InitChain\")]),o(\"ul\",[o(\"li\",[o(\"strong\",[e._v(\"Arguments\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Validators ([]Validator)\")]),e._v(\": validadores de genesis iniciais\")])])]),o(\"li\",[o(\"strong\",[e._v(\"Usage\")]),e._v(\":\"),o(\"br\"),e._v(\"\\nChamado uma vez na genesis\")])]),o(\"h5\",{attrs:{id:\"beginblock\"}},[e._v(\"BeginBlock\")]),o(\"ul\",[o(\"li\",[o(\"strong\",[e._v(\"Arguments\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Height (uint64)\")]),e._v(\": A altura do bloco que está começando\")])])]),o(\"li\",[o(\"strong\",[e._v(\"Usage\")]),e._v(\":\"),o(\"br\"),e._v(\"\\nSinaliza o início de um novo bloco. Chamado antes de qualquer AppendTxs.\")])]),o(\"h5\",{attrs:{id:\"endblock\"}},[e._v(\"EndBlock\")]),o(\"ul\",[o(\"li\",[o(\"strong\",[e._v(\"Arguments\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Height (uint64)\")]),e._v(\": A altura do bloco que terminou\")])])]),o(\"li\",[o(\"strong\",[e._v(\"Returns\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Validators ([]Validator)\")]),e._v(\": Mudança de validadores com novos poderes de voto (0\\npara remover)\")])])]),o(\"li\",[o(\"strong\",[e._v(\"Usage\")]),e._v(\":\"),o(\"br\"),e._v(\"\\nSinaliza o fim de um bloco. Chamado antes de cada Commit após todas as\\ntransações\")])]),o(\"p\",[e._v(\"Veja \"),o(\"a\",{attrs:{href:\"https://github.com/tendermint/tmsp#message-types\"}},[e._v(\"o repositório TMSP\")]),e._v(\" para mais detalhes.\")]),o(\"h3\",{attrs:{id:\"reconhecimento-de-entrega-de-pacotes-ibc\"}},[e._v(\"Reconhecimento de entrega de pacotes IBC\")]),o(\"p\",[e._v(\"Há várias razões pelas quais um remetente pode querer o reconhecimento da entrega de um pacote\\npela cadeia de recebimento. Por exemplo, o remetente pode não saber o status da cadeia de\\ndestino, se for esperado que esteja com defeito. Ou, o remetente pode querer impor um tempo\\nlimite no pacote (com o campo \"),o(\"code\",{pre:!0},[e._v(\"MaxHeight\")]),e._v(\"), enquanto qualquer cadeia de destino pode sofrer\\nde um ataque de negação de serviço com um aumento repentino no número de pacotes de entrada.\")]),o(\"p\",[e._v(\"Nesses casos, o remetente pode exigir confirmação de entrega configurando o status\\ndo pacote inicial como \"),o(\"code\",{pre:!0},[e._v(\"AckPending\")]),e._v(\". Em seguida, é a responsabilidade da\\ncadeia receptora confirmar a entrega, incluindo uma abreviada \"),o(\"code\",{pre:!0},[e._v(\"IBCPacket\")]),e._v(\" no app Merkle hash.\")]),o(\"p\",[o(\"img\",{attrs:{src:\"https://raw.githubusercontent.com/gnuclear/atom-whitepaper/master/msc/ibc_with_ack.png\",alt:\"Figura da Zone1, Zone2, e Hub IBC comreconhecimento\"}})]),o(\"p\",[e._v(\"Primeiro, um \"),o(\"code\",{pre:!0},[e._v(\"IBCBlockCommit\")]),e._v(\" e\"),o(\"code\",{pre:!0},[e._v(\"IBCPacketTx\")]),e._v(\" são postados no “Hub” que prova\\na existência de um \"),o(\"code\",{pre:!0},[e._v(\"IBCPacket\")]),e._v(\" na “Zone1”. Digamos que \"),o(\"code\",{pre:!0},[e._v(\"IBCPacketTx\")]),e._v(\" tem o seguinte valor:\")]),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"FromChainID\")]),e._v(\": “Zone1”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"FromBlockHeight\")]),e._v(\": 100 (say)\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Packet\")]),e._v(\": an \"),o(\"code\",{pre:!0},[e._v(\"IBCPacket\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Header\")]),e._v(\": an \"),o(\"code\",{pre:!0},[e._v(\"IBCPacketHeader\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"SrcChainID\")]),e._v(\": “Zone1”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"DstChainID\")]),e._v(\": “Zone2”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Number\")]),e._v(\": 200 (say)\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Status\")]),e._v(\": \"),o(\"code\",{pre:!0},[e._v(\"AckPending\")])]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Type\")]),e._v(\": “moeda”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"MaxHeight\")]),e._v(\": 350 (Dizer que “Hub” está atualmente na altura 300)\")])])]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Payload\")]),e._v(\": <Os bytes de uma carga paga de “moeda”>\")])])])]),o(\"p\",[e._v(\"Em seguida, um \"),o(\"code\",{pre:!0},[e._v(\"IBCBlockCommit\")]),e._v(\" e \"),o(\"code\",{pre:!0},[e._v(\"IBCPacketTx\")]),e._v(\" são publicados na “Zone2” que comprova\\na existência de um \"),o(\"code\",{pre:!0},[e._v(\"IBCPacket\")]),e._v(\" em “Hub”. Digamos que \"),o(\"code\",{pre:!0},[e._v(\"IBCPacketTx\")]),e._v(\" tem o seguinte valor:\")]),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"FromChainID\")]),e._v(\": “Hub”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"FromBlockHeight\")]),e._v(\": 300\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Packet\")]),e._v(\": an \"),o(\"code\",{pre:!0},[e._v(\"IBCPacket\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Header\")]),e._v(\": an \"),o(\"code\",{pre:!0},[e._v(\"IBCPacketHeader\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"SrcChainID\")]),e._v(\": “Zone1”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"DstChainID\")]),e._v(\": “Zone2”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Number\")]),e._v(\": 200\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Status\")]),e._v(\": \"),o(\"code\",{pre:!0},[e._v(\"AckPending\")])]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Type\")]),e._v(\": “moeda”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"MaxHeight\")]),e._v(\": 350\")])])]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Payload\")]),e._v(\": <Os mesmos bytes de uma carga paga de “moeda”>\")])])])]),o(\"p\",[e._v(\"Em seguida, “Zone2” deve incluir em seu app-hash um pacote abreviado que mostra o novo\\nstatus de \"),o(\"code\",{pre:!0},[e._v(\"AckSent\")]),e._v(\". Um \"),o(\"code\",{pre:!0},[e._v(\"IBCBlockCommit\")]),e._v(\" e \"),o(\"code\",{pre:!0},[e._v(\"IBCPacketTx\")]),e._v(\" são colocados de volta no “Hub”\\nque comprova a existência de um \"),o(\"code\",{pre:!0},[e._v(\"IBCPacket\")]),e._v(\" abreviado na “Zone2”. Digamos que \"),o(\"code\",{pre:!0},[e._v(\"IBCPacketTx\")]),e._v(\" tem o seguinte valor:\")]),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"FromChainID\")]),e._v(\": “Zone2”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"FromBlockHeight\")]),e._v(\": 400 (say)\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Packet\")]),e._v(\": an \"),o(\"code\",{pre:!0},[e._v(\"IBCPacket\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Header\")]),e._v(\": an \"),o(\"code\",{pre:!0},[e._v(\"IBCPacketHeader\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"SrcChainID\")]),e._v(\": “Zone1”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"DstChainID\")]),e._v(\": “Zone2”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Number\")]),e._v(\": 200\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Status\")]),e._v(\": \"),o(\"code\",{pre:!0},[e._v(\"AckSent\")])]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Type\")]),e._v(\": “moeda”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"MaxHeight\")]),e._v(\": 350\")])])]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"PayloadHash\")]),e._v(\": <Os bytes de hash da mesma carga paga de “moeda”>\")])])])]),o(\"p\",[e._v(\"Finalmente, “Hub” deve atualizar o status do pacote de \"),o(\"code\",{pre:!0},[e._v(\"AckPending\")]),e._v(\" para\"),o(\"code\",{pre:!0},[e._v(\"AckReceived\")]),e._v(\".\\nA evidência desse novo status finalizado deve voltar a “Zone2”. Digamos que \"),o(\"code\",{pre:!0},[e._v(\"IBCPacketTx\")]),e._v(\" tem o seguinte valor:\")]),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"FromChainID\")]),e._v(\": “Hub”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"FromBlockHeight\")]),e._v(\": 301\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Packet\")]),e._v(\": an \"),o(\"code\",{pre:!0},[e._v(\"IBCPacket\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Header\")]),e._v(\": an \"),o(\"code\",{pre:!0},[e._v(\"IBCPacketHeader\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"SrcChainID\")]),e._v(\": “Zone1”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"DstChainID\")]),e._v(\": “Zone2”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Number\")]),e._v(\": 200\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Status\")]),e._v(\": \"),o(\"code\",{pre:!0},[e._v(\"AckReceived\")])]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Type\")]),e._v(\": “moeda”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"MaxHeight\")]),e._v(\": 350\")])])]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"PayloadHash\")]),e._v(\": <Os bytes de hash da mesma carga paga de “moeda”>\")])])])]),o(\"p\",[e._v(\"Enquanto isso, “Zone1” pode assumir de maneira otimista a entrega bem-sucedida de um pacote\\nde “moeda”, a menos que provas em contrário sejam comprovadas em “Hub”. No exemplo acima,\\nse “Hub” não tivesse recebido um status \"),o(\"code\",{pre:!0},[e._v(\"AckSent\")]),e._v(\" de “Zone2” pelo bloco 350, ele teria\\ndefinido o status automaticamente para \"),o(\"code\",{pre:!0},[e._v(\"Timeout\")]),e._v(\". Essa evidência de um tempo limite pode\\nser postada novamente na “Zone1”, e quaisquer tokens podem ser retornados.\")]),o(\"p\",[o(\"img\",{attrs:{src:\"https://raw.githubusercontent.com/gnuclear/atom-whitepaper/master/msc/ibc_with_ack_timeout.png\",alt:\"Figura da Zone1, Zone2, e Hub IBC com reconhecimento etimeout\"}})]),o(\"h3\",{attrs:{id:\"arvore-merkle-e-especificacao-de-prova\"}},[e._v(\"Árvore Merkle e Especificação de Prova\")]),o(\"p\",[e._v(\"Existem dois tipos de árvores Merkle suportadas no ecossistema Tendermint / Cosmos: A Árvore Simples e a Árvore IAVL+.\")]),o(\"h4\",{attrs:{id:\"arvore-simples\"}},[e._v(\"Árvore Simples\")]),o(\"p\",[e._v(\"A Árvore Simples é uma árvore Merkle para uma lista estática de elementos. Se o número de\\nitens não for um poder de dois, algumas folhas estarão em níveis diferentes. Árvore Simples\\ntenta manter ambos os lados da árvore da mesma altura, mas a esquerda pode ter um maior.\\nEsta árvore Merkle é usada para Merkle-lizar as transações de um bloco, e os elementos de\\nnível superior da raiz do estado do aplicativo.\")]),o(\"pre\",{pre:!0},[o(\"code\",{pre:!0,attrs:{\"v-pre\":\"\"}},[e._v(\"                *\\n               / \\\\\\n             /     \\\\\\n           /         \\\\\\n         /             \\\\\\n        *               *\\n       / \\\\             / \\\\\\n      /   \\\\           /   \\\\\\n     /     \\\\         /     \\\\\\n    *       *       *       h6\\n   / \\\\     / \\\\     / \\\\\\n  h0  h1  h2  h3  h4  h5\\n\\n  Uma ÁrvoreSimples com sete elementos\\n\")])]),o(\"h4\",{attrs:{id:\"arvore-iavl\"}},[e._v(\"Árvore IAVL+\")]),o(\"p\",[e._v(\"O objetivo da estrutura de dados IAVL+ é fornecer armazenamento persistente para pares de valores-chave\\nno estado do aplicativo, de modo que um hash determinista de raiz Merkle possa ser calculado\\neficientemente. A árvore é balanceada usando uma variante do \"),o(\"a\",{attrs:{href:\"http://en.wikipedia.org/wiki/AVL_tree\"}},[e._v(\"algoritmo AVL\")]),e._v(\", e todas as operações são O(log(n)).\")]),o(\"p\",[e._v(\"Em uma árvore AVL, as alturas das duas subárvores filhas de qualquer nó diferem por no máximo um.\\nSempre que esta condição for violada após uma atualização, a árvore é rebalanceada criando O(log(n))\\nnovos nós que apontam para nós não modificados da árvore antiga. No algoritmo AVL original, os nós\\ninternos também podem conter pares de valores-chave. O algoritmo AVL + (observe o sinal de adição)\\nmodifica o algoritmo AVL para manter todos os valores em folha de nós, enquanto\\nusando apenas nós de ramo para armazenar chaves. Isso simplifica o algoritmo, mantendo a trilha hash merkle curta.\")]),o(\"p\",[e._v(\"A Árvore AVL + é análoga à Ethereum \"),o(\"a\",{attrs:{href:\"http://en.wikipedia.org/wiki/Radix_tree\"}},[e._v(\"Patricia tries\")]),e._v(\".\\nHá compensações. Chaves não precisam ser hasheadas antes da inserção em árvores IAVL+, portanto,\\nisso fornece iteração mais rápida ordenada no espaço-chave que pode beneficiar algumas aplicações.\\nA lógica é mais simples de implementar, requerendo apenas dois tipos de nós - nós internos e nós de folhas.\\nA prova de Merkle é em média mais curta, sendo uma árvore binária equilibrada. Por outro lado,\\na raiz Merkle de uma árvore IAVL+ depende da ordem das atualizações.\")]),o(\"p\",[e._v(\"Iremos apoiar outras árvores Merkle eficientes, como Patricia Trie, da Ethereum, quando a variante binária estiver disponível.\")]),o(\"h3\",{attrs:{id:\"tipos-de-transacao\"}},[e._v(\"Tipos de Transação\")]),o(\"p\",[e._v(\"Na implementação canônica, as transações são transmitidas para o aplicativo Cosmos hub através da interface TMSP.\")]),o(\"p\",[e._v(\"O Cosmos Hub aceitará uma série de tipos de transações primárias, incluindo \"),o(\"code\",{pre:!0},[e._v(\"SendTx\")]),e._v(\",\\n\"),o(\"code\",{pre:!0},[e._v(\"BondTx\")]),e._v(\", \"),o(\"code\",{pre:!0},[e._v(\"UnbondTx\")]),e._v(\", \"),o(\"code\",{pre:!0},[e._v(\"ReportHackTx\")]),e._v(\", \"),o(\"code\",{pre:!0},[e._v(\"SlashTx\")]),e._v(\", \"),o(\"code\",{pre:!0},[e._v(\"BurnAtomTx\")]),e._v(\", \"),o(\"code\",{pre:!0},[e._v(\"ProposalCreateTx\")]),e._v(\" e \"),o(\"code\",{pre:!0},[e._v(\"ProposalVoteTx\")]),e._v(\",\\nque são relativamente auto-explicativas e será documentado em uma futura revisão deste artigo.\\nAqui documentamos os dois principais tipos de transação para IBC: \"),o(\"code\",{pre:!0},[e._v(\"IBCBlockCommitTx\")]),e._v(\" e \"),o(\"code\",{pre:!0},[e._v(\"IBCPacketTx\")]),e._v(\".\")]),o(\"h4\",{attrs:{id:\"ibcblockcommittx\"}},[e._v(\"IBCBlockCommitTx\")]),o(\"p\",[e._v(\"Uma transação \"),o(\"code\",{pre:!0},[e._v(\"IBCBlockCommitTx\")]),e._v(\" é composta de:\")]),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"ChainID (string)\")]),e._v(\": O ID da blockchain\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"BlockHash ([]byte)\")]),e._v(\": Os bytes de hash de bloco, a raiz Merkle que inclui o app-hash\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"BlockPartsHeader (PartSetHeader)\")]),e._v(\": Os bytes de cabeçalho do conjunto de blocos,\\napenas necessários para verificar assinaturas de voto\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"BlockHeight (int)\")]),e._v(\": A altura do commit\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"BlockRound (int)\")]),e._v(\": A rodada do commit\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Commit ([]Vote)\")]),e._v(\": O +⅔ Tendermint \"),o(\"code\",{pre:!0},[e._v(\"Precommit\")]),e._v(\" de votos que compõem um bloco\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"ValidatorsHash ([]byte)\")]),e._v(\": O hash da raiz da árvore-Merkle do novo conjunto de validadores\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"ValidatorsHashProof (SimpleProof)\")]),e._v(\": Uma ÁrvoreSimples da prova-Merkle para provar o\\n\"),o(\"code\",{pre:!0},[e._v(\"ValidatorsHash\")]),e._v(\" contra o \"),o(\"code\",{pre:!0},[e._v(\"BlockHash\")])]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"AppHash ([]byte)\")]),e._v(\": Um hash da raiz da árvore-Merkle da Árvore IAVL do estado de aplicação\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"AppHashProof (SimpleProof)\")]),e._v(\": Uma ÁrvoreSimples da prova-Merkle para provar o\\n\"),o(\"code\",{pre:!0},[e._v(\"AppHash\")]),e._v(\" contra o \"),o(\"code\",{pre:!0},[e._v(\"BlockHash\")])])]),o(\"h4\",{attrs:{id:\"ibcpackettx\"}},[e._v(\"IBCPacketTx\")]),o(\"p\",[e._v(\"Um \"),o(\"code\",{pre:!0},[e._v(\"IBCPacket\")]),e._v(\" é composto de:\")]),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Header (IBCPacketHeader)\")]),e._v(\": O cabeçalho do pacote\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Payload ([]byte)\")]),e._v(\": Os bytes da carga paga do pacote. \"),o(\"em\",[e._v(\"Optional\")])]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"PayloadHash ([]byte)\")]),e._v(\": O hash para os bytes do pacote. \"),o(\"em\",[e._v(\"Optional\")])])]),o(\"p\",[e._v(\"Qualquer um dos \"),o(\"code\",{pre:!0},[e._v(\"Payload\")]),e._v(\" ou \"),o(\"code\",{pre:!0},[e._v(\"PayloadHash\")]),e._v(\" deve estar presente. O hash de um \"),o(\"code\",{pre:!0},[e._v(\"IBCPacket\")]),e._v(\"\\né uma raiz Merkle simples dos dois itens, \"),o(\"code\",{pre:!0},[e._v(\"Header\")]),e._v(\" e \"),o(\"code\",{pre:!0},[e._v(\"Payload\")]),e._v(\". Um \"),o(\"code\",{pre:!0},[e._v(\"IBCPacket\")]),e._v(\" sem a carga completa\\né chamado de \"),o(\"em\",[e._v(\"abbreviated packet\")]),e._v(\".\")]),o(\"p\",[e._v(\"Um \"),o(\"code\",{pre:!0},[e._v(\"IBCPacketHeader\")]),e._v(\" é composto de:\")]),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"SrcChainID (string)\")]),e._v(\": O ID da blockchain fonte\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"DstChainID (string)\")]),e._v(\": O ID da blockchain destino\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Number (int)\")]),e._v(\": Um número exclusivo para todos os pacotes\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Status (enum)\")]),e._v(\": Pode ser um \"),o(\"code\",{pre:!0},[e._v(\"AckPending\")]),e._v(\", \"),o(\"code\",{pre:!0},[e._v(\"AckSent\")]),e._v(\", \"),o(\"code\",{pre:!0},[e._v(\"AckReceived\")]),e._v(\",\\n\"),o(\"code\",{pre:!0},[e._v(\"NoAck\")]),e._v(\", ou \"),o(\"code\",{pre:!0},[e._v(\"Timeout\")])]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Type (string)\")]),e._v(\": Os tipos são dependentes da aplicação. Cosmos reserva-se ao tipo de pacote “moeda”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"MaxHeight (int)\")]),e._v(\": Se status não for \"),o(\"code\",{pre:!0},[e._v(\"NoAckWanted\")]),e._v(\" ou \"),o(\"code\",{pre:!0},[e._v(\"AckReceived\")]),e._v(\" por essa altura, o status se tornará \"),o(\"code\",{pre:!0},[e._v(\"Timeout\")]),e._v(\". \"),o(\"em\",[e._v(\"Opcional\")])])]),o(\"p\",[e._v(\"Uma transação \"),o(\"code\",{pre:!0},[e._v(\"IBCPacketTx\")]),e._v(\" é composta de:\")]),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"FromChainID (string)\")]),e._v(\": O ID da blockchain que está fornecendo este pacote; Não necessariamente a fonte\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"FromBlockHeight (int)\")]),e._v(\": A altura da blockchain na qual o seguinte pacote é incluído (Merkle-izado) no hash da blockchain de origem\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Packet (IBCPacket)\")]),e._v(\": Um pacote de dados, cujo estado pode ser um\\n\"),o(\"code\",{pre:!0},[e._v(\"AckPending\")]),e._v(\", \"),o(\"code\",{pre:!0},[e._v(\"AckSent\")]),e._v(\", \"),o(\"code\",{pre:!0},[e._v(\"AckReceived\")]),e._v(\", \"),o(\"code\",{pre:!0},[e._v(\"NoAck\")]),e._v(\", ou \"),o(\"code\",{pre:!0},[e._v(\"Timeout\")])]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"PacketProof (IAVLProof)\")]),e._v(\": Uma prova-Merkle da Árvore IAVL para para provar o hash do pacote contra o `AppHash’ da cadeia de origem em determinada altura\")])]),o(\"p\",[e._v(\"A seqüência para enviar um pacote da “Zone1” para a “Zone2” através do “Hub” é mostrada em {Figure X}.\\nPrimeiro, um \"),o(\"code\",{pre:!0},[e._v(\"IBCPacketTx\")]),e._v(\" prova ao “Hub” que o pacote está incluído no estado da aplicação de “Zone1”.\\nEm seguida, outro \"),o(\"code\",{pre:!0},[e._v(\"IBCPacketTx\")]),e._v(\" prova a “Zone2” que o pacote está incluído no estado da aplicação “Hub”.\\nDurante esse procedimento, os campos \"),o(\"code\",{pre:!0},[e._v(\"IBCPacket\")]),e._v(\" são idênticos: o \"),o(\"code\",{pre:!0},[e._v(\"SrcChainID\")]),e._v(\" é sempre “Zone1”,\\ne o \"),o(\"code\",{pre:!0},[e._v(\"DstChainID\")]),e._v(' é sempre\" Zone2 \".')]),o(\"p\",[e._v(\"O \"),o(\"code\",{pre:!0},[e._v(\"PacketProof\")]),e._v(\" deve ter o caminho correto da prova-Merkle, da seguinte maneira:\")]),o(\"pre\",{pre:!0},[o(\"code\",{pre:!0,attrs:{\"v-pre\":\"\"}},[e._v(\"IBC/<SrcChainID>/<DstChainID>/<Number>\\n\")])]),o(\"p\",[e._v(\"Quando “Zone1” quer enviar um pacote para “Zone2” através do “Hub”, os dados de \"),o(\"code\",{pre:!0},[e._v(\"IBCPacket\")]),e._v(\"\\nsão idênticos se o pacote é Merkle-izado em “Zone1”, no “Hub” ou “Zone2”. O único campo mutável\\né \"),o(\"code\",{pre:!0},[e._v(\"Status\")]),e._v(\" para acompanhar a entrega, conforme mostrado abaixo.\")]),o(\"h2\",{attrs:{id:\"agradecimentos\"}},[e._v(\"Agradecimentos\")]),o(\"p\",[e._v(\"Agradecemos aos nossos amigos e colegas por sua ajuda na conceituação, revisão e apoio no nosso trabalho com Tendermint e Cosmos.\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"https://github.com/zmanian\"}},[e._v(\"Zaki Manian\")]),e._v(\" da\\n\"),o(\"a\",{attrs:{href:\"https://www.skuchain.com/\"}},[e._v(\"SkuChain\")]),e._v(\" forneceu muita ajuda na formatação e redacção, especialmente sob a seção TMSP\")]),o(\"li\",[o(\"a\",{attrs:{href:\"https://github.com/jtremback\"}},[e._v(\"Jehan Tremback\")]),e._v(\" da Althea and Dustin Byington\\npor ajudar com iterações iniciais\")]),o(\"li\",[o(\"a\",{attrs:{href:\"http://soc1024.com/\"}},[e._v(\"Andrew Miller\")]),e._v(\" da \"),o(\"a\",{attrs:{href:\"https://eprint.iacr.org/2016/199\"}},[e._v(\"Honey\\nBadger\")]),e._v(\" pelo feedback sobre consenso\")]),o(\"li\",[o(\"a\",{attrs:{href:\"https://fixingtao.com/\"}},[e._v(\"Greg Slepak\")]),e._v(\" pelo feedback sobre consenso e redação\")]),o(\"li\",[e._v(\"Também agradecemos ao \"),o(\"a\",{attrs:{href:\"https://github.com/gleim\"}},[e._v(\"Bill Gleim\")]),e._v(\" e \"),o(\"a\",{attrs:{href:\"http://www.seunghwanhan.com\"}},[e._v(\"Seunghwan\\nHan\")]),e._v(\" por várias contribuições.\")]),o(\"li\",[o(\"a\",{attrs:{href:\"https://github.com/ShooterXD\"}},[e._v(\"Pedro Augusto\")]),e._v(\" pela tradução para\\nPortuguês\")])]),o(\"h2\",{attrs:{id:\"citacoes\"}},[e._v(\"Citações\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"https://bitcoin.org/bitcoin.pdf\"}},[e._v(\"1\")]),e._v(\" Bitcoin: \"),o(\"a\",{attrs:{href:\"https://bitcoin.org/bitcoin.pdf\"}},[e._v(\"https://bitcoin.org/bitcoin.pdf\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"http://zerocash-project.org/paper\"}},[e._v(\"2\")]),e._v(\" ZeroCash: \"),o(\"a\",{attrs:{href:\"http://zerocash-project.org/paper\"}},[e._v(\"http://zerocash-project.org/paper\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"https://github.com/ethereum/wiki/wiki/White-Paper\"}},[e._v(\"3\")]),e._v(\" Ethereum: \"),o(\"a\",{attrs:{href:\"https://github.com/ethereum/wiki/wiki/White-Paper\"}},[e._v(\"https://github.com/ethereum/wiki/wiki/White-Paper\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"https://download.slock.it/public/DAO/WhitePaper.pdf\"}},[e._v(\"4\")]),e._v(\" TheDAO: \"),o(\"a\",{attrs:{href:\"https://download.slock.it/public/DAO/WhitePaper.pdf\"}},[e._v(\"https://download.slock.it/public/DAO/WhitePaper.pdf\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki\"}},[e._v(\"5\")]),e._v(\" Segregated Witness: \"),o(\"a\",{attrs:{href:\"https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki\"}},[e._v(\"https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"https://arxiv.org/pdf/1510.02037v2.pdf\"}},[e._v(\"6\")]),e._v(\" BitcoinNG: \"),o(\"a\",{attrs:{href:\"https://arxiv.org/pdf/1510.02037v2.pdf\"}},[e._v(\"https://arxiv.org/pdf/1510.02037v2.pdf\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"https://lightning.network/lightning-network-paper-DRAFT-0.5.pdf\"}},[e._v(\"7\")]),e._v(\" Lightning Network: \"),o(\"a\",{attrs:{href:\"https://lightning.network/lightning-network-paper-DRAFT-0.5.pdf\"}},[e._v(\"https://lightning.network/lightning-network-paper-DRAFT-0.5.pdf\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"https://github.com/tendermint/tendermint/wiki\"}},[e._v(\"8\")]),e._v(\" Tendermint: \"),o(\"a\",{attrs:{href:\"https://github.com/tendermint/tendermint/wiki\"}},[e._v(\"https://github.com/tendermint/tendermint/wiki\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"https://groups.csail.mit.edu/tds/papers/Lynch/jacm85.pdf\"}},[e._v(\"9\")]),e._v(\" FLP Impossibility: \"),o(\"a\",{attrs:{href:\"https://groups.csail.mit.edu/tds/papers/Lynch/jacm85.pdf\"}},[e._v(\"https://groups.csail.mit.edu/tds/papers/Lynch/jacm85.pdf\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"https://blog.ethereum.org/2014/01/15/slasher-a-punitive-proof-of-stake-algorithm/\"}},[e._v(\"10\")]),e._v(\" Slasher: \"),o(\"a\",{attrs:{href:\"https://blog.ethereum.org/2014/01/15/slasher-a-punitive-proof-of-stake-algorithm/\"}},[e._v(\"https://blog.ethereum.org/2014/01/15/slasher-a-punitive-proof-of-stake-algorithm/\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"http://pmg.csail.mit.edu/papers/osdi99.pdf\"}},[e._v(\"11\")]),e._v(\" PBFT: \"),o(\"a\",{attrs:{href:\"http://pmg.csail.mit.edu/papers/osdi99.pdf\"}},[e._v(\"http://pmg.csail.mit.edu/papers/osdi99.pdf\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"https://bitshares.org/technology/delegated-proof-of-stake-consensus/\"}},[e._v(\"12\")]),e._v(\" BitShares: \"),o(\"a\",{attrs:{href:\"https://bitshares.org/technology/delegated-proof-of-stake-consensus/\"}},[e._v(\"https://bitshares.org/technology/delegated-proof-of-stake-consensus/\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"https://www.stellar.org/papers/stellar-consensus-protocol.pdf\"}},[e._v(\"13\")]),e._v(\" Stellar: \"),o(\"a\",{attrs:{href:\"https://www.stellar.org/papers/stellar-consensus-protocol.pdf\"}},[e._v(\"https://www.stellar.org/papers/stellar-consensus-protocol.pdf\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"https://interledger.org/rfcs/0001-interledger-architecture/\"}},[e._v(\"14\")]),e._v(\" Interledger: \"),o(\"a\",{attrs:{href:\"https://interledger.org/rfcs/0001-interledger-architecture/\"}},[e._v(\"https://interledger.org/rfcs/0001-interledger-architecture/\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"https://blockstream.com/sidechains.pdf\"}},[e._v(\"15\")]),e._v(\" Sidechains: \"),o(\"a\",{attrs:{href:\"https://blockstream.com/sidechains.pdf\"}},[e._v(\"https://blockstream.com/sidechains.pdf\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"https://blog.ethereum.org/2015/08/01/introducing-casper-friendly-ghost/\"}},[e._v(\"16\")]),e._v(\" Casper: \"),o(\"a\",{attrs:{href:\"https://blog.ethereum.org/2015/08/01/introducing-casper-friendly-ghost/\"}},[e._v(\"https://blog.ethereum.org/2015/08/01/introducing-casper-friendly-ghost/\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"https://github.com/tendermint/tmsp\"}},[e._v(\"17\")]),e._v(\" TMSP: \"),o(\"a\",{attrs:{href:\"https://github.com/tendermint/tmsp\"}},[e._v(\"https://github.com/tendermint/tmsp\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"https://github.com/ethereum/EIPs/issues/53\"}},[e._v(\"18\")]),e._v(\" Ethereum Sharding: \"),o(\"a\",{attrs:{href:\"https://github.com/ethereum/EIPs/issues/53\"}},[e._v(\"https://github.com/ethereum/EIPs/issues/53\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"http://www.ds.ewi.tudelft.nl/fileadmin/pds/papers/PerformanceAnalysisOfLibswift.pdf\"}},[e._v(\"19\")]),e._v(\" LibSwift: \"),o(\"a\",{attrs:{href:\"http://www.ds.ewi.tudelft.nl/fileadmin/pds/papers/PerformanceAnalysisOfLibswift.pdf\"}},[e._v(\"http://www.ds.ewi.tudelft.nl/fileadmin/pds/papers/PerformanceAnalysisOfLibswift.pdf\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"http://groups.csail.mit.edu/tds/papers/Lynch/jacm88.pdf\"}},[e._v(\"20\")]),e._v(\" DLS: \"),o(\"a\",{attrs:{href:\"http://groups.csail.mit.edu/tds/papers/Lynch/jacm88.pdf\"}},[e._v(\"http://groups.csail.mit.edu/tds/papers/Lynch/jacm88.pdf\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"https://en.bitcoin.it/wiki/Thin_Client_Security\"}},[e._v(\"21\")]),e._v(\" Thin Client Security: \"),o(\"a\",{attrs:{href:\"https://en.bitcoin.it/wiki/Thin_Client_Security\"}},[e._v(\"https://en.bitcoin.it/wiki/Thin_Client_Security\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"http://vitalik.ca/files/mauve_paper.html\"}},[e._v(\"22\")]),e._v(\" Ethereum 2.0 Mauve Paper: \"),o(\"a\",{attrs:{href:\"http://vitalik.ca/files/mauve_paper.html\"}},[e._v(\"http://vitalik.ca/files/mauve_paper.html\")])])]),o(\"h4\",{attrs:{id:\"links-nao-classificados\"}},[e._v(\"Links não classificados\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"https://www.docdroid.net/ec7xGzs/314477721-ethereum-platform-review-opportunities-and-challenges-for-private-and-consortium-blockchains.pdf.html\"}},[e._v(\"https://www.docdroid.net/ec7xGzs/314477721-ethereum-platform-review-opportunities-and-challenges-for-private-and-consortium-blockchains.pdf.html\")])])])])}],k={},y=Object(c[\"a\"])(k,g,b,!1,null,null,null),w=y.exports,C=function(){var e=this,a=e.$createElement;e._self._c;return e._m(0)},T=[function(){var e=this,a=e.$createElement,o=e._self._c||a;return o(\"section\",[o(\"h1\",{attrs:{id:\"cosmos\"}},[e._v(\"Cosmos\")]),o(\"p\",[o(\"strong\",[e._v(\"A Network of Distributed Ledgers\")])]),o(\"p\",[o(\"strong\",[e._v(\"分布式账本网络\")])]),o(\"p\",[e._v(\"Jae Kwon jae@tendermint.com \"),o(\"br\"),e._v(\"\\nEthan Buchman ethan@tendermint.com\")]),o(\"p\",[e._v(\"讨论\"),o(\"a\",{attrs:{href:\"https://t.me/cosmosproject\"}},[e._v(\"请加入 Telegram\")]),e._v(\"!\")]),o(\"p\",[o(\"em\",[e._v(\"注意：如果你能在 github 上阅读，我们仍然定时更新这个文档，请定期检查更新！\")])]),o(\"p\"),o(\"div\",{staticClass:\"minimal-toc\"},[o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#\"}},[e._v(\"介绍\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#tendermint\"}},[e._v(\"Tendermint\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#\"}},[e._v(\"验证人\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#\"}},[e._v(\"共识\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#\"}},[e._v(\"轻客户端\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#\"}},[e._v(\"防止攻击\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#abci\"}},[e._v(\"ABCI\")])])])]),o(\"li\",[o(\"a\",{attrs:{href:\"#cosmos\"}},[e._v(\"Cosmos 概述\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#tendermint-\"}},[e._v(\"Tendermint-拜占庭容错\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#\"}},[e._v(\"治理\")])])])]),o(\"li\",[o(\"a\",{attrs:{href:\"#\"}},[e._v(\"枢纽与分区\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#\"}},[e._v(\"枢纽\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#\"}},[e._v(\"分区\")])])])]),o(\"li\",[o(\"a\",{attrs:{href:\"#ibc\"}},[e._v(\"跨链通信-IBC\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#\"}},[e._v(\"用例\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#\"}},[e._v(\"分布式交易所\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#\"}},[e._v(\"作为其他加密货币的纽带\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#cosmos\"}},[e._v(\"向 Cosmos 枢纽发送代币\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#cosmos\"}},[e._v(\"从 Cosmos 枢纽提出代币\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#\"}},[e._v(\"挂钩区完全责任制\")])])])]),o(\"li\",[o(\"a\",{attrs:{href:\"#\"}},[e._v(\"以太坊的扩展\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#\"}},[e._v(\"多用一体化\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#\"}},[e._v(\"缓解网络分区问题\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#\"}},[e._v(\"联邦式名称解析系统\")])])])]),o(\"li\",[o(\"a\",{attrs:{href:\"#\"}},[e._v(\"发行与激励\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#atom\"}},[e._v(\"Atom 代币\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#\"}},[e._v(\"众筹\")])])])]),o(\"li\",[o(\"a\",{attrs:{href:\"#\"}},[e._v(\"验证人的数量限制\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#\"}},[e._v(\"成为创世日后的验证人\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#\"}},[e._v(\"对验证人的惩罚\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#\"}},[e._v(\"交易费用\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#\"}},[e._v(\"激励黑客\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#\"}},[e._v(\"治理规范\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#\"}},[e._v(\"参数变更提案\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#\"}},[e._v(\"赏金提案\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#\"}},[e._v(\"文本提案\")])])])]),o(\"li\",[o(\"a\",{attrs:{href:\"#\"}},[e._v(\"路线图\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#\"}},[e._v(\"相关工作\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#\"}},[e._v(\"共识系统\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#\"}},[e._v(\"经典拜占庭容错\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#bitshare\"}},[e._v(\"BitShare 委托权益\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#stellar\"}},[e._v(\"Stellar\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#bitcoinng\"}},[e._v(\"BitcoinNG\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#casper\"}},[e._v(\"Casper\")])])])]),o(\"li\",[o(\"a\",{attrs:{href:\"#\"}},[e._v(\"水平扩展\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#interledger\"}},[e._v(\"Interledger 协议\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#\"}},[e._v(\"侧链\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#\"}},[e._v(\"以太坊扩展性的努力\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#cosmos-vs-ethereum-20-mauve\"}},[e._v(\"Cosmos vs Ethereum 2.0 Mauve\")])])])])])]),o(\"li\",[o(\"a\",{attrs:{href:\"#\"}},[e._v(\"普遍扩展\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#\"}},[e._v(\"闪电网络\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#\"}},[e._v(\"隔离验证人\")])])])])])]),o(\"li\",[o(\"a\",{attrs:{href:\"#\"}},[e._v(\"附录\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#\"}},[e._v(\"分叉问责制\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#tendermint\"}},[e._v(\"Tendermint 共识\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#tendermint\"}},[e._v(\"Tendermint 轻客户端\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#\"}},[e._v(\"远程攻击的防御\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#\"}},[e._v(\"克服分叉与审查攻击\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#abci\"}},[e._v(\"ABCI 说明\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#appendtx\"}},[e._v(\"AppendTx\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#checktx\"}},[e._v(\"CheckTx\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#commit\"}},[e._v(\"Commit\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#query\"}},[e._v(\"Query\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#flush\"}},[e._v(\"Flush\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#info\"}},[e._v(\"Info\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#setoption\"}},[e._v(\"SetOption\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#initchain\"}},[e._v(\"InitChain\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#beginblock\"}},[e._v(\"BeginBlock\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#endblock\"}},[e._v(\"EndBlock\")])])])]),o(\"li\",[o(\"a\",{attrs:{href:\"#ibc\"}},[e._v(\"IBC 数据包交付确认\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#\"}},[e._v(\"默克尔树及默克尔证明的说明\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#\"}},[e._v(\"简易版默克尔树\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#iavl\"}},[e._v(\"IAVL+树\")])])])]),o(\"li\",[o(\"a\",{attrs:{href:\"#\"}},[e._v(\"交易类型\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#ibcblockcommittx\"}},[e._v(\"IBCBlockCommitTx\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#ibcpackettx\"}},[e._v(\"IBCPacketTx\")])])])])])]),o(\"li\",[o(\"a\",{attrs:{href:\"#\"}},[e._v(\"鸣谢\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"#\"}},[e._v(\"引用\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"#\"}},[e._v(\"未分类链接\")])])])])])]),o(\"p\"),o(\"h2\",{attrs:{id:\"\"}},[e._v(\"介绍\")]),o(\"p\",[e._v(\"开源的生态系统、去中心化的文件共享、以及公共的加密货币，这一系列技术的成功使人们启发和理解，去中心化的互联网协议是可以从根本上改善社会经济基础架构的。我们已经见识过个有专长的区块链应用，诸如比特币\"),o(\"a\",{attrs:{href:\"https://bitcoin.org/bitcoin.pdf\"}},[e._v(\"[1]\")]),e._v(\"（加密货币），ZCASH \"),o(\"a\",{attrs:{href:\"http://zerocash-project.org/paper\"}},[e._v(\"[2]\")]),e._v(\" (隐私加密货币)，也看到了例如以太坊 \"),o(\"a\",{attrs:{href:\"https://github.com/ethereum/wiki/wiki/White-Paper\"}},[e._v(\"[3]\")]),e._v(\" 的大众智能合约平台，还有无数基于 EVM (以太坊虚拟机)开发的分布式应用，例如 Augur（预测市场）和 TheDAO \"),o(\"a\",{attrs:{href:\"https://download.slock.it/public/DAO/WhitePaper.pdf\"}},[e._v(\"[4]\")]),e._v(\" （投资俱乐部）\")]),o(\"p\",[e._v(\"然而，迄今为止，这些区块链已经暴露了各种缺陷，包括总体能效低下，性能不佳或受到限制和缺乏成熟的治理机制。为了扩大比特币交易吞吐量，已经研发了许多诸如隔离见证 \"),o(\"a\",{attrs:{href:\"https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki\"}},[e._v(\"[5]\")]),e._v(\"（Segregated-Witness）和 BitcoinNG \"),o(\"a\",{attrs:{href:\"https://arxiv.org/pdf/1510.02037v2.pdf\"}},[e._v(\"[6]\")]),e._v(\"（一种新的可扩展协议）这样的解决方案，但这些垂直扩展解决方案仍然受到单一物理机容量的限制，以确保完整的可审计性。闪电网络 \"),o(\"a\",{attrs:{href:\"https://lightning.network/lightning-network-paper-DRAFT-0.5.pdf\"}},[e._v(\"[7]\")]),e._v(\" 可以通过部分交易完全记录在主链账本外来扩展比特币的交易容量，这种方法十分适用于微支付和隐私保护支付通道，但是无法适用于更通用的扩展需求。\")]),o(\"p\",[e._v(\"理想的解决方案是允许多个并行的区块链交互操作的同时保持其安全特性。事实证明，采用工作量证明很难做到这一点，但也并非不可能。例如合并挖矿，允许在工作完成的同时，确保母链在子链上被重复使用，但交易必须通过每个节点依次进行验证，而且如果母链上的大多数哈希算力没有积极地对子链进行合并挖矿，那么就容易遭受到攻击。关于\"),o(\"a\",{attrs:{href:\"http://vukolic.com/iNetSec_2015.pdf\"}},[e._v(\"可替代区块链网络架构的学术回顾\")]),e._v(\" 将在附件中展示，我们也会在\"),o(\"a\",{attrs:{href:\"#related-work\"}},[e._v(\"相关工作\")]),e._v(\"中对其他（技术）方案和缺陷进行概括。\")]),o(\"p\",[e._v(\"这里我们要介绍的 Cosmos，一个全新的区块链网络架构，能够解决所有这些问题。Cosmos 是由许多被称之为“分区”的独立区块链组成的网络。分区在 Tendermint BFT \"),o(\"a\",{attrs:{href:\"https://github.com/tendermint/tendermint/wiki\"}},[e._v(\"[8]\")]),e._v(\"的支持下运行，Tendermint BFT 是一个\"),o(\"a\",{attrs:{href:\"http://tendermint.com/blog/tendermint-vs-pbft/\"}},[e._v(\"类似拜占庭容错\")]),e._v(\"安全共识引擎，具有高性能、一致性的特性，并且在严格的\"),o(\"a\",{attrs:{href:\"#fork-accountability\"}},[e._v(\"分叉追责\")]),e._v(\" 机制下能够制止恶意破坏者的行为。Tendermint BFT 的拜占庭容错共识算法十分适合用于扩展权益证明(PoS)机制下的公共区块链。使用其他共识模型的区块链, 包括类似基于权益证明(PoS)的以太坊，以及比特币也能够通过使用适配分区被 Cosmos 网络连接。\")]),o(\"p\",[e._v(\"Cosmos 的第一个分区称之为 Cosmos 枢纽。Cosmos 枢纽是一种多资产权益证明加密货币网络，它通过简单的治理机制能够对网络进行适配和升级。此外，Cosmos 枢纽可以通过链接其他分区来实现扩展。\")]),o(\"p\",[e._v(\"Cosmos 网络的枢纽及各个分区可以通过区块链间通信（IBC）协议进行通信，这种协议就是针对区块链的虚拟用户数据报协议（UDP）或者传输控制协议（TCP）。代币可以安全、快速地从一个分区转到其他分区，而无需在两个分区之间拥具有汇兑流动性。相反，所有跨分区的代币转移都会通过 Cosmos 枢纽，以此来追踪记录每个分区持有代币的总量。这个枢纽会将每个分区与其他故障分区隔离开。因为每个人都可以将新的分区连接到 Cosmos 枢纽，所以分区将可以向后兼容新的区块链技术。\")]),o(\"p\",[e._v(\"利用 Cosmos 可以实现区块链间的互操作。这是一个具有潜力的有价值的互联网络，其中的资产由不同的验证人发布和控制，并可以在不依靠需要信任的第三方的情况下实现跨链资产无缝的转移和交易。\")]),o(\"h2\",{attrs:{id:\"tendermint\"}},[e._v(\"Tendermint\")]),o(\"p\",[e._v(\"在这一部分我们将阐述 Tendermint 共识协议和用于建立其应用程序的接口。 更多信息，请参见\"),o(\"a\",{attrs:{href:\"#%E9%99%84%E5%BD%95\"}},[e._v(\"附录\")])]),o(\"h3\",{attrs:{id:\"-2\"}},[e._v(\"验证人\")]),o(\"p\",[e._v(\"在经典的拜占庭容错算法中，每个节点有相同的权重。在 Tendermint，节点有着不同数量（非负）的 \"),o(\"em\",[e._v(\"投票权\")]),e._v(\"，而那些拥有相当数量投票权的节点称之为 \"),o(\"em\",[e._v(\"验证人\")]),e._v(\"。验证人通过广播加密签名、投票或者对下一个区块表决同意来参与共识协议。\")]),o(\"p\",[e._v(\"验证者的投票权是一开始就确定好了，或者根据应用程序由区块链来决定修改投票权。例如，在像 Cosmos 枢纽的权益证明应用里，投票权可由绑定为押金的代币数量来决定。\")]),o(\"p\",[e._v('注意：像 ⅔ 和 ⅓ 这样的分数指的是占总投票权的分数，而不是总验证人，除非所有验证人拥有相同权重。而>⅔ 的意思是\"超过 ⅔ \"，≥⅓ 则是\"⅓ 或者更多\"的意思。')]),o(\"h3\",{attrs:{id:\"-3\"}},[e._v(\"共识\")]),o(\"p\",[e._v(\"Tendermint 是部分同步运作的拜占庭容错共识协议，这种协议源自 DLS 共识算法 \"),o(\"a\",{attrs:{href:\"http://groups.csail.mit.edu/tds/papers/Lynch/jacm88.pdf\"}},[e._v(\"[20]\")]),e._v(\"。Tendermint 以简易性、高性能以及\"),o(\"a\",{attrs:{href:\"#fork-accountability\"}},[e._v(\"分叉问责制\")]),e._v(\"而著称。协议要求这组验证人固定且被熟知，并且每个验证人都有其公钥验证身份。这些验证人试图同时在一个区块上达成共识，这些区块是一系列的交易记录。每个区块的共识轮流进行，每一轮都会有个领头人，或者提议人，由他们来发起区块。之后验证人分阶段对是否接受该区块，或者是否进入下一轮做出投票。每轮的提议人会从验证人顺序列表中按照其投票权比例来选择确定。\")]),o(\"p\",[e._v(\"更多协议的全部细节，请点击\"),o(\"a\",{attrs:{href:\"https://github.com/tendermint/tendermint/wiki/Byzantine-Consensus-Algorithm\"}},[e._v(\"这里\")]),e._v(\".\")]),o(\"p\",[e._v(\"Tendermint 采用了使用大多数投票（超过三分之二）和锁定机制的最优拜占庭容错，来确保其安全性。这些能够保证：\")]),o(\"ul\",[o(\"li\",[e._v(\"蓄意破坏者想要造成安全性问题，必须有三分之一以上的投票权，并且要提交超过两份以上的值。\")]),o(\"li\",[e._v(\"如果有一组验证人成功破坏了安全性，或者曾试图这么做，他们会被协议识别。协议包括对有冲突的区块进行投票和广播那些有问题的投票。\")])]),o(\"p\",[e._v(\"除了其超强的安全性外，Tendermint 还具备杰出的性能。以商用型云平台为例，Tendermint 共识以分布在五大洲七个数据中心的 64 位节点为基准，其每秒可以处理成千上万笔交易，订单提交延迟时间为 1-2 秒。而值得关注的是，即使是在极其恶劣的敌对环境中，比如验证人崩溃了或者是广播恶意破坏的投票，也能维持这种每秒超过千笔交易的较高性能。详见下图。\")]),o(\"p\",[o(\"img\",{attrs:{src:\"https://raw.githubusercontent.com/gnuclear/atom-whitepaper/master/images/tendermint_throughput_blocksize.png\",alt:\"Figure of Tendermint throughput performance\"}})]),o(\"h3\",{attrs:{id:\"-4\"}},[e._v(\"轻客户端\")]),o(\"p\",[e._v(\"Tendermint 共识算法的主要好处是具有安全简易的客户端，使其成为手机和物联网用例的理想选择。比特币轻客户端必须同步运行区块头组成的链，并且找到工作量证明最多的那一条链，而 Tendermint 轻客戸端只需和验证组的变化保持一致，然后简单地验证最新区块中预先提交的>⅔，来确定最新情况。\")]),o(\"p\",[e._v(\"这种简单的轻客戸端证明机制也可以实现\"),o(\"a\",{attrs:{href:\"#inter-blockchain-communication-ibc\"}},[e._v(\"区块链之间的通信\")]),e._v(\"。\")]),o(\"h3\",{attrs:{id:\"-5\"}},[e._v(\"防止攻击\")]),o(\"p\",[e._v(\"Tendermint 有各种各样的防御措施来防止一些明显的攻击，比如\"),o(\"a\",{attrs:{href:\"#preventing-long-range-attacks\"}},[e._v(\"远程无利害关系双花攻击\")]),e._v(\" 及\"),o(\"a\",{attrs:{href:\"#overcoming-forks-and-censorship-attacks\"}},[e._v(\"审查制度\")]),e._v(\"。 这些在\"),o(\"a\",{attrs:{href:\"#appendix\"}},[e._v(\"附录\")]),e._v(\"中有更详细的讨论。\")]),o(\"h3\",{attrs:{id:\"abci\"}},[e._v(\"ABCI\")]),o(\"p\",[e._v(\"Tendermint 共识算法是在叫做 Tendermint BFT 的程序中实现的。这个程序是独立于应用的“共识引擎”，可以将任何已经确定的黑盒应用转变为分布式、可复制的区块链。Tendermint BFT 可以通过应用区块链接口(ABCI) \"),o(\"a\",{attrs:{href:\"https://github.com/tendermint/abci\"}},[e._v(\"[17]\")]),e._v(\"与其他区块链应用连接。而且，应用区块链接口(ABCI) 接口允许区块链应用以任何语言编程实现，而不仅仅是写这个共识引擎所使用的语言。此外，应用区块链接口(ABCI) 也让交换任何现有区块链栈的共识层成为可能。\")]),o(\"p\",[e._v(\"我们将其与知名加密货币比特币进行了类比。在比特币这种加密币区块链中，每个节点都维持着完整的审核过的 UTXO（未使用交易输出）数据库。如果您想要在应用区块链接口(ABCI)基础上，创建出类似比特币的系统，那么 Tendermint BFT 可以做到：\")]),o(\"ul\",[o(\"li\",[e._v(\"在节点间共享区块及交易\")]),o(\"li\",[e._v(\"创建规范或不可改变的交易顺序（区块链）\")])]),o(\"p\",[e._v(\"同时，ABCI 应用也可以做到：\")]),o(\"ul\",[o(\"li\",[e._v(\"维护 UTXO 数据库\")]),o(\"li\",[e._v(\"验证交易的加密签名\")]),o(\"li\",[e._v(\"防止出现不存在的余额被交易\")]),o(\"li\",[e._v(\"允许客户访问 UTXO 数据库\")])]),o(\"h2\",{attrs:{id:\"cosmos-2\"}},[e._v(\"Cosmos 概述\")]),o(\"p\",[e._v(\"Cosmos 是一个独立平行的区块链网络，其中每条区块链通过 Tendermint\"),o(\"a\",{attrs:{href:\"http://github.com/tendermint/tendermint\"}},[e._v(\"1\")]),e._v(\"这样的经典拜占庭容错共识算法来运行。\")]),o(\"p\",[e._v(\"网络中第一条区块链将会是 Cosmos 枢纽。Cosmos 枢纽通过全新的区块链间通信协议来连接其他众多区块链（或将其称之为 \"),o(\"em\",[e._v(\"分区\")]),e._v(\"）。Cosmos 枢纽可以追踪无数代币的种类，并且在各个连接的分区里记录各种代币总数。代币可以安全快速地从一个分区转移到另一个分区，两者之间无需体现汇兑流动性，因为所有分区之间的代币传输都会经过 Cosmos 枢纽。\")]),o(\"p\",[e._v(\"这一架构解决了当今区块链领域面临的许多问题，包括应用程序互操作性、可扩展性、以及可无缝升级的能力。比如，从 Bitcoind、Go-Ethereum、CryptoNote、ZCash 或其他区块链系统中衍生出来的分区，都能被锚定接入 Cosmos 枢纽。这些分区允许 Cosmos 实现无限扩展，从而满足全球交易的需求。此外，分区也完全适用于分布式交易所，反之交易所也支持分区运行。\")]),o(\"p\",[e._v(\"Cosmos 不仅仅是单一的分布式账本，而 Cosmos 枢纽也不是封闭式庭院或宇宙的中心。我们正在为分布式账本的开放网络设计一套协议，这套协议将基于密码学、稳健经济学、共识理论、透明性及可追责制的原则，成为未来金融系统的全新基础。\")]),o(\"h3\",{attrs:{id:\"tendermint-\"}},[e._v(\"Tendermint-拜占庭容错\")]),o(\"p\",[e._v(\"Cosmos 枢纽是 Cosmos 网络中第一条公共区块链，通过 Tendermint 的拜占庭共识算法运行。Tendermint 开源项目创立于 2014 年，旨在解决比特币工作量证明共识算法的速度、可扩展性以及造成的环境问题。通过采用并提高已经过验证的拜占庭算法（1988 年在麻省理工学院开发）\"),o(\"a\",{attrs:{href:\"http://groups.csail.mit.edu/tds/papers/Lynch/jacm88.pdf\"}},[e._v(\"[20]\")]),e._v('，Tendermint 成为了首个在概念论证了权益证明加密货币的团队，这种机制可以解决 NXT 和 BitShares 这些第一代权益证明加密币面临的\"无利害关系\"的问题。')]),o(\"p\",[e._v(\"如今，实际上所有比特币移动钱包都要使用可靠的服务器来进行交易验证。这是因为工作量证明机制需要在交易被认定为无法逆转前进行多次确认。而在 Coinbase 之类的服务中也已经出现双重支付攻击。\")]),o(\"p\",[e._v(\"和其他区块链共识系统不同，Tendermint 提供的是即时、可证明安全的移动客户端支付验证方式。因为 Tendermint 被设计为完全不分叉，所以移动钱包就可以实时接收交易确认，从而在智能手机上真正实现去信任的支付方式。这一点也大大影响了物联网应用程序。\")]),o(\"p\",[e._v('Cosmos 中的验证人角色类似比特币矿工，但是他们采用加密签名来进行投票。验证人是专门用来提交区块的安全机器。非验证人可以将权益代币（也叫做\"atom\"币）委托给任何验证人来赚取一定的区块费用以及 atom 奖励，但是如果验证人被黑客攻击或者违反协议规定，那么代币就会面临被惩罚（削减）的风险。Tendermint 拜占庭共识的可证明安全机制，以及利益相关方（验证人和委托人）的抵押品保证，为节点甚至是轻客户端提供了可证明、可量化的安全性。')]),o(\"h3\",{attrs:{id:\"-6\"}},[e._v(\"治理\")]),o(\"p\",[e._v(\"分布式公共账本应该要有一套章程与治理体系。比特币依靠比特币基金会以及挖矿来协作更新，但是这是一个反应缓慢的治理制度。以太坊在采用硬分叉成 ETH 和 ETC 来解决 The DAO 黑客，这主要是因为之前没有设定社会契约或机制来进行这类决定。\")]),o(\"p\",[e._v(\"Cosmos 枢纽的验证人与委托人可以对提案进行投票，从而改变预先默认设置好的系统参数（比如区块转账费用限制），协作更新，并对可读性的章程进行修订投票，从而治理 Cosmos 枢纽制度。这个章程允许权益相关者聚集到一起，来解决盗窃及漏洞等相关问题（比如 The DAO 事件），并得出更快更明确的解决方案。\")]),o(\"p\",[e._v(\"每个分区也可以制定自己的一套章程及治理机制。比如，Cosmos 枢纽的章程可以设置为强制实现枢纽的不可改变性（不能回滚，除了 Cosmos 枢纽节点产生的漏洞），而每个分区则可设置自己的回滚政策。\")]),o(\"p\",[e._v(\"Cosmos 网络能够在制度不同的分区间实现互操作性，这一点给客户极高的自由度和潜力而无需许可即可实验（新技术）。\")]),o(\"h2\",{attrs:{id:\"-7\"}},[e._v(\"枢纽与分区\")]),o(\"p\",[e._v('这里我们将描述一个全新的去中心化与可扩展性模型。Cosmos 网络通过 Tendermint 机制来运行众多的区块链。虽然现存提案的目标是创建一个包含全球所有交易订单的\"单一区块链\"，但是 Cosmos 允许众多区块链在并行运行的同时，保持可互操作性。')]),o(\"p\",[e._v('在这个基础上，Cosmos 枢纽负责管理称之为“分区”的众多独立区块链（有时也叫做\"分片\"，参考自众所周知的数据库扩展技术\"分片\"）。枢纽上的分片会源源不断地提交最新区块，这一点可以让枢纽同步每一个分区的状态。同样地，每个分区也会和枢纽的状态保持一致（不过分区之间不会同彼此的同步，除非间接通过枢纽来实现）。通过发布默克尔证明来证明消息被接受和发送，来让消息从一个分区传递到另一个分区。这种机制叫做\"区块链间通信\"，或者简称为\"IBC\"机制。')]),o(\"p\",[o(\"img\",{attrs:{src:\"https://raw.githubusercontent.com/gnuclear/atom-whitepaper/master/images/hub_and_zones.png\",alt:\"Figure of hub and zones acknowledgement\"}})]),o(\"p\",[e._v(\"任何分区都可以自行成为枢纽来建立非循环图表，但为了清楚起见，我们只描述这种只有一个枢纽和许多非枢纽的分区这样简单的配置\")]),o(\"h3\",{attrs:{id:\"-8\"}},[e._v(\"枢纽\")]),o(\"p\",[e._v('Cosmos 枢纽是承载多种分布式账本资产的区块链，其中代币可以由个人或分区自己持有。这些代币能够通过特殊的 IBC 数据包，即\"代币数据包\"（coin packet）从一个分区转移到另一个分区。枢纽负责保持各个分区中各类代币总量不变。IBC 代币数据包交易必须由发送人、枢纽及区块接受者执行。')]),o(\"p\",[e._v(\"因为 Cosmos 枢纽在整个系统中扮演着中央代币账本的角色，其安全性极其重要。虽然每个分区可能都是一个 Tendermint 区块链——只需通过 4 个，(或者在无需拜占庭容错共识的情况下更少的验证人来保证安全），但是 Cosmos 枢纽必须通过全球去中心化验证组来保证安全，而且这个验证组要能够承受最严重的攻击，比如区域网络分裂或者由国家发起的攻击。\")]),o(\"h3\",{attrs:{id:\"-9\"}},[e._v(\"分区\")]),o(\"p\",[e._v('Cosmos 分区是独立的区块链，能够和 Cosmos 枢纽进行 IBC 消息交换。从枢纽的角度上看，分区是一种多重资产、动态会员制的多重签名账户，可以通过 IBC 数据包用来发送和接受代币。就像加密币账户一样，分区不能转移超出其持有量的代币，不过可以从其他拥有代币的人那里接收代币。分区可能会被指定为一种或多种代币的\"来源\"，从而赋予其增加代币供应量的权力。')]),o(\"p\",[e._v(\"Cosmos 枢纽的 Atom 或可作为分区验证人连接到枢纽的筹码。虽然在 Tendermint 分叉责任制下，分区出现双重支付攻击会导致 atom 数量减少，但是如果分区中有超过 ⅔ 的选票都出现拜占庭问题的话，那这个分区就可以提交无效状态。Cosmos 枢纽不会验证或执行提交到其他分区的交易，因此将代币发送到可靠的分区间就是用户的责任了。未来 Cosmos 枢纽的管理系统可能会通过改善提案，来解决分区故障问题。比如，在检测到袭击时，可以将有些分区（或全部分区）发起的代币转账将被暂停，实现紧急断路（即暂时中止代币转账）。\")]),o(\"h2\",{attrs:{id:\"ibc\"}},[e._v(\"跨链通信-IBC\")]),o(\"p\",[e._v('现在我们来介绍下枢纽与分区之间通信的方法。假如现在有三个区块链，分别是\"分区 1\"、“分区 2\"以及\"枢纽”，我们想要\"分区 1\"生成一个数据包，通过\"枢纽\"发送给\"分区 2\"。为了让数据包从一个区块链转移到另一个区块链，需要在接收方区块链上发布一个证明，来明确发送方已经发起了一个数据包到指定目的地。接收方要验证的这个证明，必须和发送方区块头保持一致。这种机制就类似与侧链采用的机制，它需要两个相互作用的链，通过双向传送存在证明数据元（交易），来\"知晓\"另一方的情况。')]),o(\"p\",[e._v(\"IBC 协议可以自然定义为两种交易的使用：一种是 IBCBlockCommitTx 交易，这种交易可以让区块链向任何观察员证明其最新区块哈希值；另一种是 IBCPacketTx 交易，这种交易则可以证明某个数据包确实由发送者的应用程序，通过默克尔证明机制（Merkle-proof）传送到了最新区块的哈希值上。\")]),o(\"p\",[e._v(\"通过将 IBC 机制分离成两个单独的交易，即 IBCBlockCommitTx 交易与 IBCPacketTx 交易，我们可以让接收方链的本地费用市场机制，来决定承认哪个数据包，与此同时还能确保发送方的完全自由，让其自行决定能够传出的数据包数量。\")]),o(\"p\",[o(\"img\",{attrs:{src:\"https://raw.githubusercontent.com/gnuclear/atom-whitepaper/master/msc/ibc_without_ack.png\",alt:\"Figure of Zone1, Zone2, and Hub IBC without acknowledgement\"}})]),o(\"p\",[e._v('在上述案例中，为了更新\"枢纽\"上\"分区 1\"的区块哈希（或者说\"分区 2\"上\"枢纽\"的区块哈希），必须将 IBCBlockCommitTx 交易的\"分区 1\"区块哈希值发布到\"枢纽\"上（或者将该交易的\"枢纽\"区块哈希值发布到\"分区 2\"中）。')]),o(\"p\",[e._v(\"_关于两种 IBC 交易类型，详细请参见 \"),o(\"a\",{attrs:{href:\"#ibcblockcommittx\"}},[e._v(\"IBCBlockCommitTx\")]),e._v(\" 和 \"),o(\"a\",{attrs:{href:\"#ibcpacketcommit\"}},[e._v(\"IBCPacketTx\")])]),o(\"h2\",{attrs:{id:\"-10\"}},[e._v(\"用例\")]),o(\"h3\",{attrs:{id:\"-11\"}},[e._v(\"分布式交易所\")]),o(\"p\",[e._v(\"比特币借助大量复制来增加分布式账本的安全性。用类似的方式，我们可以在区块链上运行交易所，来降低其受内部及外部攻击的可能性。我们称之为去中心化交易所。\")]),o(\"p\",[e._v('现今，加密货币社区认为的去中心化交易所基于\"跨链原子事务\"交易（ AXC 交易）。通过 AXC 交易，两条不同链上的两个用户可以发起两笔转账交易，交易在两个账本上要么一起提交执行，或者两个账本都不执行（即交易的原子性）。比如，两位用户可以通过 AXC 交易来实现比特币和以太币之间的交易（或是在不同账本上的任意两种代币），即使比特币和以太坊的区块链之间并没有彼此连接。AXC 交易模式下的交易所用户双方不需要彼此信任，也不用依赖交易匹配服务。其弊端是，交易双方必须同时在线才能进行交易。')]),o(\"p\",[e._v(\"另一种去中心化交易所是进行大量复制的具有独立区块链的分布式交易所。该种交易所的用户可以提交限价订单并关闭他们的计算机，交易可以在用户离线状态下执行。区块链将会代表交易者去完成匹配和交易。\")]),o(\"p\",[e._v('一个中心化的交易所可以构建一个有大交易量的限价交易的买卖盘账目，以此来吸引更多的交易者。在交易所领域，流动性会引发更多流动性，因此在交易所业务中，其具有的网络效应也愈发明显（或者说至少产生了\"赢家通吃\"效应）。目前加密货币交易所 Poloniex 以每 24 小时 2,000 万美元的交易量排名第一， Bitfinex 则每 24 小时 500 万美元的交易额位列第二。在这种强大的网络效应之下，基于 AXC 的去中心化交易所的成交量是不太可能超过中心化交易所。去中心化交易所要想和中心化交易所一争高下，就需要支持以限价订单构成的具有深度的交易买卖盘账目的运行。而只有基于区块链的去中心化交易所可以实现这一点。')]),o(\"p\",[e._v(\"Tendermint 提供的快速交易执行是另一大优势。Cosmos 的内部网络可以在不牺牲一致性的前提下优先快速的确定最终性，来实现交易的快速完成 —— 同时针对交易订单交易，以及 IBC（跨区块链通信）代币与其他网络的交易。\")]),o(\"p\",[e._v(\"综上，根据现有加密货币交易所的情况，Cosmos 的一项重大应用就是去中心化交易所（称为 Cosmos DEX）。其交易吞吐能量和委托延时可以与那些中心化交易所媲美。交易者可以在各方离线的状态下提交限价订单。并且，基于 Tendermint，Cosmos 枢纽以及 IBC 的情况下，交易者可以快速地完成在交易所及其他网络的资金进出。\")]),o(\"h3\",{attrs:{id:\"-12\"}},[e._v(\"作为其他加密货币的纽带\")]),o(\"p\",[e._v(\"特权分区可以作为和其他加密货币挂钩的代币来源。这种挂钩类似 Cosmos 枢纽与分区之间的关系，两者都必须及时更新彼此最新的区块链，从而验证代币已经从一方转移到另一方。Cosmos 网络上挂钩的”桥接分区“要和中心以及其他加密币保持同步。这种间接通过”桥接分区“可以保持枢纽逻辑的简洁。并且不必要了解其他的链上共识战略，如比特币工作量证明挖矿机制。\")]),o(\"h4\",{attrs:{id:\"cosmos-3\"}},[e._v(\"向 Cosmos 枢纽发送代币\")]),o(\"p\",[e._v(\"每个挂钩桥接分区的验证人都会在基于 Tendermint 公式的区块链之上，运行带有特殊的 ABCI 桥接应用程序，但同时也会运行一个原有区块链的“全节点”。\")]),o(\"p\",[e._v(\"在原有区块链挖出新区块时，桥接分区验证人员将通过签署和分享起始点区块链的提示，各自局部视角可以达成一致。当一个桥接分区收到原有区块链的支付时（如在以太坊或比特币等 PoW 机制的链上有足够数目的确认），则在该桥接分区上创建具有该对应账户的余额。\")]),o(\"p\",[e._v(\"就以太坊而言，桥接分区可以和 Cosmos 枢纽共享相同的验证人。以太坊方面（原本区块链），一个桥接合约将允许以太拥有者通过将以太币发送到以太坊的桥接分区的桥接合约上。一旦挂桥接合约接收到以太币，以太币就不能被撤回，除非从桥接分区接收到对应的 IBC 数据包。桥接合约跟随桥接分区的验证组，它可能与 Cosmos 枢纽的验证人组相同。\")]),o(\"p\",[e._v(\"就比特币而言，概念是相似，除了代替一个桥接合约，每个 UTXO 将由一个门限多重签名 P2SH 数据库限制。由于 P2SH 系统的限制，签名者不能与 Cosmos 枢纽的验证人组相同。\")]),o(\"h4\",{attrs:{id:\"cosmos-4\"}},[e._v(\"从 Cosmos 枢纽提出代币\")]),o(\"p\",[e._v(\"桥接分区上的以太币（“桥接以太币”）可以在枢纽间转进，转出，完成传送到特定以太坊提取地址后，转出的“桥接以太币”被彻底删除。一个 IBC 消息可以证明桥接分区上的交易，这个消息将被公布到以太坊桥接合约中，以便以太币被取出。\")]),o(\"p\",[e._v(\"就比特币而言，严谨的交易脚本系统让 IBC 币的镜像转换机制很难实现。每个 UTXO 都有自己的特定的脚本，所以当比特币履约签名者发生变化时，每个 UTXO 都必须迁移到新的 UTXO。一个解决方案是根据需要，压缩和解压缩 UTXO-set，以保持 UTXO 的总数量下降。\")]),o(\"h4\",{attrs:{id:\"-13\"}},[e._v(\"挂钩区完全责任制\")]),o(\"p\",[e._v(\"这类挂钩合约存在风险的风险是，可能会出现恶意的验证人组。如果拜占庭投票权超过 ⅓，就会造成分叉，即从以太坊桥接合约中提取以太币的同时，还能保持桥接分区中的挂钩以太币不变。甚至，如果拜占庭投票权超过 ⅔，可能会有人直接通过脱离原始桥接分区的桥接逻辑，对发送以太币发到桥接合约中的帐户下手，盗取以太币。\")]),o(\"p\",[e._v(\"如果将这个桥接方法完全设计成责任制，就有可能解决这一问题。比如，枢纽及起始点的全部 IBC 包裹可能需要先通过桥接分区的认可，即让枢纽或起始点中的桥接合约对桥接分区的所有状态转换进行有效验证。枢纽及起始点要允许桥接分区的验证人提供抵押物，而侨界合约的代币转出需要延时（且抵押品解绑时间也要足够长），从而让单独的审计人有时间发起任何的质询。我们会把这一系统的设计说明以及执行方式开放，作为未来 Cosmos 改善的提议，以待 Cosmos 枢纽的管理系统审批通过。\")]),o(\"h3\",{attrs:{id:\"-14\"}},[e._v(\"以太坊的扩展\")]),o(\"p\",[e._v(\"众所周知，扩展问题是一直困扰着以太坊的问题。目前以太坊节点会处理节点上每笔交易，并且存储所有的状态\"),o(\"a\",{attrs:{href:\"https://docs.google.com/presentation/d/1CjD0W4l4-CwHKUvfF5Vlps76fKLEC6pIwu1a_kC_YRQ/mobilepresent?slide=id.gd284b9333_0_28\"}},[e._v(\"参考\")]),e._v(\".。\")]),o(\"p\",[e._v(\"Tendermint 提交区块的速度比以太坊工作量证明要快，所以由 Tendermint 共识推动且使用桥接以太币运行的以太坊虚拟机分区能够强化太坊区块链的性能。此外，虽然 Cosmos 枢纽及 IBC 包裹机制不能实现每秒合约逻辑的执行，但是它可以用来协调不同分区中以太坊合约之间的代币流通，通过分片方式为以代币为中心的以太坊扩展奠定基础。\")]),o(\"h3\",{attrs:{id:\"-15\"}},[e._v(\"多用一体化\")]),o(\"p\",[e._v(\"Cosmos 分区可以运行任意的应用逻辑，应用在分区创建时设定好，可通过管理者可以不断更新。这种灵活度使得 Cosmos 分区可以作为其他加密币的挂钩载体，比如以太坊或比特币，并且它还能和这些区块链的衍生品挂钩，利用同样的代码库，而在验证程序及初始分配有所区分。这样就允许多种现有加密币框架得以运行，如以太坊、Zerocash、比特币、CryptoNote 等等，将其同 Tendermint BFT 结合，成为通用网络中性能更优的共识引擎，为平台之间提供更多的交互机会。此外，作为多资产区块链，每笔交易都有可能包含多个输入输出项，其中每个输入项都可以是任意代币，使 Cosmos 直接成为去中心化交易所，当然这里假设交易订单通过其他平台进行匹配。替代方案是，让分区作为分布式容错交易所（包含买卖盘账目），这算是对中心化加密币交易所之上的严格改进——现行交易所在过去时常发生被攻击的事件。\")]),o(\"p\",[e._v(\"分区也可以作为区块链版的企业及政府系统，其原本由一个或多个组织运行的特定服务，现在作为 ABCI 应用在某个分区上运行，从而在不放弃对底层服务控制的前提下，维持公共 Cosmos 网络的安全性及交互性。所以，Cosmos 或可为那些既想使用区块链技术，又不愿彻底放弃控制权给分布式第三方的人，提供绝佳的运行环境。\")]),o(\"h3\",{attrs:{id:\"-16\"}},[e._v(\"缓解网络分区问题\")]),o(\"p\",[e._v(\"有人认为像 Tendermint 这种支持一致性的共识算法有一个重大问题，就是网络分区会导致没有任何一个分区会拥有超过 ⅔ 的投票权（比如超过 ⅓ 投票权在线下），这会中断共识。而 Cosmos 架构可以缓解这个问题，它可以使用全球中心，同时，各分区实行地区自治，然后让每个分区的投票权按照正常的地域位置进行分配。如，一般范例就有可能是针对个别城市或地区的，让他们各自运行自己分区的同时，还能共享共同的枢纽（比如 Cosmos 枢纽），并且在临时的网络分区导致的中断期间，也可以继续维持地区自治活动。注意，这样一来在设计稳健的联邦式容错系统过程中，就可以去考虑真实的地理、政治及网络拓扑的特征了。\")]),o(\"h3\",{attrs:{id:\"-17\"}},[e._v(\"联邦式名称解析系统\")]),o(\"p\",[e._v(\"NameCoin 是首批试图通过比特币技术解决名称解析问题的区块链之一。不过，这个方案存在一些不足。\")]),o(\"p\",[e._v(\"例如，我们可以通过 Namecoin 来验证@satoshi（聪）这个号是在过去某个时间点用特定公钥进行注册的。但是，该公钥是否更新过我们就不得而知了，除非将该名称最后一次更新之前的所有全部下载。这一点是比特币 UTXO 交易模式中默克尔化模型的局限性导致的，这类模型中只有交易（而非可变的应用状态）会以默克尔化加入到区块哈希中。它让我们得在之后用更新证明名称的存在，而非不存在。因此，我们必须依靠全节点才能明确这个名称的最近的值，或者花费大量资源下载整个区块链。\")]),o(\"p\",[e._v(\"即使在 NameCoin 上运用默克尔化的搜索树，其工作量证明的独立性还是会导致轻客戸端的验证出现问题。轻客戸端必须下载区块链中所有区块头的完整备份（或者至少是自其最后的名称更新的所有区块头）。这意味着带宽需要随着时间做线性的扩展。 \"),o(\"a\",{attrs:{href:\"https://en.bitcoin.it/wiki/Thin_Client_Security\"}},[e._v(\"21\")]),e._v(\"此外，在工作量证明制度使区块链上的名称更改需要等额外的工作量证明验证确认才能进行，它在比特币上可能要花费一个小时。\")]),o(\"p\",[e._v(\"有了 Tendermint，我们只需用到由法定数量验证人签署（通过投票权）的区块哈希，以及与名称相关的当前值的默克尔证明。这点让简易、快速、安全的轻客戸端名称值验证成为可能。\")]),o(\"p\",[e._v('在 Cosmos 中，我们可以利用这个概念并延伸。每一个在 Cosmos 上的名称注册都能有一个相关的最高级别域名（TLD），比如\".com\"或者\".org\"等，而且每个名称注册分区都有自己的管理和登记规则。')]),o(\"h2\",{attrs:{id:\"-18\"}},[e._v(\"发行与激励\")]),o(\"h3\",{attrs:{id:\"atom\"}},[e._v(\"Atom 代币\")]),o(\"p\",[e._v(\"Cosmos 枢纽是多资产分布式账本，它有自己的代币，是 Atom 。Atom 是 Cosmos 枢纽唯一的权益代币。Atom 是持有人投票、验证或委托给其他验证人的许可证明，就像以太坊上的以太币一样，Atom 也可以用来支付交易费以减少电子垃圾。额外的通胀 Atom 和区块交易费用就作为激励分给验证人及委托验证人。\")]),o(\"p\",[o(\"code\",{pre:!0},[e._v(\"BurnAtomTx\")]),e._v(\"交易可以用来恢复储蓄池中任意比例的代币。\")]),o(\"h4\",{attrs:{id:\"-19\"}},[e._v(\"众筹\")]),o(\"p\",[e._v(\"创世块上的 Atom 代币及验证人的初次分发是 Cosmos 众售参与者持有 75%，预售参与者持有 5%，Cosmos 网络基金会持有 10%，ALL IN BITS, 集团持有 10%。从创世块开始，Atom 总量的 1/3 将作为奖励发放给每年担保持有的验证人以及委托人。\")]),o(\"p\",[e._v(\"更多细节见 \"),o(\"a\",{attrs:{href:\"https://github.com/cosmos/cosmos/blob/master/PLAN.md\"}},[e._v(\"Cosmos Plan\")])]),o(\"h3\",{attrs:{id:\"-20\"}},[e._v(\"验证人的数量限制\")]),o(\"p\",[e._v(\"与比特币或其他工作量证明区块链不同的是, 由于通信的复杂性增加, Tendermint 区块链会随着验证人的增加而变慢。幸运的是, 我们可以支持足够多的验证人来实现可靠的全球化分布式区块链， 并具有非常快的交易确认时间。 而且随着带宽、存储和并行计算容量的增加, 我们将来能够支持更多的验证人。\")]),o(\"p\",[e._v(\"在创世日, 验证人的最大数量将设置为 100, 这个数字将以 13% 的速度增长 10 年, 最终达到 300 位。\")]),o(\"pre\",{pre:!0},[o(\"code\",{pre:!0,attrs:{\"v-pre\":\"\"}},[e._v(\"Year 0: 100\\nYear 1: 113\\nYear 2: 127\\nYear 3: 144\\nYear 4: 163\\nYear 5: 184\\nYear 6: 208\\nYear 7: 235\\nYear 8: 265\\nYear 9: 300\\nYear 10: 300\\n...\\n\")])]),o(\"h3\",{attrs:{id:\"-21\"}},[e._v(\"成为创世日后的验证人\")]),o(\"p\",[e._v(\"Atom 持有者可以通过签署和提交 \"),o(\"code\",{pre:!0},[e._v(\"BondTx\")]),e._v(\" 交易成为验证人。抵押的 atom 数量不能为零。任何人任何时候都成为验证人, 除非当前验证人组的数量超过了最大值。在这种情况下, 只有当持有 atom 的数量大于现有验证人中持有有效 atom 数量的最少者, 该交易才有效, 其中有效 atom 包括受委托的 atom。当一个新的验证人以这种方式替换现有的验证人时, 现有的验证人将离线， 其所有的 atom 和受委托的 atom 进入解绑状态。\")]),o(\"h3\",{attrs:{id:\"-22\"}},[e._v(\"对验证人的惩罚\")]),o(\"p\",[e._v(\"对于任何有意或无意的偏离认可协议的验证人, 必须对其施加一定的惩罚。有些证据立即可予受理, 比如在同样高度和回合的双重签名, 或违反 “预投票锁定” (Tendermint 协商一致议定书的规则)。这样的证据将导致验证人失去其良好的声誉, 其绑定的 atom 以及在储备池中的比例份额 – 统称为 “权益” – 将被大幅削减。\")]),o(\"p\",[e._v(\"有时, 由于区域网络中断、电源故障或其他原因, 验证人将不可用。如果在过去任意时间点的 \"),o(\"code\",{pre:!0},[e._v(\"ValidatorTimeoutWindow\")]),e._v(\" 块中, 验证人的提交投票不包括在区块链中超过 \"),o(\"code\",{pre:!0},[e._v(\"ValidatorTimeoutMaxAbsent\")]),e._v(\" 次, 该验证人将离线, 并减少 \"),o(\"code\",{pre:!0},[e._v(\"ValidatorTimeoutPenalty\")]),e._v(\" (默认 1%) 的权益。\")]),o(\"p\",[e._v(\"一些 “恶意” 行为在区块链上并没有产生明显的证据。在这些情况下, 如果存在多数的协商一致, 则验证人可以在带外协调,强制将这些恶意验证人超时。\")]),o(\"p\",[e._v(\"如果 Cosmos 枢纽 因为超过 ⅓ 的投票权离线而出现了中止情况，或者说超过 ⅓ 的投票权审查到进入区块链的恶意行为，这时候枢纽就必须借助硬分叉重组协议来恢复。（详见“分叉与审查攻击”）\")]),o(\"h3\",{attrs:{id:\"-23\"}},[e._v(\"交易费用\")]),o(\"p\",[e._v(\"Cosmos 枢纽验证人可以接受任何种类的代币或组合作为处理交易的费用。每个验证人可自行设置兑换率， 并选择其想要的交易, 只要不超过 \"),o(\"code\",{pre:!0},[e._v(\"BlockGasLimit\")]),e._v(\", 每隔 \"),o(\"code\",{pre:!0},[e._v(\"ValidatorPayoutPeriod\")]),e._v(\" (默认为 1 小时) 时间会根据权益相关人绑定的 Atom 比例进行分配。\")]),o(\"p\",[e._v(\"在所收取的交易费用中, \"),o(\"code\",{pre:!0},[e._v(\"ReserveTax\")]),e._v(\" (默认 2%) 将存入储备池来增加储备量, 增加 Cosmos 枢纽的安全性和价值。这些资金也可以按照治理系统的决策进行分配。\")]),o(\"p\",[e._v(\"将投票权委托给其他验证人的 Atom 持有人会支付一定佣金给委托方，而这笔费用可以由每个验证人进行设置。\")]),o(\"h3\",{attrs:{id:\"-24\"}},[e._v(\"激励黑客\")]),o(\"p\",[e._v(\"Cosmos 枢纽的安全取决于底层验证人的安全性和委托人的委托选择。为了鼓励发现和早期报告发现的漏洞, Cosmos 枢纽鼓励黑客通过 \"),o(\"code\",{pre:!0},[e._v(\"ReportHackTx\")]),e._v(\" 交易发布成功的漏洞, 说, “这个验证人被入侵了，请把赏金发送到这个地址”。这种情况下, 验证人和委托人将挂起闲置, 每个人 \"),o(\"code\",{pre:!0},[e._v(\"HackPunishmentRatio\")]),e._v(\" (默认 5%) 的 atom 将被削减, \"),o(\"code\",{pre:!0},[e._v(\"HackRewardRatio\")]),e._v(\" (默认 5%) 的 atom 将发送到黑客的赏金地址作为奖励。验证人必须使用其备份密钥来恢复剩余的 atom。\")]),o(\"p\",[e._v(\"为了防止这一特性被滥用于转移未授权的 atom, 在 \"),o(\"code\",{pre:!0},[e._v(\"ReportHackTx\")]),e._v(\" 前后，Atom 的比例（授权的与未授权的） 将保持不变, 而黑客的赏金将包括一些未授权的 atom (如果有的话)。\")]),o(\"h3\",{attrs:{id:\"-25\"}},[e._v(\"治理规范\")]),o(\"p\",[e._v(\"Cosmos 枢纽是由一个分布式组织管理的, 需要一个明确的治理机制, 以协调对区块链的各种变化, 如系统的参数变量, 以及软件升级和宪法修订.\")]),o(\"p\",[e._v(\"所有验证人负责对所有提案进行表决。如果未能及时对提案进行表决, 将导致验证人被自动停用一段时间。 这段时间被称为 \"),o(\"code\",{pre:!0},[e._v(\"AbsenteeismPenaltyPeriod\")]),e._v(\" (默认 1 周)。\")]),o(\"p\",[e._v(\"委托人自动继承其委托的验证人的投票权。这一投票可以被手动覆盖掉。而未绑定的 Atom 是没有投票权的。\")]),o(\"p\",[e._v(\"每个提案都需要 \"),o(\"code\",{pre:!0},[e._v(\"MinimumProposalDeposit\")]),e._v(\" 代币的保证金, 这可能是一个或多个代币 (包括 atom) 的组合。对于每项提案, 投票者可以投票表决取走保证金。如果超过半数的投票者选择取走保证金 (例如, 因为提案是垃圾信息), 那么保证金就会存入储备池, 除了被燃烧的 atoms。\")]),o(\"p\",[e._v(\"对于每项提案, 投票人可以选择下列方案:\")]),o(\"ul\",[o(\"li\",[e._v(\"同意\")]),o(\"li\",[e._v(\"强烈同意\")]),o(\"li\",[e._v(\"反对\")]),o(\"li\",[e._v(\"强烈反对\")]),o(\"li\",[e._v(\"弃权\")])]),o(\"p\",[e._v(\"决定采纳（或不采纳）提案需要严格的多数投“同意”或“强烈同意”（或者“反对”及“强烈反对”），但是超过 1/3 的人投“强烈反对”或“强烈支持”的话就可以否决大多数人的决定。如果大多数人票被否决，那么他们每个人都会失去 \"),o(\"code\",{pre:!0},[e._v(\"VetoPenaltyFeeBlocks\")]),e._v(\" (默认是一天的区块值 ，税费除外) 作为惩罚，而否决大多数决定的那一方还将额外失去 \"),o(\"code\",{pre:!0},[e._v(\"VetoPenaltyAtoms\")]),e._v(\" 默认为 0.1%）的 Atom 作为惩罚。\")]),o(\"h3\",{attrs:{id:\"-26\"}},[e._v(\"参数变更提案\")]),o(\"p\",[e._v(\"这里定义的任何参数都可在 \"),o(\"code\",{pre:!0},[e._v(\"ParameterChangeProposal\")]),e._v(\" 通过后改变。\")]),o(\"h3\",{attrs:{id:\"-27\"}},[e._v(\"赏金提案\")]),o(\"p\",[e._v(\"通过 \"),o(\"code\",{pre:!0},[e._v(\"BountyProposal\")]),e._v(\" 后， Atom 可以增发和预留储备池资金作为赏金。\")]),o(\"h3\",{attrs:{id:\"-28\"}},[e._v(\"文本提案\")]),o(\"p\",[e._v(\"所有其他提案，比如用来更新协议的提案，都会通过通用的 TextProposal 来协调。\")]),o(\"h2\",{attrs:{id:\"-29\"}},[e._v(\"路线图\")]),o(\"p\",[e._v(\"详见\"),o(\"a\",{attrs:{href:\"https://github.com/cosmos/cosmos/blob/master/PLAN.md\"}},[e._v(\"计划\")]),e._v(\".\")]),o(\"h2\",{attrs:{id:\"-30\"}},[e._v(\"相关工作\")]),o(\"p\",[e._v(\"过去几年涌现了很多区块链共识及扩展性方面的创新。在这一部分中将挑选一些重要的创新进行简单分析。\")]),o(\"h3\",{attrs:{id:\"-31\"}},[e._v(\"共识系统\")]),o(\"h4\",{attrs:{id:\"-32\"}},[e._v(\"经典拜占庭容错\")]),o(\"p\",[e._v(\"二十世纪八十年代早期就开始研究存在恶意参与者的共识机制，当时 Leslie Lamport 创造了”拜占庭容错”这个词，用来指那些图谋不轨参与者做出的恶意的行为，与”死机故障”不同，后者只是处理过程崩溃而已。早期针对同步网络也探索出了一些解决方案，网络信息滞后有一个上限，但实际使用是在高度受控的环境下进行，比如精密飞行仪器以及使用原子钟同步的数据中心。直到九十年代后期，实用拜占庭容错（ Practical Byzantine Fault Tolerance ,PBFT）\"),o(\"a\",{attrs:{href:\"http://pmg.csail.mit.edu/papers/osdi99.pdf\"}},[e._v(\"[11]\")]),e._v(\"才作为有效的、部分同步的共识算法被逐步推广。它可以容忍 ⅓ 参与者有恶意行为。PBFT 成为标准算法，催生了各种版本，包括最近由 IBM 提出并使用于 Hyperledger 超级账本中的算法。\")]),o(\"p\",[e._v(\"和 PBFT 相比，Tendermint 共识的主要好处在于其改善且简化了的底层结构，其中有些是遵循了区块链典范的结果。Tendermint 中，区块必须按顺序提交，这就消除复杂性，节省 PBFT 中状态变化相关的通信开支。在 Cosmos 和众多加密币中，如果区块 N 本身没有提交，那么就不能让它之后的区块 N+i（i>=1）提交。如果是通信带宽限制导致了区块 N 未提交到 Cosmos Zone 上，那么将通信带宽用于分享选票给区块 N+i 是一种浪费。如果由于网络分区或者节点掉线导致的区块 N 未提交，那么 N+i 就无论如何也不能提交。\")]),o(\"p\",[e._v(\"此外，将交易打包成块可以用默克尔哈希纪录应用程序的状态，而不是用 PBFT 检查机制进行定时摘要。这可以让轻客戸端更快的提交交易证明，以及更快的跨链通信。\")]),o(\"p\",[e._v(\"Tendermint BFT 中也优化了很多 PBFT 特性以外的功能。比如，验证人提交的区块被分割多个部分，对其默克尔化后，然后在节点间广播。这种方式可以提高其广播性能（具体请查看 LibSwift \"),o(\"a\",{attrs:{href:\"http://www.ds.ewi.tudelft.nl/fileadmin/pds/papers/PerformanceAnalysisOfLibswift.pdf\"}},[e._v(\"19\")]),e._v(\"）。而且，Tendermint BFT 不会对点对点连接做任何假设，只要点对点间的网络不断开，那么它就能正常运行。\")]),o(\"h4\",{attrs:{id:\"bitshare\"}},[e._v(\"BitShare 委托权益\")]),o(\"p\",[e._v(\"BitShares \"),o(\"a\",{attrs:{href:\"https://bitshares.org/technology/delegated-proof-of-stake-consensus/\"}},[e._v(\"[12]\")]),e._v(\"不是第一个采用权益证明机制（proof-of-stake,PoS）的区块链，但是其对 PoS 在区块链上的研究与推进做出了巨大的贡献，尤其是在 DPoS，即受委托权益证明方面。在 BitShares 中，相关方选择”见证者”负责提交交易顺序并提交；相关方选择”委托人”负责协调软件更新与参数变化。尽管 BitShare 在理想环境下能达到很高的性能：100k tx/s，1 秒的滞后。每一块只有一个单独的签名，得到交易的最终性的时间比区块时间略长。一个标准的协议仍在开发中。利益相关者可以每天去除或者替换有恶意行为的验证人，但是不同于 Tendermint PoS 的保证金机制，BitShares 没有要求验证人或者代理人的提交押金，如果发生双花攻击的话，押金不会被削减。\")]),o(\"h4\",{attrs:{id:\"stellar\"}},[e._v(\"Stellar\")]),o(\"p\",[e._v(\"Stellar \"),o(\"a\",{attrs:{href:\"https://www.stellar.org/papers/stellar-consensus-protocol.pdf\"}},[e._v(\"[13]\")]),e._v(\"是以 Ripple 推行的解决方案为基础，它优化了联邦拜占庭协议模型，其中参与共识过程的并不构成一个固定的全局过程。 相反，每个进程节点组织一个或多个“仲裁片”，每个“仲裁片”构成一组可信进程。 Stellar 中的“法定人数”被定义为一组包含至少个个节点的一个仲裁片。从而可达成一致。\")]),o(\"p\",[e._v(\"恒星机制的安全性依赖于任何两个仲裁的交集都是非空的假设，同时，节点的可用性要求至少一个“仲裁片”完全由诚实节点组成。这就需要在“法定人数”的大小上作出妥协：人数过少难以获得共识，人数过多则难以信任所有人。可能难以平衡而不对信任做出重大假设。 除此之外，节点必须维护一定数量的仲裁片以获得足够的容错能力（或者任何“完整节点”，大部分结果的依赖），并且提供一种层级化的配置策略，类似于边界网关协议（Border Gateway Protocol,BGP）。BGP 被互联网服务供应商（Internet Service Provider，ISP）用来建立全球路由表，也被浏览器用来管理传输层安全协议（Transport Layer Security，TLS）证书。他们都因为不安全而臭名昭着。\")]),o(\"p\",[e._v(\"对于 Stellar 论文中基于 Tendermint 的 PoS 批评可以通过本文描述的代币策略来缓解。本文提出了名为 \"),o(\"em\",[e._v(\"atom\")]),e._v(\" 的新的代币，它代表未来交易过程中产生的费用和奖励。 基于 Tendermint PoS 的优势在于其原理相对简单，同时仍可充分保证和证明安全性。\")]),o(\"h4\",{attrs:{id:\"bitcoinng\"}},[e._v(\"BitcoinNG\")]),o(\"p\",[e._v(\"BitcoinNG 是对比特币的改进，允许垂直扩展，比如增加块的大小而避免带来负面的经济后果，例如对矿工造成的影响严重不成比例。 这种改进是通过将 leader 选举与交易广播分开来实现的：leader 首先通过“微块 micro-blocks”的 PoW 选举，然后 leader 能够广播交易直至下一个新的“微块”。 这减少了赢得 PoW 比赛所需的带宽要求，使矿主竞争更公平，并通过允许最后一名矿工提交微块以加快交易提交频率。\")]),o(\"h4\",{attrs:{id:\"casper\"}},[e._v(\"Casper\")]),o(\"p\",[e._v(\"Casper \"),o(\"a\",{attrs:{href:\"https://blog.ethereum.org/2015/08/01/introducing-casper-friendly-ghost/\"}},[e._v(\"[16]\")]),e._v(\"是以太坊提出的 PoS 共识算法。 它的主要操作模式是“预测押注”的一致。 通过让验证者基于他们目前看到的其他投注来迭代地下注他们认为哪个块将提交入区块链。最终性可以立即实现。\")]),o(\"p\",[o(\"a\",{attrs:{href:\"https://blog.ethereum.org/2015/12/28/understanding-serenity-part-2-casper/\"}},[e._v(\"链接\")]),e._v(\". 这是 Casper 团队研究的一个热点领域。 挑战在于构建一个可以证明是一个演化稳定策略的投注机制。 与 Tendermint 相比，Casper 的主要优势可能在于提供“可用性超越一致性” —  达成共识不需要超过 50％的投票权  —  可能是以提交速度或实现复杂性为代价的。\")]),o(\"h3\",{attrs:{id:\"-33\"}},[e._v(\"水平扩展\")]),o(\"h4\",{attrs:{id:\"interledger\"}},[e._v(\"Interledger 协议\")]),o(\"p\",[e._v(\"Interledger 协议（The Interledger Protocol，ILP）\"),o(\"a\",{attrs:{href:\"https://interledger.org/rfcs/0001-interledger-architecture/\"}},[e._v(\"[14]\")]),e._v(\"不是一种严格的扩展方案。 它通过一个松散耦合的双边关系网络，提供一种指定的跨不同账本系统交互操作。像闪电网络一样，ILP 的目的是实现支付，但是它特别关注跨账本类型的支付，并扩展原子事务的处理机制，使得事务的处理不仅支持哈希锁，而且还包括法定人数的公证人（称为原子运输协议）。 后者在账本间交易中实施原子性的机制与 Tendermint 的轻客户 SPV 机制类似，因此比较 ILP 和 Cosmos / IBC 之间的区别是有必要的，具体见下文。\")]),o(\"p\",[e._v(\"1.ILP 不支持连接器公证员的变更，也不允许公证员之间有灵活的权重。 另一方面，IBC 是专门为区块链设计的，验证人可以拥有不同的权重，并且随着区块链的发展，成员可以随时更改。\")]),o(\"p\",[e._v(\"2.与闪电网络一样，ILP 中的接收人必须在线才能向发起人发送确认。 在 IBC 代币传输中，接收者所在区块链的验证人集合负责提供确认，而不是接收用户本人。\")]),o(\"p\",[e._v(\"3.最大的不同在于 ILP 连接器不需要负责对支付状态保持权威性，然而在 Cosmos 中，hub 的验证人负责 IBC 代币传输状态和每个 zone 内持有代币数量的权威性。允许从 zone 之间的安全地不对称地交换代币是本质的创新。在 cosmos 中的 ILP 连接器可以看作是一个持久和最安全的区块链分类账：cosmos hub。\")]),o(\"p\",[e._v(\"4.ILP 内的跨账本支付需要一个交易所的指令集的支持。因为不存在从一个分类账到另一个分类账不对称的代币转移，只能做到市场等价物的转移。\")]),o(\"h4\",{attrs:{id:\"-34\"}},[e._v(\"侧链\")]),o(\"p\",[e._v(\"Sidechains \"),o(\"a\",{attrs:{href:\"https://blockstream.com/sidechains.pdf\"}},[e._v(\"[15]\")]),e._v(\"是一种通过使用与比特币区块链“双向挂钩”替代区块链来扩展比特币网络性能的机制。（双向挂钩相当于桥接，在 cosmos 中被称为“桥接”与市场挂钩区分）。侧链使得比特币可以方便的在比特币区块链和侧链间移动，并允许在侧链上实验新功能。在 Cosmos Hub 中，侧链和比特币是彼此的轻客户端，在比特币区块链和侧链间移动时使用 SPV 证明。当然，由于比特币使用 PoW，以比特币为中心的侧链遭受许多由于 PoW 作为共识机制的引起的问题和风险。而且，这是一个比特币利益最大化的解决方案，并不像 Cosmos 那样本地支持各种代币和 zone 间网络拓扑结构。但是，双向挂钩的核心机制原则上与 Cosmos 所采用的机制相同。\")]),o(\"h4\",{attrs:{id:\"-35\"}},[e._v(\"以太坊扩展性的努力\")]),o(\"p\",[e._v(\"以太坊目前正在研究许多不同的战略，将以太坊区块链的状态分区化，以解决可扩展性的需求。 这些努力的目标是在共享状态空间之上，维持当前以太坊虚拟机提供抽象层。 目前，多项研究工作正在进行。\"),o(\"a\",{attrs:{href:\"https://github.com/ethereum/EIPs/issues/53\"}},[e._v(\"[18]\")]),o(\"a\",{attrs:{href:\"http://vitalik.ca/files/mauve_paper.html\"}},[e._v(\"[22]\")])]),o(\"h5\",{attrs:{id:\"cosmos-vs-ethereum-20-mauve\"}},[e._v(\"Cosmos vs Ethereum 2.0 Mauve\")]),o(\"p\",[e._v(\"Cosmos 和 Ethereum 2.0 Mauve \"),o(\"a\",{attrs:{href:\"http://vitalik.ca/files/mauve_paper.html\"}},[e._v(\"[22]\")]),e._v(\" 有不同的设计理念。\")]),o(\"ul\",[o(\"li\",[e._v(\"Cosmos 是针对代币儿 Mauve 是关于扩大计算能力。\")]),o(\"li\",[e._v(\"Cosmos 不仅限于 EVM, 所以即使不同的 VM 也可以交互。\")]),o(\"li\",[e._v(\"Cosmos 让 zone 的创建者决定验证人。\")]),o(\"li\",[e._v(\"任何人都可以在 Cosmos 中建立新的 zone（除非管理者另做决定）。\")]),o(\"li\",[e._v(\"hub 与 zone 的失效隔离，所以全局的代币不变量可以保持。\")])]),o(\"h3\",{attrs:{id:\"-36\"}},[e._v(\"普遍扩展\")]),o(\"h4\",{attrs:{id:\"-37\"}},[e._v(\"闪电网络\")]),o(\"p\",[e._v(\"闪电网络被设计成一种代币传输网络，在比特币区块链（及其他公有区块链）上一层运行，通过把大部分交易从共识分类账之外转移到所谓的“ 付款渠道“。 这通过链上加密货币脚本来实现，这些脚本使双方能够进入双方持有的状态化合同，通过共享数字签名来更新状态，并且在合同结束后最终通过在区块链上发布证据，这种机制首先受到跨链原子互换交易的欢迎。 通过与多方开通支付渠道，闪电网络的参与者可以成为集中点，为其他人的支付提供路由，从而导致支付渠道网络的完全联通，其代价是绑定在支付渠道上的资金。\")]),o(\"p\",[e._v(\"虽然闪电网络也可以轻松地跨越多个独立的区块链，并借助交易市场实现价值转移，但它不能实现从一个区块链到另一个区块链的非对称代币交易。 这里描述的 Cosmos 网络的主要优点是实现直接的代币交换。 也就是说，我们希望支付渠道和闪电网络将会与我们的代币传输机制一起被广泛采用，从而节省成本和保护隐私。\")]),o(\"h4\",{attrs:{id:\"-38\"}},[e._v(\"隔离验证人\")]),o(\"p\",[e._v(\"隔离见证是一个比特币改进建议 BIP，\"),o(\"a\",{attrs:{href:\"https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki\"}},[e._v(\"链接\")]),e._v(\" 旨在将每块交易吞吐量提高 2 倍或 3 倍，同时使新节点能更快同步区块。 这个解决方案的亮点在于它如何在比特币当前协议的局限下，允许软分叉升级（例如，具有旧版本软件的客户端将在升级后仍可继续运行）。 Tendermint 作为一个新的协议没有设计的限制，所以它具有不同的扩展优先级。 TendermintBFT 的循环算法，主要基于加密签名而不是采矿，这种算法允许通过多个并行区块链进行水平扩展，而更常规、更频繁的区块提交也允许垂直扩展。\")]),o(\"h2\",{attrs:{id:\"-39\"}},[e._v(\"附录\")]),o(\"h3\",{attrs:{id:\"-40\"}},[e._v(\"分叉问责制\")]),o(\"p\",[e._v(\"经过精心设计的共识协议应该能够在超出容错能力或者共识出错的情况下为系统提供一定的保障。这在能够通过拜占庭行为获取实质经济回报的金融系统中显得尤为必要。\"),o(\"em\",[e._v(\"分叉问责制\")]),e._v(\" 就属于这种非常重要的保障机制，这种制度会使一个导致共识出错的进程（例如使协议客户端开始接受不同值——即分叉）被识别出来，并且根据协议规则对其进行惩罚，甚至将其移送至司法系统处置。但当司法系统不可靠或者诉讼费极其昂贵时，为了让验证人们都参与到这个机制当中，该制度会强制要求他们建立安全保证金，一旦检测到恶意行为，那么这些保证金将会被罚没或者削减\"),o(\"a\",{attrs:{href:\"https://blog.ethereum.org/2014/01/15/slasher-a-punitive-proof-of-stake-algorithm/\"}},[e._v(\"[10]\")]),e._v(\".\")]),o(\"p\",[e._v(\"注意这与比特币有所不同，由于网络非同步与局部哈希碰撞的概率特性，比特币的分叉是定期出现的。因为在很多情况下，恶意分叉与非同步引起的分叉是无法分辨的，除非让矿工为挖到的孤立区块支付隐性的机会成本，否则比特币就很难准确地执行分叉问责制。\")]),o(\"h3\",{attrs:{id:\"tendermint-2\"}},[e._v(\"Tendermint 共识\")]),o(\"p\",[e._v(\"我们把投票阶段分为 \"),o(\"em\",[e._v(\"预投票\")]),e._v(\" 和 \"),o(\"em\",[e._v(\"预提交\")]),e._v(\" 两个阶段。一个投票可以是用于特定区块，也可以用于 \"),o(\"em\",[e._v(\"Nil\")]),e._v(\"。我们把同一轮超过 ⅔ 的单个区块的预投票总和称为 \"),o(\"em\",[e._v(\"Polka\")]),e._v(\" ，把同一轮超过 ⅔ 的单个区块的预提交总和称为 \"),o(\"em\",[e._v(\"Commit\")]),e._v(\"。如果在同一轮中对 Nil 的预提交超过 ⅔，他们就进入到下一轮中。\")]),o(\"p\",[e._v(\"注意到协议中的严格的确定性会引发一个弱同步假设，因为错误的发起者必须被检测到并将其略过。验证人们在为 Nil 预投票之前会等待一段时间，称之为超时提议，这个超时提议的 hi 等待时间也会随着每一轮的进行而递增。每一轮的进行都是完全不同步的，在这个过程中，只有当验证人收听到超过 ⅔ 的网络投票才能进入到下一轮中。实际上，它需要极其强大的阻碍才能阻挠这个弱同步假设（导致无达成共识，无法提交区块），而且通过每个验证人超时提议（TimeoutPropose）的随机值还可更加提高这么做的难度。\")]),o(\"p\",[e._v(\"另一个附加的约束条件，或者叫锁定条例，它能确保网络最终在每个高度只提交一个区块。任何试图在给定高度提交超过一个区块的恶意行为都会被识别出来。首先，一个区块的预提交必须被认为是正当的，并且以 Polka 的形式提交。如果验证人已经准备在 R_1 轮中预提交一个区块，我们称他们锁定了这个区块，并且然后用于验证 R_2 轮新预提交动作的 Polka 必须进入 R_polka 轮，其中 R_1 < R_polka <= R_2。其次，验证人们必须为他们锁定的区块提议并且（或者）预投票。这两个条件共同作用，确保了验证人在对其正当性没有充分论证的情况下不能进行预提交操作，并且保证已经完成预提交的验证人不能再为其他东西的预提交贡献证明投票。这样不但可以保证共识算法的安全性，还能保证它的活跃度。\")]),o(\"p\",[e._v(\"关于这一协议的全部细节参考\"),o(\"a\",{attrs:{href:\"https://github.com/tendermint/tendermint/wiki/Byzantine-Consensus-Algorithm\"}},[e._v(\"这里\")]),e._v(\".\")]),o(\"h3\",{attrs:{id:\"tendermint-3\"}},[e._v(\"Tendermint 轻客户端\")]),o(\"p\",[e._v(\"因为生成侧链（一个分叉）意味着至少 ⅓ 的担保权益被罚没，Tendermint 权益证明（Tendermint-PoS）取消了同步所有区块头的要求。当然，罚没保证金也是需要有人共享分叉证据的，所以轻客戸端就要存储任何它见证的区块哈希提交。另外，轻客戸端可以定期地与验证人组的改变保持同步，以避免出现远程攻击（但是其他解决方案也具有可能性）。\")]),o(\"p\",[e._v(\"与以太坊类似，Tendermint 能够让应用程序在每个区块中嵌入一个全局默克尔根的哈希值，可以简单方便的验证的状态查询，比如查询账户余额、在智能合约中的值，或者未使用交易输出（UTXO）的存在，具体由应用程序的特性决定。\")]),o(\"h3\",{attrs:{id:\"-41\"}},[e._v(\"远程攻击的防御\")]),o(\"p\",[e._v('假设有一个足够有弹性的广播网络采集与一组静态验证人组存在，那么任何区块链分叉都可以被检测到，而且发起攻击的验证人提交的保证金会被罚没。这个由 Vitalik Buterin 在 2014 年首次提出的新方法，解决了其他权益证明加密货币的\"没有任何相关权益\"问题（详见 '),o(\"a\",{attrs:{href:\"#related-work\"}},[e._v(\"相关工作部分\")]),e._v(\"）。但由于验证人组必须是能够变化的，在较长的时间段内最初的一些验证人会解除 j 押金绑定，这就使他们可以自由地从创世区块中创建新链，并且因为他们不再有被锁定的保证金，他们将不需要为这个行为支付任何费用。这类攻击被称为远程攻击（LRA），与短程攻击相比，后者对处在押金绑定中的验证人发起的分叉是可以对其进行惩罚的（假设有类似 Tendermint 共识这样的分叉问责制拜占庭容错算法）。所以远程攻击经常被认为是对权益证明机制的一种危险打击。\")]),o(\"p\",[e._v('幸运的是，远程攻击（LRA）可以用以下的途径来缓解。第一，对于解除绑定的验证人而言（取回抵押保证金并且不再从参与共识中获取费用），保证金在一定时间内不能转移，也可以称其为\"解绑周期\"，这个周期可能长达数周或数月。第二，对于轻客户端的安全性而言，其首次连接到网络时必须根据可信源验证最新的一个区块哈希或者多个最好的区块哈希。这种情况有时被称为\"弱主观性\"。最后，为了保证安全，必须与最新的验证人组进行频繁的同步，时长与解绑周期一致。这样就确保了轻客戸端在因验证人解绑资金而失去任何权益之前，知道验证人组的变化情况，否则解绑的验证人就会在其绑定的高度后面开始创建新区块来实施远程攻击，以此来欺骗客户端（假设它可以控制足够多的早期私钥）。')]),o(\"p\",[e._v(\"注意到用这样的方式来对抗远程攻击（LRA）需要对工作量证明（proof-of-work）的原始安全模块进行彻底检查。在工作量证明中（PoW），一个轻客户端可以通过在每一个区块头中运行工作量证明，以此简便地在任何时候与可信任的创始区块的当前高度进行同步。但是，为了对抗远程攻击（LRA），我们需要轻客戸端定期上线追踪验证人组的变动，其中在首次上线时必须格外仔细地根据可靠源来验证从网络采集的信息。诚然，后面这个要求和比特币类似，其协议和软件也必须从可靠源获得。\")]),o(\"p\",[e._v(\"以上这些为了防止远程攻击的方法，比较好地适用于由 Tendermint 驱动下的区块链验证人节点以及全节点，因为这些节点需要保持与网络的连接。这些方法同样适用于希望频繁地与网络同步的轻客户端。但是，对于那些不希望频繁接入互联网或者区块链网络的轻客户端来说，还有另一种方法可以解决远程攻击的问题。非验证人节点可以在很长的解绑期内（比如比验证人的解绑期更久）使用代币作为保证金，并且为轻客戸端提供二级证明当前有效性以及过去区块哈希的解决方案。虽然这些代币对于区块链共识的安全性并没有价值，不过他们还是可以为轻客戸端提供强大的保障。如果在以太坊中支持历史区块哈希查询，那么任何人都可以用特定的智能合约来绑定他们的代币，并且提供付费证明服务，从而有效地针对轻客戸端 LRA 安全问题开发出一个市场。\")]),o(\"h3\",{attrs:{id:\"-42\"}},[e._v(\"克服分叉与审查攻击\")]),o(\"p\",[e._v(\"由于提交区块流程的定义，任何联合后不少于 ⅓ 的投票权的节点都可以通过下线或者不广播选票来中止区块链运行。这样的联合也可以通过拒绝包含这些交易的区块来审查特定的交易，尽管这将导致大多数区块提案被拒绝，致使区块提交速率减缓，降低了它的实用性与价值。恶意的联合或许仍然会陆陆续续地广播选票，用阻挠区块链的区块提交来将其逼停，或者使用任何这些攻击的组合攻击。最终，它会通过双重签名或者违反锁定规则来造成区块链分叉。\")]),o(\"p\",[e._v(\"如果一个全球活跃的作恶者也参与进来，就会用可能出现错误的验证组人子集导致速度降低的方法来分割网络。这不只是 Tendermint 面临的局限性，更确切地说是所有被活跃敌对者控制了网络的共识协议所面临的局限性 1。\")]),o(\"p\",[e._v(\"对于这些类型的攻击，验证人的子集应该通过外部的方式进行协调，以签署选择一个分叉（及关系到的所有证据）与带有签名的验证人的初始子集的重组提案。签署了这样一份重组提案的验证者，将放弃在所有其他分叉上属于他们的保证金。客户端应在重组提案中验证签名以及任何相关的证据，并作出判断或提示终端用户作出决定。例如，一个手机钱包 app 应该在可能接受任何由一半以上的初始验证人们通过投票权利签署的重组提案时，给予用户安全警告提示。\")]),o(\"p\",[e._v(\"当多于 ⅓ 的投票权益是不诚实的时候，一个非同步的拜占庭容错算法步能够达成共识，然而，分叉假设不少于 ⅓ 的投票权益已经因不正当的双重签名或者锁定改变而成为不诚实的。因此，签署重组提案是一个协调问题，任何非同步协议都无法解决这个问题（也就是自动的，并且不考虑底层网络的可靠性）。目前，我们通过互联网媒体的社会共识，把重组提案的协调问题留给了用户去协调。验证人必须在签署重组提案之前就确保没有出现网络分割的问题，以此来避免签署两个相冲突的重组提议的情况发生。\")]),o(\"p\",[e._v(\"假设外部协调媒介和协议是可靠的，对于分叉的担心会比审查攻击要少许多。\")]),o(\"p\",[e._v(\"除了需要大于 ⅓ 的拜占庭投票权益才能启动的分叉和审查制度以外，超过 ⅔ 的联合投票权益可能会提交任意、无效的状态。这是任何拜占庭容错算法的共识系统所特有的问题。与利用简单可验证证明来创建分叉的双重签名不同，检测无效状态的提交需要非验证节点来验证整个区块，这意味着非验证节点会保留一份本地的状态副本并执行每一笔交易，然后为他们自己独立计算出状态的根源。一旦检测出来，处理这类故障的唯一方法就是社会共识。打一个比方，在比特币出现问题的情况下，无论是由于软件漏洞造成的分叉（正如 2013 年 3 月），还是由于矿工拜占庭行为提交的无效状态（正如 2015 年 7 月），由商户、开发者、矿工和其他组织组成的联系紧密的社区所建立起来的社会共识会让他们按照分工来参与到修复网络的工作当中去。此外，由于 Tendermint 区块链的验证人身份是可识别的，那么如果需要的话，无效状态的提交实际上是可以被法律或其他外部法律体系惩治的。\")]),o(\"h3\",{attrs:{id:\"abci-2\"}},[e._v(\"ABCI 说明\")]),o(\"p\",[e._v(\"ABCI 由 3 种主要的信息类型组成，这三类信息从共识引擎传递到应用程序上，然后应用程序用相应回复信息做出应答。\")]),o(\"p\",[o(\"code\",{pre:!0},[e._v(\"AppendTx\")]),e._v(\" 信息是应用程序的主要传递媒介。区块链中的每一笔交易都通过这个信息来传递。应用程序需要验证每笔交易，这将通过接收针对当前状态、应用协议和交易密码证书的 AppendTx 信息来实现。验证过的交易将需要通过添加数值到键值存储或者更新 UTXO 数据库的方式来更新应用状态。\")]),o(\"p\",[o(\"code\",{pre:!0},[e._v(\"CheckTx\")]),e._v(\"信息与 AppendTx 信息类似，但它只是为了交易验证。Tendermint BFT 的内存池会先用 CheckTx 验证交易有效性，并且只会将有效的交易传递给其他的节点。应用程序会检查交易序列号，如果序列号过期就会根据 CheckTx 返回一个错误。\")]),o(\"p\",[o(\"code\",{pre:!0},[e._v(\"Commit\")]),e._v(\"信息是用来计算之后会存入到下一区块头中的当前应用状态的加密提交项。这具有便利的特性。状态的前后矛盾性将会像引起程序错误，从而导致区块链分叉。这也简化了安全轻客戸端的开发，因为默克尔哈希证明可以通过检查区块哈希来加以验证，而区块哈希是由规定人数的验证人们签署的（通过投票权益）。\")]),o(\"p\",[e._v(\"此外，ABCI 信息允许应用程序保持追踪验证人组的改变，并让应用程序接收诸如高度和提交选票之类的区块信息。\")]),o(\"p\",[e._v(\"ABCI 请求/响应是简单的 Protobuf 信息。请参考这里的\"),o(\"a\",{attrs:{href:\"https://github.com/tendermint/abci/blob/master/types/types.proto\"}},[e._v(\"模式文件\")]),e._v(\"。\")]),o(\"h5\",{attrs:{id:\"appendtx\"}},[e._v(\"AppendTx\")]),o(\"ul\",[o(\"li\",[o(\"strong\",[e._v(\"命令行参数\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Data ([]byte)\")]),e._v(\": 交易请求信息\")])])]),o(\"li\",[o(\"strong\",[e._v(\"Returns\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Code (uint32)\")]),e._v(\": 回复代码\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Data ([]byte)\")]),e._v(\": 结果字节，如果有的话\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Log (string)\")]),e._v(\": 错误信息\")])])]),o(\"li\",[o(\"strong\",[e._v(\"使用\")]),e._v(\":\\n提交并执行一笔交易，如果交易有效，那返回 CodeType.OK\")])]),o(\"h5\",{attrs:{id:\"checktx\"}},[e._v(\"CheckTx\")]),o(\"ul\",[o(\"li\",[o(\"strong\",[e._v(\"命令行参数\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Data ([]byte)\")]),e._v(\": 交易请求信息\")])])]),o(\"li\",[o(\"strong\",[e._v(\"Returns\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Code (uint32)\")]),e._v(\": 回复代码\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Data ([]byte)\")]),e._v(\": 结果字节，如果有的话\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Log (string)\")]),e._v(\": 错误信息\")])])]),o(\"li\",[o(\"strong\",[e._v(\"使用\")]),e._v(\":\\n验证一笔交易。这个信息不应该改变应用状态。交易在广播给其他节点前，首先通过 CheckTx 运行。你可以发起半状态化 CheckTx，并在 Commit or BeginBlock 上清算状态，以允许序列执行同一区块中相关的交易。\")])]),o(\"h5\",{attrs:{id:\"commit\"}},[e._v(\"Commit\")]),o(\"ul\",[o(\"li\",[o(\"strong\",[e._v(\"返回值\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Data ([]byte)\")]),e._v(\": 默克尔根值\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Log (string)\")]),e._v(\": 调试或出错信息\")])])]),o(\"li\",[o(\"strong\",[e._v(\"使用\")]),e._v(\":\\n返回当前应用状态。\")])]),o(\"h5\",{attrs:{id:\"query\"}},[e._v(\"Query\")]),o(\"ul\",[o(\"li\",[o(\"strong\",[e._v(\"命令行参数\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Data ([]byte)\")]),e._v(\": 请求数据\")])])]),o(\"li\",[o(\"strong\",[e._v(\"返回值\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Code (uint32)\")]),e._v(\": 回复代码\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Data ([]byte)\")]),e._v(\": 查询回复字节\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Log (string)\")]),e._v(\": 调试或出错信息\")])])])]),o(\"h5\",{attrs:{id:\"flush\"}},[e._v(\"Flush\")]),o(\"ul\",[o(\"li\",[o(\"strong\",[e._v(\"使用\")]),e._v(\":\\n刷新回复队列。应用 types.Application 的应用程序无需实施这条信息——这个由项目进行处理。\")])]),o(\"h5\",{attrs:{id:\"info\"}},[e._v(\"Info\")]),o(\"ul\",[o(\"li\",[o(\"strong\",[e._v(\"返回值\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Data ([]byte)\")]),e._v(\": 信息字节串\")])])]),o(\"li\",[o(\"strong\",[e._v(\"使用\")]),e._v(\":\\n返回关于应用程序状态的信息. 应用指定。\")])]),o(\"h5\",{attrs:{id:\"setoption\"}},[e._v(\"SetOption\")]),o(\"ul\",[o(\"li\",[o(\"strong\",[e._v(\"参数\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Key (string)\")]),e._v(\": 设置参数\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Value (string)\")]),e._v(\": 参数值\")])])]),o(\"li\",[o(\"strong\",[e._v(\"返回值\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Log (string)\")]),e._v(\": Debug or error message\")])])]),o(\"li\",[o(\"strong\",[e._v(\"使用\")]),e._v(':\\n比如，针对内存池的连接可以将键设置为\"mode\"（模式），值为\"mempool\"（内存池）。或者针对共识连接，将键设置为\"mode\"，值设置为\"consensus\"（共识）。其他选项根据可具体应用进行专门设置。')])]),o(\"h5\",{attrs:{id:\"initchain\"}},[e._v(\"InitChain\")]),o(\"ul\",[o(\"li\",[o(\"strong\",[e._v(\"参数\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Validators ([]Validator)\")]),e._v(\": 初始化创世验证人\")])])]),o(\"li\",[o(\"strong\",[e._v(\"使用\")]),e._v(\":\\n在创世区块创建时调用\")])]),o(\"h5\",{attrs:{id:\"beginblock\"}},[e._v(\"BeginBlock\")]),o(\"ul\",[o(\"li\",[o(\"strong\",[e._v(\"参数\")]),e._v(\":\")])]),o(\"ul\",[o(\"li\",[o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Height (uint64)\")]),e._v(\": 区块刚开始的高度\")])])]),o(\"li\",[o(\"strong\",[e._v(\"使用\")]),e._v(\":\\n为新区块的开始提供信号。在附加交易（AppendTxs）前进行调用。\")])]),o(\"h5\",{attrs:{id:\"endblock\"}},[e._v(\"EndBlock\")]),o(\"ul\",[o(\"li\",[o(\"strong\",[e._v(\"参数\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Height (uint64)\")]),e._v(\": 结束时的区块高度\")])])]),o(\"li\",[o(\"strong\",[e._v(\"返回值\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Validators ([]Validator)\")]),e._v(\": 具有新选票的变动后的验证人（归零就去除）\")])])]),o(\"li\",[o(\"strong\",[e._v(\"使用\")]),e._v(\":\\n为区块结束提供信号。在每次提交前所有交易后调用。\")])]),o(\"p\",[e._v(\"See \"),o(\"a\",{attrs:{href:\"https://github.com/tendermint/abci#message-types\"}},[e._v(\"the ABCI repository\")]),e._v(\" for more details\")]),o(\"p\",[e._v(\"更多细节请参考 \"),o(\"a\",{attrs:{href:\"https://github.com/tendermint/abci#message-types\"}},[e._v(\"ABCI 知识库\")]),e._v(\"。\")]),o(\"h3\",{attrs:{id:\"ibc-2\"}},[e._v(\"IBC 数据包交付确认\")]),o(\"p\",[e._v(\"发送者有很多需要接收链提供数据包交付确认的原因。比如，如果预计目的链会出错，那发送者就可能无法了解目的链的状态。或者，当目的链可能遇到因接收数据包猛烈增多而形成的拒绝服务攻击时，发送者会想要设定数据包超时时限（借助\"),o(\"code\",{pre:!0},[e._v(\"MaxHeight\")]),e._v(\" 即最大值包域）。\")]),o(\"p\",[e._v(\"在这些案例中，发送人可以通过在\"),o(\"code\",{pre:!0},[e._v(\"AckPending\")]),e._v(\"上设置初始数据包状态来要求提供交付确认。然后就由接收链通过包含一个简化的\"),o(\"code\",{pre:!0},[e._v(\"IBCPacket\")]),e._v(\"的应用默克尔哈希来确认交付。\")]),o(\"p\",[o(\"img\",{attrs:{src:\"https://raw.githubusercontent.com/gnuclear/atom-whitepaper/master/msc/ibc_with_ack.png\",alt:\"Figure of Zone1, Zone2, and Hub IBC with acknowledgement\"}})]),o(\"p\",[e._v(\"首先，一个\"),o(\"code\",{pre:!0},[e._v(\"IBCBlockCommit\")]),e._v(\"和\"),o(\"code\",{pre:!0},[e._v(\"IBCPacketTx\")]),e._v('是被上传到“枢纽”上用来证明\"分区 1\"上的'),o(\"code\",{pre:!0},[e._v(\"IBCPacket\")]),e._v(\"的存在的。假设\"),o(\"code\",{pre:!0},[e._v(\"IBCPacketTx\")]),e._v(\"的值如下：\")]),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"FromChainID\")]),e._v(\": “Zone1”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"FromBlockHeight\")]),e._v(\": 100 (假设)\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Packet\")]),e._v(\": an \"),o(\"code\",{pre:!0},[e._v(\"IBCPacket\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Header\")]),e._v(\": an \"),o(\"code\",{pre:!0},[e._v(\"IBCPacketHeader\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"SrcChainID\")]),e._v(\": “Zone1”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"DstChainID\")]),e._v(\": “Zone2”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Number\")]),e._v(\": 200 (say)\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Status\")]),e._v(\": \"),o(\"code\",{pre:!0},[e._v(\"AckPending\")])]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Type\")]),e._v(\": “coin”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"MaxHeight\")]),e._v(\": 350 (假设 “枢纽” 当前高度为 300)\")])])]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Payload\")]),e._v(': <一个\"代币\"的有效负荷字节>')])])])]),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"FromChainID\")]),e._v(\": “Zone1”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"FromBlockHeight\")]),e._v(\": 100 (假设)\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Packet\")]),e._v(\": an \"),o(\"code\",{pre:!0},[e._v(\"IBCPacket\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Header\")]),e._v(\": an \"),o(\"code\",{pre:!0},[e._v(\"IBCPacketHeader\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"SrcChainID\")]),e._v(\": “Zone1”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"DstChainID\")]),e._v(\": “Zone2”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Number\")]),e._v(\": 200 (假设)\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Status\")]),e._v(\": \"),o(\"code\",{pre:!0},[e._v(\"AckPending\")])]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Type\")]),e._v(\": “coin”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"MaxHeight\")]),e._v(': 350 (假设\"枢纽\"目前的高度是 300)')])])]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Payload\")]),e._v(': <一个\"代币\"的有效负荷字节>')])])])]),o(\"p\",[e._v(\"其次，一个\"),o(\"code\",{pre:!0},[e._v(\"IBCBlockCommit\")]),e._v(\" 和 \"),o(\"code\",{pre:!0},[e._v(\"IBCPacketTx\")]),e._v(\"被传输都“分区 2”上用来证明\"),o(\"code\",{pre:!0},[e._v(\"IBCPacket\")]),e._v(\"在“枢纽”上的存在。假设\"),o(\"code\",{pre:!0},[e._v(\"IBCPacketTx\")]),e._v(\"的值如下：\")]),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"FromChainID\")]),e._v(\": “Hub”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"FromBlockHeight\")]),e._v(\": 300\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Packet\")]),e._v(\": an \"),o(\"code\",{pre:!0},[e._v(\"IBCPacket\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Header\")]),e._v(\": an \"),o(\"code\",{pre:!0},[e._v(\"IBCPacketHeader\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"SrcChainID\")]),e._v(\": “Zone1”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"DstChainID\")]),e._v(\": “Zone2”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Number\")]),e._v(\": 200\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Status\")]),e._v(\": \"),o(\"code\",{pre:!0},[e._v(\"AckPending\")])]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Type\")]),e._v(\": “coin”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"MaxHeight\")]),e._v(\": 350\")])])]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Payload\")]),e._v(': <一个\"代币\"相同的有效负荷字节>')])])])]),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"FromChainID\")]),e._v(\": “Hub”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"FromBlockHeight\")]),e._v(\": 300\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Packet\")]),e._v(\": an \"),o(\"code\",{pre:!0},[e._v(\"IBCPacket\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Header\")]),e._v(\": an \"),o(\"code\",{pre:!0},[e._v(\"IBCPacketHeader\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"SrcChainID\")]),e._v(\": “Zone1”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"DstChainID\")]),e._v(\": “Zone2”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Number\")]),e._v(\": 200\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Status\")]),e._v(\": \"),o(\"code\",{pre:!0},[e._v(\"AckPending\")])]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Type\")]),e._v(\": “coin”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"MaxHeight\")]),e._v(\": 350\")])])]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Payload\")]),e._v(': <一个\"代币\"相同的有效负荷字节>')])])])]),o(\"p\",[e._v('接下来，\"Zone2\"必须将缩写的来显示'),o(\"code\",{pre:!0},[e._v(\"AckSent\")]),e._v(\"的最新状态包添加到应用程序状态哈希中。\\n\"),o(\"code\",{pre:!0},[e._v(\"IBCBlockCommitand\")]),e._v(\" 和\"),o(\"code\",{pre:!0},[e._v(\"IBCPacketTx\")]),e._v(' 会传输到“枢纽\"上来证明简化的'),o(\"code\",{pre:!0},[e._v(\"IBCPacket\")]),e._v(' 存在于\"分区 2\"上。假设'),o(\"code\",{pre:!0},[e._v(\"IBCPacketTx\")]),e._v(\" 的值如下：\")]),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"FromChainID\")]),e._v(\": “Zone2”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"FromBlockHeight\")]),e._v(\": 400 (假设)\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Packet\")]),e._v(\": an \"),o(\"code\",{pre:!0},[e._v(\"IBCPacket\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Header\")]),e._v(\": an \"),o(\"code\",{pre:!0},[e._v(\"IBCPacketHeader\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"SrcChainID\")]),e._v(\": “Zone1”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"DstChainID\")]),e._v(\": “Zone2”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Number\")]),e._v(\": 200\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Status\")]),e._v(\": \"),o(\"code\",{pre:!0},[e._v(\"AckSent\")])]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Type\")]),e._v(\": “coin”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"MaxHeight\")]),e._v(\": 350\")])])]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"PayloadHash\")]),e._v(': <一个\"代币\"相同的有效负荷字节的哈希值>')])])])]),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"FromChainID\")]),e._v(\": “Zone2”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"FromBlockHeight\")]),e._v(\": 400 (假设)\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Packet\")]),e._v(\": an \"),o(\"code\",{pre:!0},[e._v(\"IBCPacket\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Header\")]),e._v(\": an \"),o(\"code\",{pre:!0},[e._v(\"IBCPacketHeader\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"SrcChainID\")]),e._v(\": “Zone1”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"DstChainID\")]),e._v(\": “Zone2”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Number\")]),e._v(\": 200\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Status\")]),e._v(\": \"),o(\"code\",{pre:!0},[e._v(\"AckSent\")])]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Type\")]),e._v(\": “coin”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"MaxHeight\")]),e._v(\": 350\")])])]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"PayloadHash\")]),e._v(': <一个\"代币\"相同的有效负荷字节的哈希值>')])])])]),o(\"p\",[e._v(\"最后，“枢纽”必须更新从\"),o(\"code\",{pre:!0},[e._v(\"AckPending\")]),e._v(\" 到\"),o(\"code\",{pre:!0},[e._v(\"AckReceived\")]),e._v(\"的数据包状态。这个新完成状态的证明应该返回到“分区 2”上。假设\"),o(\"code\",{pre:!0},[e._v(\"IBCPacketTx\")]),e._v(\"的值如下：\")]),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"FromChainID\")]),e._v(\": “Hub”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"FromBlockHeight\")]),e._v(\": 301\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Packet\")]),e._v(\": an \"),o(\"code\",{pre:!0},[e._v(\"IBCPacket\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Header\")]),e._v(\": an \"),o(\"code\",{pre:!0},[e._v(\"IBCPacketHeader\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"SrcChainID\")]),e._v(\": “Zone1”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"DstChainID\")]),e._v(\": “Zone2”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Number\")]),e._v(\": 200\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Status\")]),e._v(\": \"),o(\"code\",{pre:!0},[e._v(\"AckReceived\")])]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Type\")]),e._v(\": “coin”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"MaxHeight\")]),e._v(\": 350\")])])]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"PayloadHash\")]),e._v(\": <The hash bytes of the same “coin” payload>\")])])])]),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"FromChainID\")]),e._v(\": “Hub”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"FromBlockHeight\")]),e._v(\": 301\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Packet\")]),e._v(\": an \"),o(\"code\",{pre:!0},[e._v(\"IBCPacket\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Header\")]),e._v(\": an \"),o(\"code\",{pre:!0},[e._v(\"IBCPacketHeader\")]),e._v(\":\\n\"),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"SrcChainID\")]),e._v(\": “Zone1”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"DstChainID\")]),e._v(\": “Zone2”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Number\")]),e._v(\": 200\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Status\")]),e._v(\": \"),o(\"code\",{pre:!0},[e._v(\"AckReceived\")])]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Type\")]),e._v(\": “coin”\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"MaxHeight\")]),e._v(\": 350\")])])]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"PayloadHash\")]),e._v(': <相同\"代币\"有效负荷的哈希字节>')])])])]),o(\"p\",[e._v('与此同时，“分区 1”会假设“代币”包的交付已经成功，除非\"枢纽\"上有证据给出相反的证明。在上述例子中，如果\"枢纽\"没有从\"分区 2\"接收到第 350 个区块的'),o(\"code\",{pre:!0},[e._v(\"AckSent\")]),e._v(\" 状态，那么它就会自动将其设置为\"),o(\"code\",{pre:!0},[e._v(\"Timeout\")]),e._v('（超时）。这个超时的证据可以贴回到\"Zone1\"上，然后所有代币都会被返还。')]),o(\"p\",[o(\"img\",{attrs:{src:\"https://raw.githubusercontent.com/gnuclear/atom-whitepaper/master/msc/ibc_with_ack_timeout.png\",alt:\"Figure of Zone1, Zone2, and Hub IBC with acknowledgement and timeout\"}})]),o(\"h3\",{attrs:{id:\"-43\"}},[e._v(\"默克尔树及默克尔证明的说明\")]),o(\"p\",[e._v(\"Tendermint/Cosmos 生态支持的两种默克尔树：简单树和 IAVL+树。\")]),o(\"h4\",{attrs:{id:\"-44\"}},[e._v(\"简易版默克尔树\")]),o(\"p\",[e._v(\"简易版默克尔树针对基础的静态列表。如果项目的数量不是 2 的次方，那么有些树叶就会在不同的层上。简易树试图让树的两侧在同一高度，但是左边可能会稍大一点。这种默克尔树就是用于一个区块交易的默克尔化的，而顶层元素就是应用状态的根。\")]),o(\"pre\",{pre:!0},[o(\"code\",{pre:!0,attrs:{\"v-pre\":\"\"}},[e._v(\"                *\\n               / \\\\\\n             /     \\\\\\n           /         \\\\\\n         /             \\\\\\n        *               *\\n       / \\\\             / \\\\\\n      /   \\\\           /   \\\\\\n     /     \\\\         /     \\\\\\n    *       *       *       h6\\n   / \\\\     / \\\\     / \\\\\\n  h0  h1  h2  h3  h4  h5\\n\\n  A SimpleTree with 7 elements\\n\")])]),o(\"h4\",{attrs:{id:\"iavl\"}},[e._v(\"IAVL+树\")]),o(\"p\",[e._v(\"IAVL+数据结构的目的是永久储存应用状态中的密钥对，这样就可以对确定的默克尔根哈希进行高效的运算。这个树的平衡通过 AVL 算法的变体来实现，所有运行都是 O(log(n))。\")]),o(\"p\",[e._v('在 AVL 树中，任意节点的两个子树的高度至多有一处不同。无论在什么时候这种情况都是与更新相违背的，这个树都会通过创造 O(log(n))新节点（指向旧树上未修改的节点）来再次达到平衡。在初始的 AVL 算法中，内部节点也可以保留密钥值对。AVL+算法（注意这里有个\"+\"号）对 AVL 算法进行了修改，来维持所有数值都在树叶节点上，同时还只需采用分支-节点来存储密钥。这样在维持较短的默克尔哈希轨迹对的同时，还简化了算法。')]),o(\"p\",[e._v(\"AVL+树类似于以太坊的\"),o(\"a\",{attrs:{href:\"http://en.wikipedia.org/wiki/Radix_tree\"}},[e._v(\"帕氏树\")]),e._v(\"。其中也有一定的折中。密钥不需要在嵌入到 IAVL+树之前生成哈希，所以这就为密钥空间提供了较快的命令迭代，这会为很多应用程序带来好处。逻辑实现更简单，只需要内部节点和树叶节点这两种节点类型。作为一个平衡的二叉树，其默克尔证明平均更短。而另一方面，IAVL+树的默克尔根有取决于命令的更新。\\n我们将支持额外有效的默克尔树，比如当二元变量可用时的以太坊帕氏树。\")]),o(\"h3\",{attrs:{id:\"-45\"}},[e._v(\"交易类型\")]),o(\"p\",[e._v(\"在标准的执行中，交易通过 ABCI 界面涌入 Cosmos Hub 的应用程序中。\")]),o(\"p\",[e._v(\"Cosmos Hub 将接收几类主要的交易类型，包括\"),o(\"code\",{pre:!0},[e._v(\"SendTx\")]),e._v(\", \"),o(\"code\",{pre:!0},[e._v(\"BondTx\")]),e._v(\", \"),o(\"code\",{pre:!0},[e._v(\"UnbondTx\")]),e._v(\", \"),o(\"code\",{pre:!0},[e._v(\"ReportHackTx\")]),e._v(\", \"),o(\"code\",{pre:!0},[e._v(\"SlashTx\")]),e._v(\", \"),o(\"code\",{pre:!0},[e._v(\"BurnAtomTx\")]),e._v(\",\\n\"),o(\"code\",{pre:!0},[e._v(\"ProposalCreateTx\")]),e._v(\"，以及\"),o(\"code\",{pre:!0},[e._v(\"ProposalVoteTx\")]),e._v(\"（发送交易、绑定交易、解绑交易、攻击报告交易、削减交易、Atom 燃烧交易，创建提案交易、以及提案投票交易），这些都不需要加以说明，会在未来版本的文档中加以备案。这里我们主要列举两个主要的 IBC 交易类型： \"),o(\"code\",{pre:!0},[e._v(\"IBCBlockCommitTx\")]),e._v(\" 以及\"),o(\"code\",{pre:!0},[e._v(\"IBCPacketTx\")]),e._v(\"（即 IBC 区块提交交易以及 IBC 数据包交易）\")]),o(\"h4\",{attrs:{id:\"ibcblockcommittx\"}},[e._v(\"IBCBlockCommitTx\")]),o(\"p\",[e._v(\"IBCBlockCommitTx 交易主要由这些组成：\")]),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"ChainID (string)\")]),e._v(\": 区块链 ID\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"BlockHash ([]byte)\")]),e._v(\": 区块哈希字节，就是包括应用程序哈希默克尔根\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"BlockPartsHeader (PartSetHeader)\")]),e._v(\": 区块部分设置的头字节，只用于验证投票签名\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"BlockHeight (int)\")]),e._v(\": 提交高度\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"BlockRound (int)\")]),e._v(\": 提交回合\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Commit ([]Vote)\")]),e._v(\": 超过 ⅔ 的包括区块提交的 Tendermint 预提交投票\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"ValidatorsHash ([]byte)\")]),e._v(\": 新验证组的默克尔树根哈希\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"ValidatorsHashProof (SimpleProof)\")]),e._v(\": 在区块哈希中证明验证人哈希的简易树默克尔证明\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"AppHash ([]byte)\")]),e._v(\": IAVL 树，应用程序状态的默克尔树根哈希\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"AppHashProof (SimpleProof)\")]),e._v(\": 在区块哈希中验证应用程序哈希的简易版默克尔树证明\"),o(\"code\",{pre:!0},[e._v(\"AppHash\")]),e._v(\" against the \"),o(\"code\",{pre:!0},[e._v(\"BlockHash\")])])]),o(\"h4\",{attrs:{id:\"ibcpackettx\"}},[e._v(\"IBCPacketTx\")]),o(\"p\",[o(\"code\",{pre:!0},[e._v(\"IBCPacket\")]),e._v(\" 由下列项组成：\")]),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Header (IBCPacketHeader)\")]),e._v(\": 数据包头\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Payload ([]byte)\")]),e._v(\": 数据包有效负荷字节。可选择。\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"PayloadHash ([]byte)\")]),e._v(\": 数据包字节哈希。可选择。\")])]),o(\"p\",[e._v(\"有效负荷\"),o(\"code\",{pre:!0},[e._v(\"Payload\")]),e._v(\"或有效负荷哈希\"),o(\"code\",{pre:!0},[e._v(\"PayloadHash\")]),e._v(\"必须存在一个。\"),o(\"code\",{pre:!0},[e._v(\"IBCPacket\")]),e._v(\" 的哈希就是两个项的简易版默克尔根，即头和有效负荷。没有完整有效负荷的\"),o(\"code\",{pre:!0},[e._v(\"IBCPacket\")]),e._v(\" 被称作 \"),o(\"em\",[e._v(\"缩写版包\")]),e._v(\" 。\")]),o(\"p\",[o(\"code\",{pre:!0},[e._v(\"IBCPacketHeader\")]),e._v(\"由下列项组成：\")]),o(\"p\",[o(\"code\",{pre:!0},[e._v(\"SrcChainID (string)\")]),e._v(\": 源区块链 ID\\nDstChainID (string)\"),o(\"code\",{pre:!0},[e._v(\": 目标区块链ID Number (int)\")]),e._v(\": 所有数据包的唯一数字\\nStatus (enum)\"),o(\"code\",{pre:!0},[e._v(\":可以是AckPending，AckSent，AckReceived，NoAck，或Timeout任意一个 Type (string)\")]),e._v(': 种类根据应用程序决定。Cosmos 保留\"coin\"（币）包种类。\\n'),o(\"code\",{pre:!0},[e._v(\"MaxHeight (int)\")]),e._v(\": 如果状态不是这个高度给出的\"),o(\"code\",{pre:!0},[e._v(\"NoAckWanted\")]),e._v(\" 或者\"),o(\"code\",{pre:!0},[e._v(\"AckReceived\")]),e._v(\" ，那么状态就算超时。可选择。\")]),o(\"p\",[e._v(\"An \"),o(\"code\",{pre:!0},[e._v(\"IBCPacketTx\")]),e._v(\" transaction is composed of:\")]),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"FromChainID (string)\")]),e._v(\": The ID of the blockchain which is providing this\\npacket; not necessarily the source\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"FromBlockHeight (int)\")]),e._v(\": The blockchain height in which the following packet\\nis included (Merkle-ized) in the block-hash of the source chain\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Packet (IBCPacket)\")]),e._v(\": A packet of data, whose status may be one of\\n\"),o(\"code\",{pre:!0},[e._v(\"AckPending\")]),e._v(\", \"),o(\"code\",{pre:!0},[e._v(\"AckSent\")]),e._v(\", \"),o(\"code\",{pre:!0},[e._v(\"AckReceived\")]),e._v(\", \"),o(\"code\",{pre:!0},[e._v(\"NoAck\")]),e._v(\", or \"),o(\"code\",{pre:!0},[e._v(\"Timeout\")])]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"PacketProof (IAVLProof)\")]),e._v(\": A IAVLTree Merkle-proof for proving the packet’s\\nhash against the \"),o(\"code\",{pre:!0},[e._v(\"AppHash\")]),e._v(\" of the source chain at given height\")])]),o(\"p\",[o(\"code\",{pre:!0},[e._v(\"IBCPacketTx\")]),e._v(\" 交易有下列项组成：\")]),o(\"ul\",[o(\"li\",[o(\"code\",{pre:!0},[e._v(\"FromChainID (string)\")]),e._v(\": 提供给这个数据包的区块链 ID，不是源所必须的\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"FromBlockHeight (int)\")]),e._v(\": 区块链高度，其中接下来的包会包含在（默克尔化的）源链的区块哈希中\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"Packet (IBCPacket)\")]),e._v(\":数据包, 其状态可能是\"),o(\"code\",{pre:!0},[e._v(\"AckPending\")]),e._v(\", \"),o(\"code\",{pre:!0},[e._v(\"AckSent\")]),e._v(\", \"),o(\"code\",{pre:!0},[e._v(\"AckReceived\")]),e._v(\", \"),o(\"code\",{pre:!0},[e._v(\"NoAck\")]),e._v(\", 或者 \"),o(\"code\",{pre:!0},[e._v(\"Timeout\")]),e._v(\"其中的一个\")]),o(\"li\",[o(\"code\",{pre:!0},[e._v(\"PacketProof (IAVLProof)\")]),e._v(\": IAVL 树默克尔证明，用于验证在给定高度下的源链应用哈希中的数据包哈希\")])]),o(\"p\",[e._v('通过\"Hub\"，将数据包从\"Zone1\"发送到\"Zone2\"的序列，描述在{Figure X}函数中。首先，一个'),o(\"code\",{pre:!0},[e._v(\"IBCPacketTx\")]),e._v('会向\"Hub\"证明数据包是包含在\"Zone1\"的应用程序状态中。然后，另一个'),o(\"code\",{pre:!0},[e._v(\"IBCPacketTx\")]),e._v(' 会向\"Zone2\"证明数据包包含在\"Hub\"的应用程序状态中。在这个过程中，'),o(\"code\",{pre:!0},[e._v(\"IBCPacketTx\")]),e._v(\" 的字段是相同的：\"),o(\"code\",{pre:!0},[e._v(\"SrcChainID\")]),e._v('永远是\"Zone1\"，而'),o(\"code\",{pre:!0},[e._v(\"DstChainID\")]),e._v(' 永远是\"Zone2\"。')]),o(\"p\",[e._v(\"The \"),o(\"code\",{pre:!0},[e._v(\"PacketProof\")]),e._v(\" must have the correct Merkle-proof path, as follows:\")]),o(\"p\",[o(\"code\",{pre:!0},[e._v(\"PacketProof\")]),e._v(\" 必须有正确的默克尔证明路径，如下：\")]),o(\"pre\",{pre:!0},[o(\"code\",{pre:!0,attrs:{\"v-pre\":\"\"}},[e._v(\"IBC/<SrcChainID>/<DstChainID>/<Number>\\n\")])]),o(\"p\",[e._v(\"当“Zone1”要通过“Hub”将数据包传送到“Zone2”中，无论数据包是否在“Zone1”、“Hub”、或者“Zone2”中默克尔化了，\"),o(\"code\",{pre:!0},[e._v(\"IBCPacket\")]),e._v(\"数据都是相同的。唯一易变的字段是为追踪交付的\"),o(\"code\",{pre:!0},[e._v(\"Status\")]),e._v(\"。\")]),o(\"h2\",{attrs:{id:\"-46\"}},[e._v(\"鸣谢\")]),o(\"p\",[e._v(\"我们为所有朋友欲同行们在概念成型与检查方面给予的帮助，以及对我们在 Tendermint 与 Cosmos 工作中的大力支持，表示衷心地感谢。\")]),o(\"ul\",[o(\"li\",[o(\"p\",[o(\"a\",{attrs:{href:\"https://github.com/zmanian\"}},[e._v(\"Zaki Manian\")]),e._v(\" of\\n\"),o(\"a\",{attrs:{href:\"https://www.skuchain.com/\"}},[e._v(\"SkuChain\")]),e._v(\" provided much help in formatting and\\nwording, especially under the ABCI section\")])]),o(\"li\",[o(\"p\",[o(\"a\",{attrs:{href:\"https://github.com/jtremback\"}},[e._v(\"Jehan Tremback\")]),e._v(\" of Althea and Dustin Byington\\nfor helping with initial iterations\")])]),o(\"li\",[o(\"p\",[o(\"a\",{attrs:{href:\"http://soc1024.com/\"}},[e._v(\"Andrew Miller\")]),e._v(\" of \"),o(\"a\",{attrs:{href:\"https://eprint.iacr.org/2016/199\"}},[e._v(\"Honey\\nBadger\")]),e._v(\" for feedback on consensus\")])]),o(\"li\",[o(\"p\",[o(\"a\",{attrs:{href:\"https://fixingtao.com/\"}},[e._v(\"Greg Slepak\")]),e._v(\" for feedback on consensus and wording\")])]),o(\"li\",[o(\"p\",[e._v(\"Also thanks to \"),o(\"a\",{attrs:{href:\"https://github.com/gleim\"}},[e._v(\"Bill Gleim\")]),e._v(\" and \"),o(\"a\",{attrs:{href:\"http://www.seunghwanhan.com\"}},[e._v(\"Seunghwan\\nHan\")]),e._v(\" for various contributions.\")])]),o(\"li\",[o(\"p\",[o(\"strong\",[e._v(\"Your name and organization here for your contribution\")])])]),o(\"li\",[o(\"p\",[o(\"a\",{attrs:{href:\"https://www.skuchain.com/\"}},[e._v(\"SkuChain\")]),e._v(\"的\"),o(\"a\",{attrs:{href:\"https://github.com/zmanian\"}},[e._v(\"Zaki Manian\")]),e._v(\"在格式与措辞方面提供了很多帮助，尤其在 ABCI 部分。\")])]),o(\"li\",[o(\"p\",[e._v(\"Althea 的\"),o(\"a\",{attrs:{href:\"https://github.com/jtremback\"}},[e._v(\"Jehan Tremback\")]),e._v(\"和 Dustin Byington 在初始迭代方面的帮助。\")])]),o(\"li\",[o(\"p\",[o(\"a\",{attrs:{href:\"https://eprint.iacr.org/2016/199\"}},[e._v(\"Honey\\nBadger\")]),e._v(\"的 \"),o(\"a\",{attrs:{href:\"http://soc1024.com/\"}},[e._v(\"Andrew Miller\")]),e._v(\" 在共识部分给予的反馈。\")])]),o(\"li\",[o(\"p\",[o(\"a\",{attrs:{href:\"https://fixingtao.com/\"}},[e._v(\"Greg Slepak\")]),e._v(\"对共识部分的反馈以及在措辞方面的帮助。\")])]),o(\"li\",[o(\"p\",[e._v(\"同时还要感谢 \"),o(\"a\",{attrs:{href:\"https://github.com/gleim\"}},[e._v(\"Bill Gleim\")]),e._v(\"和 \"),o(\"a\",{attrs:{href:\"http://www.seunghwanhan.com\"}},[e._v(\"Seunghwan\\nHan\")]),e._v(\"在多方面的支持与贡献。\")])]),o(\"li\",[o(\"p\",[e._v(\"**此处还有您及您的组织对本文的贡献。\")])])]),o(\"h2\",{attrs:{id:\"-47\"}},[e._v(\"引用\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"https://bitcoin.org/bitcoin.pdf\"}},[e._v(\"1\")]),e._v(\" Bitcoin: \"),o(\"a\",{attrs:{href:\"https://bitcoin.org/bitcoin.pdf\"}},[e._v(\"https://bitcoin.org/bitcoin.pdf\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"http://zerocash-project.org/paper\"}},[e._v(\"2\")]),e._v(\" ZeroCash: \"),o(\"a\",{attrs:{href:\"http://zerocash-project.org/paper\"}},[e._v(\"http://zerocash-project.org/paper\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"https://github.com/ethereum/wiki/wiki/White-Paper\"}},[e._v(\"3\")]),e._v(\" Ethereum: \"),o(\"a\",{attrs:{href:\"https://github.com/ethereum/wiki/wiki/White-Paper\"}},[e._v(\"https://github.com/ethereum/wiki/wiki/White-Paper\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"https://download.slock.it/public/DAO/WhitePaper.pdf\"}},[e._v(\"4\")]),e._v(\" TheDAO: \"),o(\"a\",{attrs:{href:\"https://download.slock.it/public/DAO/WhitePaper.pdf\"}},[e._v(\"https://download.slock.it/public/DAO/WhitePaper.pdf\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki\"}},[e._v(\"5\")]),e._v(\" Segregated Witness: \"),o(\"a\",{attrs:{href:\"https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki\"}},[e._v(\"https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"https://arxiv.org/pdf/1510.02037v2.pdf\"}},[e._v(\"6\")]),e._v(\" BitcoinNG: \"),o(\"a\",{attrs:{href:\"https://arxiv.org/pdf/1510.02037v2.pdf\"}},[e._v(\"https://arxiv.org/pdf/1510.02037v2.pdf\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"https://lightning.network/lightning-network-paper-DRAFT-0.5.pdf\"}},[e._v(\"7\")]),e._v(\" Lightning Network: \"),o(\"a\",{attrs:{href:\"https://lightning.network/lightning-network-paper-DRAFT-0.5.pdf\"}},[e._v(\"https://lightning.network/lightning-network-paper-DRAFT-0.5.pdf\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"https://github.com/tendermint/tendermint/wiki\"}},[e._v(\"8\")]),e._v(\" Tendermint: \"),o(\"a\",{attrs:{href:\"https://github.com/tendermint/tendermint/wiki\"}},[e._v(\"https://github.com/tendermint/tendermint/wiki\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"https://groups.csail.mit.edu/tds/papers/Lynch/jacm85.pdf\"}},[e._v(\"9\")]),e._v(\" FLP Impossibility: \"),o(\"a\",{attrs:{href:\"https://groups.csail.mit.edu/tds/papers/Lynch/jacm85.pdf\"}},[e._v(\"https://groups.csail.mit.edu/tds/papers/Lynch/jacm85.pdf\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"https://blog.ethereum.org/2014/01/15/slasher-a-punitive-proof-of-stake-algorithm/\"}},[e._v(\"10\")]),e._v(\" Slasher: \"),o(\"a\",{attrs:{href:\"https://blog.ethereum.org/2014/01/15/slasher-a-punitive-proof-of-stake-algorithm/\"}},[e._v(\"https://blog.ethereum.org/2014/01/15/slasher-a-punitive-proof-of-stake-algorithm/\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"http://pmg.csail.mit.edu/papers/osdi99.pdf\"}},[e._v(\"11\")]),e._v(\" PBFT: \"),o(\"a\",{attrs:{href:\"http://pmg.csail.mit.edu/papers/osdi99.pdf\"}},[e._v(\"http://pmg.csail.mit.edu/papers/osdi99.pdf\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"https://bitshares.org/technology/delegated-proof-of-stake-consensus/\"}},[e._v(\"12\")]),e._v(\" BitShares: \"),o(\"a\",{attrs:{href:\"https://bitshares.org/technology/delegated-proof-of-stake-consensus/\"}},[e._v(\"https://bitshares.org/technology/delegated-proof-of-stake-consensus/\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"https://www.stellar.org/papers/stellar-consensus-protocol.pdf\"}},[e._v(\"13\")]),e._v(\" Stellar: \"),o(\"a\",{attrs:{href:\"https://www.stellar.org/papers/stellar-consensus-protocol.pdf\"}},[e._v(\"https://www.stellar.org/papers/stellar-consensus-protocol.pdf\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"https://interledger.org/rfcs/0001-interledger-architecture/\"}},[e._v(\"14\")]),e._v(\" Interledger: \"),o(\"a\",{attrs:{href:\"https://interledger.org/rfcs/0001-interledger-architecture/\"}},[e._v(\"https://interledger.org/rfcs/0001-interledger-architecture/\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"https://blockstream.com/sidechains.pdf\"}},[e._v(\"15\")]),e._v(\" Sidechains: \"),o(\"a\",{attrs:{href:\"https://blockstream.com/sidechains.pdf\"}},[e._v(\"https://blockstream.com/sidechains.pdf\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"https://blog.ethereum.org/2015/08/01/introducing-casper-friendly-ghost/\"}},[e._v(\"16\")]),e._v(\" Casper: \"),o(\"a\",{attrs:{href:\"https://blog.ethereum.org/2015/08/01/introducing-casper-friendly-ghost/\"}},[e._v(\"https://blog.ethereum.org/2015/08/01/introducing-casper-friendly-ghost/\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"https://github.com/tendermint/abci\"}},[e._v(\"17\")]),e._v(\" ABCI: \"),o(\"a\",{attrs:{href:\"https://github.com/tendermint/abci\"}},[e._v(\"https://github.com/tendermint/abci\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"https://github.com/ethereum/EIPs/issues/53\"}},[e._v(\"18\")]),e._v(\" Ethereum Sharding: \"),o(\"a\",{attrs:{href:\"https://github.com/ethereum/EIPs/issues/53\"}},[e._v(\"https://github.com/ethereum/EIPs/issues/53\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"http://www.ds.ewi.tudelft.nl/fileadmin/pds/papers/PerformanceAnalysisOfLibswift.pdf\"}},[e._v(\"19\")]),e._v(\" LibSwift: \"),o(\"a\",{attrs:{href:\"http://www.ds.ewi.tudelft.nl/fileadmin/pds/papers/PerformanceAnalysisOfLibswift.pdf\"}},[e._v(\"http://www.ds.ewi.tudelft.nl/fileadmin/pds/papers/PerformanceAnalysisOfLibswift.pdf\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"http://groups.csail.mit.edu/tds/papers/Lynch/jacm88.pdf\"}},[e._v(\"20\")]),e._v(\" DLS: \"),o(\"a\",{attrs:{href:\"http://groups.csail.mit.edu/tds/papers/Lynch/jacm88.pdf\"}},[e._v(\"http://groups.csail.mit.edu/tds/papers/Lynch/jacm88.pdf\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"https://en.bitcoin.it/wiki/Thin_Client_Security\"}},[e._v(\"21\")]),e._v(\" Thin Client Security: \"),o(\"a\",{attrs:{href:\"https://en.bitcoin.it/wiki/Thin_Client_Security\"}},[e._v(\"https://en.bitcoin.it/wiki/Thin_Client_Security\")])]),o(\"li\",[o(\"a\",{attrs:{href:\"http://vitalik.ca/files/mauve_paper.html\"}},[e._v(\"22\")]),e._v(\" Ethereum 2.0 Mauve Paper: \"),o(\"a\",{attrs:{href:\"http://vitalik.ca/files/mauve_paper.html\"}},[e._v(\"http://vitalik.ca/files/mauve_paper.html\")])])]),o(\"h4\",{attrs:{id:\"-48\"}},[e._v(\"未分类链接\")]),o(\"ul\",[o(\"li\",[o(\"a\",{attrs:{href:\"https://www.docdroid.net/ec7xGzs/314477721-ethereum-platform-review-opportunities-and-challenges-for-private-and-consortium-blockchains.pdf.html\"}},[e._v(\"https://www.docdroid.net/ec7xGzs/314477721-ethereum-platform-review-opportunities-and-challenges-for-private-and-consortium-blockchains.pdf.html\")])])])])}],B={},P=Object(c[\"a\"])(B,C,T,!1,null,null,null),A=P.exports,I=o(\"0a70\"),x={name:\"page-resources-whitepaper\",metaInfo:{title:\"Whitepaper - Resources\"},components:{NavContents:n[\"a\"],PageMenu:s[\"a\"],TextEnUs:m,TextKo:f,TextPt:w,TextZhCn:A,TocPage:I[\"a\"]}},q=x,z=Object(c[\"a\"])(q,t,r,!1,null,null,null);a[\"default\"]=z.exports}}]);","extractedComments":[]}