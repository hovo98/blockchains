{"remainingRequest":"C:\\xampp\\htdocs\\cosmos\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\cosmos\\node_modules\\@cosmos-ui\\vue\\src\\GozMilestones\\GozMilestones.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\@cosmos-ui\\vue\\src\\GozMilestones\\GozMilestones.vue","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport GozRow from \"../GozRow/GozRow\"\nimport IconIbc from \"../Icons/IconIbc\"\nimport IconSdk from \"../Icons/IconSdk\"\nimport axios from \"axios\"\n\nexport default {\n  components: {\n    GozRow,\n    IconIbc,\n    IconSdk\n  },\n  data: function() {\n    return {\n      milestone: {\n        logo: \"sdk\",\n        h1: \"Cosmos SDK - GoZ Milestone\",\n        h2: \"cosmos/sdk\"\n      },\n      milestoneList: [],\n      sources: [\n        [\"cosmos/cosmos-sdk\", 24, \"sdk\", \"Cosmos SDK – GoZ Milestone\"],\n        [\"cosmos/cosmos-sdk\", 21, \"sdk\", \"Cosmos SDK – IBC 1.0 Milestone\"],\n        [\"cosmos/relayer\", 2, \"ibc\", \"Relayer – GoZ Milestone\"],\n        [\"cosmos/ics\", 5, \"ibc\", \"IBC 1.0 – Spec Milestone\"],\n      ],\n    }\n  },\n  async mounted() {\n    this.sources.forEach(async source => {\n      const milestone = await this.getMilestone.apply(null, source)\n      this.milestoneList.push(milestone)\n    })\n  },\n  methods: {\n    async getMilestone(repo, id, logo, defaultTitle, defaultProgress) {\n      const url = `https://github.com/${repo}/milestone/${id}`\n      try {\n        const\n          api = `https://api.github.com/repos/${repo}/milestones/${id}`,\n          m = (await axios.get(api)).data,\n          title = m.title,\n          open = parseInt(m.open_issues),\n          closed = parseInt(m.closed_issues),\n          progress = Math.floor((100 * closed) / (open + closed)).toFixed(0)\n        return { title, repo, progress, logo, url }\n      } catch {\n        return {\n          repo,\n          logo,\n          url,\n          title: defaultTitle,\n          progress: null,\n        }\n      }\n    }\n  }\n}\n",{"version":3,"sources":["GozMilestones.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"GozMilestones.vue","sourceRoot":"node_modules/@cosmos-ui/vue/src/GozMilestones","sourcesContent":["<template>\n  <div>\n    <div class=\"row\" v-for=\"item in milestoneList\" :key=\"item.url\">\n      <goz-row :url=\"item.url\" :progress=\"item.progress\">\n        <template v-slot:icon>\n          <component :is=\"`icon-${item.logo}`\"/>\n        </template>\n        <template v-slot:h1>\n          {{item.title}}\n        </template>\n        <template v-slot:h2>\n          {{item.repo}}\n        </template>\n      </goz-row>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.row {\n  margin-bottom: 1rem;\n}\n.row:last-child {\n  margin-bottom: initial;\n}\n</style>\n\n<script>\nimport GozRow from \"../GozRow/GozRow\"\nimport IconIbc from \"../Icons/IconIbc\"\nimport IconSdk from \"../Icons/IconSdk\"\nimport axios from \"axios\"\n\nexport default {\n  components: {\n    GozRow,\n    IconIbc,\n    IconSdk\n  },\n  data: function() {\n    return {\n      milestone: {\n        logo: \"sdk\",\n        h1: \"Cosmos SDK - GoZ Milestone\",\n        h2: \"cosmos/sdk\"\n      },\n      milestoneList: [],\n      sources: [\n        [\"cosmos/cosmos-sdk\", 24, \"sdk\", \"Cosmos SDK – GoZ Milestone\"],\n        [\"cosmos/cosmos-sdk\", 21, \"sdk\", \"Cosmos SDK – IBC 1.0 Milestone\"],\n        [\"cosmos/relayer\", 2, \"ibc\", \"Relayer – GoZ Milestone\"],\n        [\"cosmos/ics\", 5, \"ibc\", \"IBC 1.0 – Spec Milestone\"],\n      ],\n    }\n  },\n  async mounted() {\n    this.sources.forEach(async source => {\n      const milestone = await this.getMilestone.apply(null, source)\n      this.milestoneList.push(milestone)\n    })\n  },\n  methods: {\n    async getMilestone(repo, id, logo, defaultTitle, defaultProgress) {\n      const url = `https://github.com/${repo}/milestone/${id}`\n      try {\n        const\n          api = `https://api.github.com/repos/${repo}/milestones/${id}`,\n          m = (await axios.get(api)).data,\n          title = m.title,\n          open = parseInt(m.open_issues),\n          closed = parseInt(m.closed_issues),\n          progress = Math.floor((100 * closed) / (open + closed)).toFixed(0)\n        return { title, repo, progress, logo, url }\n      } catch {\n        return {\n          repo,\n          logo,\n          url,\n          title: defaultTitle,\n          progress: null,\n        }\n      }\n    }\n  }\n}\n</script>"]}]}