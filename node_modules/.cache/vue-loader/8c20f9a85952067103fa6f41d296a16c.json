{"remainingRequest":"C:\\xampp\\htdocs\\cosmos\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\cosmos\\src\\components\\navigation\\NavContents.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\xampp\\htdocs\\cosmos\\src\\components\\navigation\\NavContents.vue","mtime":1644920968000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapGetters } from \"vuex\"\nimport PerfectScrollbar from \"perfect-scrollbar\"\nimport watchTocClicks from \"scripts/watchTocClicks.js\"\n// import inViewport from \"scripts/inViewport.js\"\n// import visibleTocActivate from \"scripts/visibleTocActivate.js\"\n// import percentageScrolling from \"scripts/percentageScrolling.js\"\nimport MenuLocale from \"navigation/MenuLocale\"\nimport OverlayBtns from \"buttons/OverlayBtns\"\nimport OverlayBtn from \"buttons/OverlayBtn\"\nexport default {\n  name: \"nav-contents\",\n  components: {\n    MenuLocale,\n    OverlayBtns,\n    OverlayBtn\n  },\n  computed: {\n    ...mapGetters([\"toc\"])\n  },\n  data: () => ({ ps: \"\" }),\n  methods: {\n    setTocVisOnWidth() {\n      let width = document.documentElement.clientWidth\n      if (width >= 1024) {\n        this.setTocVisible(true)\n      } else {\n        this.setTocVisible(false)\n      }\n    },\n    setTocVisible(value) {\n      if (value) {\n        document.querySelector(\".minimal-toc\").style.display = \"block\"\n        this.initToc()\n      } else {\n        document.querySelector(\".minimal-toc\").style.display = \"none\"\n        this.destroyToc()\n      }\n    },\n    initToc() {\n      let container = document.querySelector(\".minimal-toc\")\n      this.ps = new PerfectScrollbar(container)\n      this.$store.commit(\"setTocVisible\", { id: this.tocPage, visible: false })\n      watchTocClicks(this.setTocVisible)\n\n      /*\n      this.$store.commit(\"setElementsVisible\", {\n        id: this.tocPage,\n        els: inViewport(document.querySelectorAll(\"h2, h3, h4, h5\"))\n      })\n      percentageScrolling()\n      */\n    },\n    destroyToc() {\n      if (this.ps) {\n        this.ps.destroy()\n        this.$store.commit(\"setTocVisible\", {\n          id: this.tocPage,\n          visible: false\n        })\n      }\n    }\n  },\n  mounted() {\n    // this.setTocVisOnWidth()\n  },\n  props: [\"toc-page\"]\n  /*\n  ,\n  watch: {\n    elementsVisible() {\n      visibleTocActivate(this.toc[this.tocPage].elementsVisible)\n    },\n    \"$route.params.locale\"() {\n      setTimeout(() => this.setTocVisOnWidth(), 100)\n    }\n  }\n  */\n}\n",{"version":3,"sources":["NavContents.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"NavContents.vue","sourceRoot":"src/components/navigation","sourcesContent":["<template lang=\"pug\">\n.nav-contents\n  overlay-btns\n    template(v-if=\"tocPage === 'whitepaper'\")\n      menu-locale(\n        path='whitepaper'\n        :langs=\"['en-US', 'ko', 'pt', 'zh-CN']\")\n      a(\n        download=\"\"\n        href=\"/cosmos-whitepaper.pdf\"\n      )\n        overlay-btn.print-btn(icon='file_download')\n</template>\n\n<script>\nimport { mapGetters } from \"vuex\"\nimport PerfectScrollbar from \"perfect-scrollbar\"\nimport watchTocClicks from \"scripts/watchTocClicks.js\"\n// import inViewport from \"scripts/inViewport.js\"\n// import visibleTocActivate from \"scripts/visibleTocActivate.js\"\n// import percentageScrolling from \"scripts/percentageScrolling.js\"\nimport MenuLocale from \"navigation/MenuLocale\"\nimport OverlayBtns from \"buttons/OverlayBtns\"\nimport OverlayBtn from \"buttons/OverlayBtn\"\nexport default {\n  name: \"nav-contents\",\n  components: {\n    MenuLocale,\n    OverlayBtns,\n    OverlayBtn\n  },\n  computed: {\n    ...mapGetters([\"toc\"])\n  },\n  data: () => ({ ps: \"\" }),\n  methods: {\n    setTocVisOnWidth() {\n      let width = document.documentElement.clientWidth\n      if (width >= 1024) {\n        this.setTocVisible(true)\n      } else {\n        this.setTocVisible(false)\n      }\n    },\n    setTocVisible(value) {\n      if (value) {\n        document.querySelector(\".minimal-toc\").style.display = \"block\"\n        this.initToc()\n      } else {\n        document.querySelector(\".minimal-toc\").style.display = \"none\"\n        this.destroyToc()\n      }\n    },\n    initToc() {\n      let container = document.querySelector(\".minimal-toc\")\n      this.ps = new PerfectScrollbar(container)\n      this.$store.commit(\"setTocVisible\", { id: this.tocPage, visible: false })\n      watchTocClicks(this.setTocVisible)\n\n      /*\n      this.$store.commit(\"setElementsVisible\", {\n        id: this.tocPage,\n        els: inViewport(document.querySelectorAll(\"h2, h3, h4, h5\"))\n      })\n      percentageScrolling()\n      */\n    },\n    destroyToc() {\n      if (this.ps) {\n        this.ps.destroy()\n        this.$store.commit(\"setTocVisible\", {\n          id: this.tocPage,\n          visible: false\n        })\n      }\n    }\n  },\n  mounted() {\n    // this.setTocVisOnWidth()\n  },\n  props: [\"toc-page\"]\n  /*\n  ,\n  watch: {\n    elementsVisible() {\n      visibleTocActivate(this.toc[this.tocPage].elementsVisible)\n    },\n    \"$route.params.locale\"() {\n      setTimeout(() => this.setTocVisOnWidth(), 100)\n    }\n  }\n  */\n}\n</script>\n"]}]}