{"remainingRequest":"C:\\xampp\\htdocs\\cosmos\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\cosmos\\node_modules\\@cosmos-ui\\vue\\src\\GozSchedule\\GozSchedule.vue?vue&type=style&index=0&id=1aec3751&scoped=true&lang=css&","dependencies":[{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\@cosmos-ui\\vue\\src\\GozSchedule\\GozSchedule.vue","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n.container {\n  color: white;\n  font-family: var(--ds-font-family, inherit);\n  margin-left: 2rem;\n  margin-right: 2rem;\n}\n.row {\n  display: grid;\n  grid-template-columns: 25% 1fr;\n  gap: 2rem;\n}\n.row__aside {\n  text-align: right;\n  font-size: .75rem;\n  text-transform: uppercase;\n  letter-spacing: 0.2em;\n  color: rgba(255, 255, 255, 0.51);\n  padding-top: 1.5rem;\n  padding-bottom: 1.5rem;\n  margin-top: .3rem;\n}\n.row__body {\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n  padding-top: 1.5rem;\n  padding-bottom: 1.5rem;\n  line-height: 1.5;\n}\n::v-deep{\n  font-size: 1rem;\n}\n::v-deep p {\n  margin: 0;\n}\n::v-deep a {\n  color: #66A1FF;\n  text-decoration: none;\n}\n::v-deep ul {\n  padding-left: 2em;\n}\n::v-deep li {\n  margin-top: .75rem;\n  margin-bottom: .75rem;\n  list-style-type: disc;\n}\n@media screen and (max-width: 600px) {\n  .row {\n    display: block;\n  }\n  .row__aside {\n    text-align: initial;\n    padding-bottom: .5rem;\n    font-size: .75rem;\n  }\n  .row__body {\n    padding-top: 0;\n  }\n  ::v-deep {\n    font-size: .875rem;\n  }\n}\n",{"version":3,"sources":["GozSchedule.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"GozSchedule.vue","sourceRoot":"node_modules/@cosmos-ui/vue/src/GozSchedule","sourcesContent":["<template>\n  <div>\n    <div class=\"container\">\n      <div v-for=\"(item, i) in value\" :key=\"i\" class=\"row\">\n        <div class=\"row__aside\">\n          {{item.date}}\n        </div>\n        <div class=\"row__body\" v-html=\"md(item.body)\"></div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.container {\n  color: white;\n  font-family: var(--ds-font-family, inherit);\n  margin-left: 2rem;\n  margin-right: 2rem;\n}\n.row {\n  display: grid;\n  grid-template-columns: 25% 1fr;\n  gap: 2rem;\n}\n.row__aside {\n  text-align: right;\n  font-size: .75rem;\n  text-transform: uppercase;\n  letter-spacing: 0.2em;\n  color: rgba(255, 255, 255, 0.51);\n  padding-top: 1.5rem;\n  padding-bottom: 1.5rem;\n  margin-top: .3rem;\n}\n.row__body {\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n  padding-top: 1.5rem;\n  padding-bottom: 1.5rem;\n  line-height: 1.5;\n}\n::v-deep{\n  font-size: 1rem;\n}\n::v-deep p {\n  margin: 0;\n}\n::v-deep a {\n  color: #66A1FF;\n  text-decoration: none;\n}\n::v-deep ul {\n  padding-left: 2em;\n}\n::v-deep li {\n  margin-top: .75rem;\n  margin-bottom: .75rem;\n  list-style-type: disc;\n}\n@media screen and (max-width: 600px) {\n  .row {\n    display: block;\n  }\n  .row__aside {\n    text-align: initial;\n    padding-bottom: .5rem;\n    font-size: .75rem;\n  }\n  .row__body {\n    padding-top: 0;\n  }\n  ::v-deep {\n    font-size: .875rem;\n  }\n}\n</style>\n\n<script>\nimport MarkdownIt from \"markdown-it\"\n\nexport default {\n  props: {\n    value: {\n      type: Array\n    }\n  },\n  methods: {\n    md(string) {\n      const md = new MarkdownIt()\n      return md.render(string)\n    }\n  }\n}\n</script>"]}]}