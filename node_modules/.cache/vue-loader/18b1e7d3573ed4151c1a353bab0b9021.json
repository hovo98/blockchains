{"remainingRequest":"C:\\xampp\\htdocs\\cosmos\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\xampp\\htdocs\\cosmos\\node_modules\\vue-loader\\lib\\index.js!C:\\xampp\\htdocs\\cosmos\\node_modules\\vue-markdown-loader\\lib\\markdown-compiler.js??ref--16-1!C:\\xampp\\htdocs\\cosmos\\content\\md\\whitepaper-pt.md?vue&type=template&id=e84d265c&","dependencies":[{"path":"C:\\xampp\\htdocs\\cosmos\\content\\md\\whitepaper-pt.md","mtime":1644920968000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\vue-markdown-loader\\lib\\markdown-compiler.js","mtime":1645112455562}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('h1',{attrs:{\"id\":\"cosmos\"}},[_vm._v(\"Cosmos\")]),_c('p',[_vm._v(\"Uma Rede de Distribuição de Ledgers\")]),_c('p',[_vm._v(\"Jae Kwon jae@tendermint.com\"),_c('br'),_vm._v(\"\\nEthan Buchman ethan@tendermint.com\")]),_c('p',[_vm._v(\"Para discussões, \"),_c('a',{attrs:{\"href\":\"https://discord.gg/cosmosnetwork\"}},[_vm._v(\"entre no nosso Matrix\")]),_vm._v(\"!\")]),_c('p',[_c('em',[_vm._v(\"NOTA: Se você pode ler isso no GitHub, então ainda estamos desenvolvendo este documento ativamente. Por favor, cheque regularmente as atualizações!\")])]),_c('p'),_c('div',{staticClass:\"minimal-toc\"},[_c('ul',[_c('li',[_c('a',{attrs:{\"href\":\"#tendermint\"}},[_vm._v(\"Tendermint\")]),_c('ul',[_c('li',[_c('a',{attrs:{\"href\":\"#validadores\"}},[_vm._v(\"Validadores\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#consenso\"}},[_vm._v(\"Consenso\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#clientes-light\"}},[_vm._v(\"Clientes Light\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#previnindo-ataques\"}},[_vm._v(\"Previnindo ataques\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#tmsp\"}},[_vm._v(\"TMSP\")])])])]),_c('li',[_c('a',{attrs:{\"href\":\"#visao-geral-da-cosmos\"}},[_vm._v(\"Visão Geral da Cosmos\")]),_c('ul',[_c('li',[_c('a',{attrs:{\"href\":\"#tendermint-bft\"}},[_vm._v(\"Tendermint-BFT\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#governanca\"}},[_vm._v(\"Governança\")])])])]),_c('li',[_c('a',{attrs:{\"href\":\"#o-hub-e-as-zonas\"}},[_vm._v(\"O Hub e as Zonas\")]),_c('ul',[_c('li',[_c('a',{attrs:{\"href\":\"#o-hub\"}},[_vm._v(\"O Hub\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#as-zonas\"}},[_vm._v(\"As Zonas\")])])])]),_c('li',[_c('a',{attrs:{\"href\":\"#comunicacao-inter-blockchain-ibc\"}},[_vm._v(\"Comunicação Inter-blockchain (IBC)\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#casos-de-uso\"}},[_vm._v(\"Casos de Uso\")]),_c('ul',[_c('li',[_c('a',{attrs:{\"href\":\"#exchange-distribuidas\"}},[_vm._v(\"Exchange Distribuídas\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#pegging-para-outras-criptomoedas\"}},[_vm._v(\"Pegging para Outras Criptomoedas\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#ethereum-scaling\"}},[_vm._v(\"Ethereum Scaling\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#integracao-de-multi-aplicacao\"}},[_vm._v(\"Integração de Multi-Aplicação\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#reducao-de-particao-de-rede\"}},[_vm._v(\"Redução de partição de rede\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#sistema-de-resolucao-de-nomes-federados\"}},[_vm._v(\"Sistema de Resolução de Nomes Federados\")])])])]),_c('li',[_c('a',{attrs:{\"href\":\"#emissao-e-incentivos\"}},[_vm._v(\"Emissão e Incentivos\")]),_c('ul',[_c('li',[_c('a',{attrs:{\"href\":\"#o-token-atom\"}},[_vm._v(\"O Token Atom\")]),_c('ul',[_c('li',[_c('a',{attrs:{\"href\":\"#levantamento-de-fundos\"}},[_vm._v(\"Levantamento de Fundos\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#investindo\"}},[_vm._v(\"Investindo\")])])])]),_c('li',[_c('a',{attrs:{\"href\":\"#limitacoes-do-numero-de-validadores\"}},[_vm._v(\"Limitações do Número de Validadores\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#tornando-se-um-validador-depois-do-dia-da-genesis\"}},[_vm._v(\"Tornando-se um Validador depois do dia da Genesis\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#penalidades-para-validadores\"}},[_vm._v(\"Penalidades para Validadores\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#taxas-de-transacao\"}},[_vm._v(\"Taxas de Transação\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#incentivando-hackers\"}},[_vm._v(\"Incentivando Hackers\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#especificacao-de-governanca\"}},[_vm._v(\"Específicação de Governança\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#parametro-de-mudanca-de-proposta\"}},[_vm._v(\"Parâmetro de Mudança de Proposta\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#texto-da-proposta\"}},[_vm._v(\"Texto da Proposta\")])])])]),_c('li',[_c('a',{attrs:{\"href\":\"#roteiro\"}},[_vm._v(\"Roteiro\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#trabalho-relacionado\"}},[_vm._v(\"Trabalho Relacionado\")]),_c('ul',[_c('li',[_c('a',{attrs:{\"href\":\"#sistemas-de-consenso\"}},[_vm._v(\"Sistemas de Consenso\")]),_c('ul',[_c('li',[_c('a',{attrs:{\"href\":\"#classic-byzantine-fault-tolerance\"}},[_vm._v(\"Classic Byzantine Fault Tolerance\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#participacao-delegada-do-bitshares\"}},[_vm._v(\"Participação delegada do BitShares\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#stellar\"}},[_vm._v(\"Stellar\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#bitcoinng\"}},[_vm._v(\"BitcoinNG\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#casper\"}},[_vm._v(\"Casper\")])])])]),_c('li',[_c('a',{attrs:{\"href\":\"#escala-horizontal\"}},[_vm._v(\"Escala Horizontal\")]),_c('ul',[_c('li',[_c('a',{attrs:{\"href\":\"#protocolo-interledger\"}},[_vm._v(\"Protocolo Interledger\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#sidechains\"}},[_vm._v(\"Sidechains\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#esforcos-de-escalabilidade-do-ethereum\"}},[_vm._v(\"Esforços de Escalabilidade do Ethereum\")]),_c('ul',[_c('li',[_c('a',{attrs:{\"href\":\"#cosmos-vs-ethereum-20-mauve\"}},[_vm._v(\"Cosmos vs Ethereum 2.0 Mauve\")])])])])])]),_c('li',[_c('a',{attrs:{\"href\":\"#escala-geral\"}},[_vm._v(\"Escala Geral\")]),_c('ul',[_c('li',[_c('a',{attrs:{\"href\":\"#lightning-network\"}},[_vm._v(\"Lightning Network\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#segregated-witness\"}},[_vm._v(\"Segregated Witness\")])])])])])]),_c('li',[_c('a',{attrs:{\"href\":\"#apendice\"}},[_vm._v(\"Apêndice\")]),_c('ul',[_c('li',[_c('a',{attrs:{\"href\":\"#responsabilidade-de-fork\"}},[_vm._v(\"Responsabilidade de Fork\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#consenso-tendermint\"}},[_vm._v(\"Consenso Tendermint\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#clientes-leves-do-tendermint\"}},[_vm._v(\"Clientes Leves do Tendermint\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#prevencao-de-ataques-de-longo-alcance\"}},[_vm._v(\"Prevenção de ataques de longo alcance\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#superando-forks-e-ataques-de-censura\"}},[_vm._v(\"Superando Forks e Ataques de Censura\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#especificacao-tmsp\"}},[_vm._v(\"Especificação TMSP\")]),_c('ul',[_c('li',[_c('a',{attrs:{\"href\":\"#appendtx\"}},[_vm._v(\"AppendTx\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#checktx\"}},[_vm._v(\"CheckTx\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#commit\"}},[_vm._v(\"Commit\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#query\"}},[_vm._v(\"Query\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#flush\"}},[_vm._v(\"Flush\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#info\"}},[_vm._v(\"Info\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#setoption\"}},[_vm._v(\"SetOption\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#initchain\"}},[_vm._v(\"InitChain\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#beginblock\"}},[_vm._v(\"BeginBlock\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#endblock\"}},[_vm._v(\"EndBlock\")])])])]),_c('li',[_c('a',{attrs:{\"href\":\"#reconhecimento-de-entrega-de-pacotes-ibc\"}},[_vm._v(\"Reconhecimento de entrega de pacotes IBC\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#arvore-merkle-e-especificacao-de-prova\"}},[_vm._v(\"Árvore Merkle e Especificação de Prova\")]),_c('ul',[_c('li',[_c('a',{attrs:{\"href\":\"#arvore-simples\"}},[_vm._v(\"Árvore Simples\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#arvore-iavl\"}},[_vm._v(\"Árvore IAVL+\")])])])]),_c('li',[_c('a',{attrs:{\"href\":\"#tipos-de-transacao\"}},[_vm._v(\"Tipos de Transação\")]),_c('ul',[_c('li',[_c('a',{attrs:{\"href\":\"#ibcblockcommittx\"}},[_vm._v(\"IBCBlockCommitTx\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#ibcpackettx\"}},[_vm._v(\"IBCPacketTx\")])])])])])]),_c('li',[_c('a',{attrs:{\"href\":\"#agradecimentos\"}},[_vm._v(\"Agradecimentos\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#citacoes\"}},[_vm._v(\"Citações\")]),_c('ul',[_c('li',[_c('a',{attrs:{\"href\":\"#links-nao-classificados\"}},[_vm._v(\"Links não classificados\")])])])])])]),_c('p'),_c('p',[_vm._v(\"O sucesso combinado do ecossistema de código aberto, compartilhamento\\nde arquivos descentralizado e criptomoedas públicas tem inspirado um conhecimento sobre\\nprotocolos descentralizados na Internet que podem ser utilizados para melhorar radicalmente\\na infraestrutura. Vimos aplicações de blockchain especializadas como Bitcoin\\n\"),_c('a',{attrs:{\"href\":\"https://bitcoin.org/bitcoin.pdf\"}},[_vm._v(\"[1]\")]),_vm._v(\" (uma criptomoeda), Zerocash \"),_c('a',{attrs:{\"href\":\"http://zerocash-project.org/paper\"}},[_vm._v(\"[2]\")]),_vm._v(\" (uma criptomoeda para privacidade\\n), and generalized smart contract platforms such as Ethereum \"),_c('a',{attrs:{\"href\":\"https://github.com/ethereum/wiki/wiki/White-Paper\"}},[_vm._v(\"[3]\")]),_vm._v(\",\\ncom inúmeras aplicações distribuídas para a Etherium Virtual Machine (EVM), como Augur (uma previsão\\nde mercado) e TheDAO \"),_c('a',{attrs:{\"href\":\"https://download.slock.it/public/DAO/WhitePaper.pdf\"}},[_vm._v(\"[4]\")]),_vm._v(\" (um clube de investimento).\")]),_c('p',[_vm._v(\"Contudo, até à data, estas blockchains sofreram uma série de inconvenientes,\\nincluindo sua ineficiência energética, desempenho fraco ou limitado e\\nmecanismos de governança imaturos. Propostas de escala\\nde processamento de transações da Bitcoin, como Testemunhas Separadas \"),_c('a',{attrs:{\"href\":\"https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki\"}},[_vm._v(\"[5]\")]),_vm._v(\" e\\nBitcoinNG \"),_c('a',{attrs:{\"href\":\"https://arxiv.org/pdf/1510.02037v2.pdf\"}},[_vm._v(\"[6]\")]),_vm._v(\", soluções de escalonamento vertical que permanecem\\nlimitadas pela capacidade de uma única máquina física, a fim de\\nproporcionar uma auditabilidade completa. A Rede Lightning \"),_c('a',{attrs:{\"href\":\"https://lightning.network/lightning-network-paper-DRAFT-0.5.pdf\"}},[_vm._v(\"[7]\")]),_vm._v(\" pode ajudar\\no Bitcoin no quesito volume de transações, deixando algumas transações completamente\\nfora da carteira, e é bem adequado para micropagamentos e preservando a privacisadade por pagamentos\\nRails, mas pode não ser adequado para necessidades de escala mais abrangente.\")]),_c('p',[_vm._v(\"Uma solução ideal é a de permitir blockchains paralelos múltiplos para\\ninteroperação, mantendo suas propriedades de segurança. Isto provou\\nser difícil, se não impossível, com prova de trabalho. A mineração combinada, por exemplo,\\npermite que o trabalho feito para proteger uma blockchain mãe seja reutilizado em uma blockchain nova,\\nmas as transações ainda devem ser validadas, em ordem, por cada nó, e uma\\nblockchain Merge-mined é vulnerável a ataques se a maioria do poder de\\nhashing sobre a mãe não é ativamente merge-mined da nova. Uma revisão acadêmica\\ndo \"),_c('a',{attrs:{\"href\":\"http://vukolic.com/iNetSec_2015.pdf\"}},[_vm._v(\"arquiteturas de redes alternativas blockchain\\n\")]),_vm._v(\" é fornecida para\\ncontextualizar, e fornecemos resumos de outras propostas e suas desvantagens em\\n\"),_c('a',{attrs:{\"href\":\"#trabalho-relatado\"}},[_vm._v(\"Trabalho relatado\")]),_vm._v(\".\")]),_c('p',[_vm._v(\"Nesse relato nós apresentamos a Cosmos, uma novela da arquitetura de rede blockchain que aborda todos\\nesses problemas. Cosmos é uma rede de muitos blockchains independentes, chamados\\nZonas. As zonas são alimentadas pelo Tendermint BFTork \"),_c('a',{attrs:{\"href\":\"https://github.com/tendermint/tendermint/wiki\"}},[_vm._v(\"[8]\")]),_vm._v(\", que fornece uma\\nalta performace, consistência, segurança\\n\"),_c('a',{attrs:{\"href\":\"https://blog.cosmos.network/tendermint-vs-pbft-12e9f294c9ab\"}},[_vm._v(\"PBFT-como\")]),_vm._v(\" um mecanismo de consenso\\nrigoroso, onde \"),_c('a',{attrs:{\"href\":\"#fork-respons%C3%A1vel\"}},[_vm._v(\"fork-responsável\")]),_vm._v(\" tem-se garantias de deter\\ncomportamentos maliciosos. O algoritmo de consenso BFT do Tendermint BFT é\\nbem adaptado para integrar blockchains públicas de prova de estaca.\")]),_c('p',[_vm._v(\"A primeira zona na Cosmos é chamada de Cosmos Hub. A Cosmos Hub é uma criptomoeda\\nmulti-asset de prova de estaca com um simples mecanismo de governança\\no qual permite a rede se adaptar e atualizar. Além disso, a Cosmos Hub pode ser\\nextendida por conexão com outras zonas.\")]),_c('p',[_vm._v(\"O hub e as zonas da rede Cosmos comunicam-se uma com a outra através de um\\nprotocolo de comunicação Inter-blockchain (IBC), um tipo de UDP ou TCP virtual para\\nblockchains. Os tokens podem ser transferidos de uma zona para outra com segurança e\\nrapidez sem necessidade de liquidez cambial entre as zonas. Em vez disso, todas\\nas transferências de tokens inter-zonas passam pelo Hub Cosmos, que mantêm\\na quantidade total de tokens detidas por cada zona. O hub isola cada zona da\\nfalha das outras zonas. Porque qualquer um pode conectar uma nova zona no Hub Cosmos,\\no que permite futuras compatibilidades com novas blockchains inovadoras.\")]),_c('h2',{attrs:{\"id\":\"tendermint\"}},[_vm._v(\"Tendermint\")]),_c('p',[_vm._v(\"Nesta seção, descrevemos o protocolo de consenso da Tendermint e a interface\\nusada para construir aplicações através dele. Para mais detalhes, consulte o \"),_c('a',{attrs:{\"href\":\"#ap%C3%AAndice\"}},[_vm._v(\"apêndice\")]),_vm._v(\".\")]),_c('h3',{attrs:{\"id\":\"validadores\"}},[_vm._v(\"Validadores\")]),_c('p',[_vm._v(\"No algorítimo de tolerância e falhas clássicas Bizantinas (BFT), cada node tem o mesmo\\npeso. Na Tendermint, nodes tem uma quantidade positiva de \"),_c('em',[_vm._v(\"poder de voto\")]),_vm._v(\", e\\nesses nodes que tem poder de voto positivo são chamados de \"),_c('em',[_vm._v(\"validadores\")]),_vm._v(\". Validadores\\nparticipam de um protocolo de consenso por transmissão de assinaturas criptográficas,\\nou \"),_c('em',[_vm._v(\"votos\")]),_vm._v(\", para concordar com o próximo bloco.\")]),_c('p',[_vm._v(\"Os poderes de voto dos validadores são determinados na gênese, ou são alterados\\nde acordo com a blockchain, dependendo da aplicação. Por exemplo,\\nem uma aplicação de prova de participação, como o Hub da Cosmos, o poder de voto pode ser\\ndeterminado pela quantidade de tokens usados como garantia.\")]),_c('p',[_c('em',[_vm._v(\"NOTA: Frações como ⅔ e ⅓ referem-se a frações do total de votos,\\nnunca o número total de validadores, a menos que todos os validadores tenham\\npeso.\")]),_c('em',[_vm._v(\"NOTE: +⅔ significa “mais do que ⅔”, enquanto ⅓+ significa “⅓ ou mais”.\")])]),_c('h3',{attrs:{\"id\":\"consenso\"}},[_vm._v(\"Consenso\")]),_c('p',[_vm._v(\"Tendermint é um protocolo de consenso BFT parcialmente sincronizado e derivado do\\nalgoritmo de consenso DLS \"),_c('a',{attrs:{\"href\":\"http://groups.csail.mit.edu/tds/papers/Lynch/jacm88.pdf\"}},[_vm._v(\"[20]\")]),_vm._v(\". Tendermint é notável por sua simplicidade,\\ndesempenho, e \"),_c('a',{attrs:{\"href\":\"#fork-respons%C3%A1vel\"}},[_vm._v(\"fork-responsável\")]),_vm._v(\". O protocolo\\nrequer um grupo determinado de validadores, onde cada validador é identificado por\\nsua chave pública. Validadores chegarão a um consenso em um bloco por vez,\\nonde um bloco é uma lista de transações. A votação para o consenso sobre um bloco\\nacontece por rodada. Cada rodada tem uma líder-de-rodada, ou proponente, que propõe um bloco. Os\\nvalidadores, em seguida, votam, por etapas, sobre a aceitação do bloco proposto\\nou passam para a próxima rodada. O proponente de uma rodada é escolhido\\nde acordo com uma lista ordenada de validadores, proporcionalmente à seu\\npoder de voto.\")]),_c('p',[_vm._v(\"Os detalhes completos do protocolo estão descritos\\n\"),_c('a',{attrs:{\"href\":\"https://github.com/tendermint/tendermint/wiki/Byzantine-Consensus-Algorithm\"}},[_vm._v(\"aqui\")]),_vm._v(\".\")]),_c('p',[_vm._v(\"A segurança da Tendermint é baseada na tolerância e falhas clássicas Bizantinas ótimas\\natravés de super-maioria (+⅔) e um mecanismo de bloqueio. Juntas, elas garantem\\nisso:\")]),_c('ul',[_c('li',[_vm._v(\"⅓+ o poder de voto deve ser bizantino devido a violações de segurança, onde mais\\n  que dois valores são comprometidos.\")]),_c('li',[_vm._v(\"se algum conjunto de validadores tiver sucesso em violar a segurança, ou mesmo tentarem\\npara isso, eles podem ser identificados pelo protocolo. Isso inclui tanto o voto\\npara blocos conflitantes quanto a transmissão de votos injustificados.\")])]),_c('p',[_vm._v(\"Apesar de suas fortes garantias, a Tendermint oferece um desempenho excepcional. Dentro\\nde Benchmarks de 64 nós distribuídos em 7 datacenters em 5 continentes, em\\nnuvens de commodities, o consenso da Tendermint pode processar milhares de\\ntransações por segundo, com tempo de resposta entre um a dois\\nsegundos. Notavelmente, o desempenho muito além de mil transações por segundo\\né mantido mesmo em condições adversas, com validadores falhando ou\\ncombinando votos maliciosamente. Veja a figura abaixo para mais detalhes.\")]),_c('p',[_c('img',{attrs:{\"src\":\"https://raw.githubusercontent.com/gnuclear/atom-whitepaper/master/images/tendermint_throughput_blocksize.png\",\"alt\":\"Figura do desempenho da Tendermint\"}})]),_c('h3',{attrs:{\"id\":\"clientes-light\"}},[_vm._v(\"Clientes Light\")]),_c('p',[_vm._v(\"O principal benefício do algoritmo de consenso da Tendermint é um cliente leve e simplificado\\nde segurança, tornando-o um candidato ideal para o uso de dispositivos móveis e casos de uso na\\ninternet. Enquanto um cliente leve do Bitcoin deve sincronizar blockchains e encontrar\\no que tem mais prova de trabalho, os clientes light da Tendermint precisa apenas\\ndas alterações feitas pelo conjunto dos validadores, em seguida, verifica-se o +⅔ PreCommits\\nno último bloco para determinar o estado atual.\")]),_c('p',[_vm._v(\"Provas claras e sucintas do cliente também permite \"),_c('a',{attrs:{\"href\":\"#comunica%C3%A7%C3%A3o-inter-blockchain-ibc\"}},[_vm._v(\"comunicação-inter-\\nblockchain\")]),_vm._v(\".\")]),_c('h3',{attrs:{\"id\":\"previnindo-ataques\"}},[_vm._v(\"Previnindo ataques\")]),_c('p',[_vm._v(\"A Tendermint dispõe de medidas de proteção para evitar\\nataques, como \"),_c('a',{attrs:{\"href\":\"#previnindo-ataques-de-longa-dist%C3%A2ncia\"}},[_vm._v(\"gastos duplos em longa-distância-sem-estaca double\\nspends\")]),_vm._v(\" e\\n\"),_c('a',{attrs:{\"href\":\"#superando-forks-e-censurando-ataques\"}},[_vm._v(\"censura\")]),_vm._v(\". Esses são discutidos\\ncompletamente no \"),_c('a',{attrs:{\"href\":\"#ap%C3%AAndice\"}},[_vm._v(\"apêndice\")]),_vm._v(\".\")]),_c('h3',{attrs:{\"id\":\"tmsp\"}},[_vm._v(\"TMSP\")]),_c('p',[_vm._v(\"O algoritmo de consenso Tendermint é implementado através de um programa chamado Tendermint\\nCore. O Tendermint BFT é um “mecanismo de consenso” independente de aplicações que\\ntransformam qualquer aplicação blackbox em uma réplica distribuída na\\nBlockchain. Tendermint BFT conecta-se ao blockchain\\natravés de aplicações do Tendermint Socket Protocol (TMSP) \"),_c('a',{attrs:{\"href\":\"https://github.com/tendermint/tmsp\"}},[_vm._v(\"[17]\")]),_vm._v(\". Assim, o TMSP\\npermite que as aplicações da blockchain sejam programadas em qualquer idioma, não apenas\\na linguagem de programação que o mecanismo de consenso é escrito, além disso,\\no TMSP torna possível a troca fácil da camada de consenso de qualquer\\ntipo de blockchain.\")]),_c('p',[_vm._v(\"Nós fizemos uma analogia com a bem conhecida criptogradia do Bitcoin. Bitcoin é uma\\nblockchain de criptomoedas onde cada nó mantém uma Unspent totalmente auditada\\ne banco de dados de saída de transação (UTXO). Se alguém quisesse criar um Bitcoin-like\\nTMS, a Tendermint BFT seria responsável por\")]),_c('ul',[_c('li',[_vm._v(\"Compartilhar blocos e transações entre os nós\")]),_c('li',[_vm._v(\"Estabelecer uma ordem de transações canônica/imutável (a blockchain)\")])]),_c('p',[_vm._v(\"Entretanto, o aplicativo TMSP seria responsável por\")]),_c('ul',[_c('li',[_vm._v(\"Manter o banco de dados UTXO\")]),_c('li',[_vm._v(\"Validar a criptografia das assinaturas das transações\")]),_c('li',[_vm._v(\"Previnir transações vindas de gastos de fundos não exisentes\")]),_c('li',[_vm._v(\"Permitir aos clientes a consulta do banco de dados UTXO\")])]),_c('p',[_vm._v(\"Tendermint é capaz de decompor o design da blockchain, oferecendo um simples\\nAPI entre o processo da aplicação e o processo do consenso.\")]),_c('h2',{attrs:{\"id\":\"visao-geral-da-cosmos\"}},[_vm._v(\"Visão Geral da Cosmos\")]),_c('p',[_vm._v(\"Cosmos é uma rede de blockchains paralelos e independentes que são alimentadas pelo\\nclássico algorítimo de consenso BFT como a Tendermint\\n\"),_c('a',{attrs:{\"href\":\"http://github.com/tendermint/tendermint\"}},[_vm._v(\"1\")]),_vm._v(\".\")]),_c('p',[_vm._v(\"A primeira blockchain dessa rede será a Cosmos Hub. A Cosmos Hub\\nconecta as outras blockchains (ou \"),_c('em',[_vm._v(\"zonas\")]),_vm._v(\") através do protocolo de comunicação-inter-\\nblockchain. A Cosmos Hub rastreia vários tipos de tokens e mantém\\nregisto do número total de tokens em cada zona ligada. Os tokens podem ser\\ntransferidos de uma zona para outra de forma segura e rápida, sem necessidade de\\numa troca líquida entre zonas, porque todas as transferências de moedas ocorre\\natravés da Cosmos Hub.\")]),_c('p',[_vm._v(\"Essa arquitetura resolve muitos dos problemas enfrentados atualmente pelas blockchains,\\ntais como interoperabilidade de aplicativos, escalabilidade e capacidade de atualização contínua.\\nPor exemplo, as zonas baseadas do Bitcoin, Go-Ethereum, CryptoNote, ZCash, ou qualquer\\nsistema blockchain pode ser ligado ao Cosmos Hub. Essas zonas permite a Cosmos\\no escalonamento infinito para atender a demanda global de transações. As Zonas também são um grande\\napoio para a exchange distribuída, que também serão apoiadas.\")]),_c('p',[_vm._v(\"Cosmos não é apenas uma única ledger distribuídos, o Cosmos Hub não é um\\njardim cercado ou o centro do universo. Estamos elaborando um protocolo para\\numa rede aberta de legers distribuídos que pode servir como um novo\\nfuturos para sistemas financeiros, baseados em princípios de criptografia, economia\\nteoria de consenso, transparência e responsabilidade.\")]),_c('h3',{attrs:{\"id\":\"tendermint-bft\"}},[_vm._v(\"Tendermint-BFT\")]),_c('p',[_vm._v(\"O Cosmos Hub é a primeira blockchain pública na rede Cosmos, alimentada pelo\\nalgoritimo de consenso BFT Tendermint. A Tendermint é um projeto de fonte aberta que\\nnasceu em 2014 para abordar a velocidade, a escalabilidade e as questões\\ndo algoritimo de consenso da prova-de-trabalho do Bitcoin. Usando e melhorando\\nalgoritmos BFT comprovados e desenvolvidos no MIT em 1988 \"),_c('a',{attrs:{\"href\":\"http://groups.csail.mit.edu/tds/papers/Lynch/jacm88.pdf\"}},[_vm._v(\"[20]\")]),_vm._v(\", o time Tendermint foi o primeiro a\\nque demonstrou conceitualmente uma prova de estaca das criptomoedas que aborda o\\nproblema de “sem-estaca” sofrido pelas criptomoedas da primeira geração\\ntais como NXT e BitShares.\")]),_c('p',[_vm._v(\"Hoje, praticamente todas carteiras móveis de Bitcoin usam servidores confiáveis, que fornece\\na elas transações com verificação. Isso porque a prova-de-trabalho exige\\nmuitas confirmações antes que uma transação possa ser considerada\\nirreversivel e completa. Os ataques de gasto-duplo já foram demonstrados em\\nserviços como a CoinBase.\")]),_c('p',[_vm._v(\"Ao contrário de outros sistemas de consenso blockchain, a Tendermint oferece\\ncomprovação segura de pagamento para o cliente móvel. Uma vez que a Mint é\\nprojetada para nunca passar por um fork, carteiras móveis podem receber confirmações de transações\\ninstantâneas, o que torna os pagamentos confiáveis e práticos através de\\nsmartphones. Isto tem implicações significativas para as aplicações da Internet.\")]),_c('p',[_vm._v(\"Validadores na Cosmos tem uma função similar aos mineiros do Bitcoin, mas usam\\nassinaturas criptografadas para votar. Validadores são máquinas seguras e dedicadas\\nque são responsáveis por validar os blocos. Os não validadores podem delegar através de seus tokens estacados\\n(chamados “atoms”) a qualquer validador para ganhar uma parcela das taxas da blockchain\\ne recompensas de atoms, mas eles correm o risco de serem punidos (cortados) se o\\no validador de delegados for invadido ou violar o protocolo. A segurança comprovada\\ngarantida pelo consenso BFT da Tendermint, e o depósito de garantia das\\npartes interessadas - validadores e delegados - fornecem dados prováveis,\\nsegurança para os nós e clientes light.\")]),_c('h3',{attrs:{\"id\":\"governanca\"}},[_vm._v(\"Governança\")]),_c('p',[_vm._v(\"Ledgers de distribuição pública devem ser constituídos de um sistema de governança.\\nO Bitcoin confia na Fundação Bitcoin e na mineração para\\ncoordenar upgrades, mas este é um processo lento. Ethereum foi dividido em ETH e\\nETC depois de hard-fork para se recuperar do hack TheDAO, em grande parte porque não havia\\ncontrato sócial prévio, nem um mecanismo para tomar tais decisões.\")]),_c('p',[_vm._v(\"Os validadores e os delegados do Cosmos Hub podem votar propostas que\\nalteraram automaticamente os parâmetros predefinidos do sistema (tal como o gás limite do\\nbloco), coordenar upgrades, bem como votar em emendas para a\\nconstituição que governa as políticas do Cosmos Hub. A Constituição\\npermite a coesão entre as partes interessadas em questões como o roubo\\ne bugs (como o incidente TheDAO), permitindo uma resolução mais rápida e mais limpa.\")]),_c('p',[_vm._v(\"Cada zona pode ter sua própria constituição e mecanismo de governança.\\nPor exemplo, o Cosmos Hub pode ter uma constituição que reforça a imutabilidade\\nno Hub (sem roll-backs, a não ser por bugs em implementações dos nós do Cosmos Hub),\\nenquanto cada zona pode ter sua própria política sobre os roll-backs.\")]),_c('p',[_vm._v(\"Ao disponibilizar a interoperabilidade em diferentes políticas das zonas, a rede Cosmos\\ndá aos usuários total liberdade e potenciais permissões para\\nexperimentos.\")]),_c('h2',{attrs:{\"id\":\"o-hub-e-as-zonas\"}},[_vm._v(\"O Hub e as Zonas\")]),_c('p',[_vm._v(\"Aqui nós descrevemos o modelo do roteiro de descentralização e ecalabilidade. Cosmos é uma\\nrede de muitas blockchains alimentadas pela Tendermint. Enquanto existirem propostas visando\\ncriar um\\\"blockchain solitário\\\" com ordens de transações cheias, a Cosmos\\npermite que muitas blockchains rodem junto de outra enquanto mantêm a\\ninteroperabilidade.\")]),_c('p',[_vm._v(\"Basicamente, o Cosmos Hub gerencia várias blockchains independentes chamadas “zonas”\\n(as vezes chamadas de “shards”, em referência a técnica de escalonamento de\\nbando de dados conhecida como “sharding”). Uma constante transmissão de blocos recentes das\\nzonas atuando no Hub permite ao Hub manter o estado de cada zona atualizado.\\nSendo assim, cada zona mantêm ativa o estado do Hub (mas as zonas não se mantêm ativas\\ncom qualquer outro exceto o Hub). Pacotes de informação são\\nentão comunicados de uma zona para outra atráves de Merkle-proofs como evidências,\\nessas informações são enviadas e recebidas. Esse mecanismo é chamado de\\ncomunicação inter-blockchain, ou IBC para encurtar.\")]),_c('p',[_c('img',{attrs:{\"src\":\"https://raw.githubusercontent.com/gnuclear/atom-whitepaper/master/images/hub_and_zones.png\",\"alt\":\"Figura de reconhecimentodo hub e das zonas\"}})]),_c('p',[_vm._v(\"Qualquer uma das zonas podem ser hubs para formar gráficos acíclicos, mas\\nmas para deixar claro, nós vamos apenas descrever uma simples configuração para\\num único hub, e várias zonas que não são hubs.\")]),_c('h3',{attrs:{\"id\":\"o-hub\"}},[_vm._v(\"O Hub\")]),_c('p',[_vm._v(\"O Cosmos Hub é uma blockchain que hospeda um ledger de distribuíção de multi-asset,\\nonde os tokens podem ser mantidos por usuários individuais ou pelas próprias zonas. Esses\\ntokens podem ser movidos de uma zona para outra em um pacote IBC especial chamado\\n“coin packet”. O hub é responsavel por preservar a manutenção global de\\ntoda a quantia de cada token nas zonas. As transações de moedas no pacote IBC\\nprecisam ser feitas pelo remetente, hub, e blockchain recebedor.\")]),_c('p',[_vm._v(\"Desde a atuação do Cosmos Hub como ledger principal para todos o\\nsistema, a segurança do Hub é de suma importância. Enquanto cada\\nzona pode ser uma blockchain Tendermint que é segurada por 4((ou talvez\\nmenos caso o consenso BFT não seja necessário), o Hub precisa ser segurado por uma descentralização\\nglobalizada feita pelos validadores que podem evitar os mais severos tipos de\\nataques, como uma partição de rede continental ou um estado-nação fazendo\\nataques.\")]),_c('h3',{attrs:{\"id\":\"as-zonas\"}},[_vm._v(\"As Zonas\")]),_c('p',[_vm._v(\"Uma zona Cosmos é uma blockchain independente das trocas de mensagens IBC com o\\nHub. Na perspectiva do Hub, uma zona é uma conta multi-asset dynamic-membership\\nmulti-signature que pode enviar e receber tokens usando pacotes IBC. Como\\numa conta de criptomoeda, uma zona não pode transferir mais tokens do que ela possui, mas\\npode receber tokens de outras que os tem. Uma zona pode ser usada como uma\\n“fonte” de um ou mais tipos de tokens, garantindo o poder de aumentar o estoque desse\\ntoken.\")]),_c('p',[_vm._v(\"Os atoms do Cosmos Hub podem ser estacados por validadores de uma zona conectada ao\\nHub. Enquanto os ataques de gasto-duplo nesses zonas podem resultar em um core dos\\natoms com o fork-responsável da Tendermint, uma zona onde +⅔ do poder de voto\\nsão Bizantinos podem deixar o estado inválido. O Cosmos Hub não verifica ou\\nexecuta transações ocorridas em outras zonas, então essa é uma responsabilidade dos\\nusuários para enviar os tokes ara zonas que eles confiem. Futuramente, o sistema de\\ngovernança do Cosmos Hub irá implementar propostas para o Hub e para as falhas\\ndas zonas. Por exemplo, um token de saída transferido para algumas (ou todas) zonas podem ser\\nsegurados em caso de uma emergência de quebra de circuito das zonas(uma parada temporária\\nnas transferências dos tokens) quando um ataque é detectado.\")]),_c('h2',{attrs:{\"id\":\"comunicacao-inter-blockchain-ibc\"}},[_vm._v(\"Comunicação Inter-blockchain (IBC)\")]),_c('p',[_vm._v(\"Agora nós olhamos para como o Hub e as zonas vão se comunicar. Por exemplo, se\\naqui são três blockchains, “Zona1”, “Zona2”, and “Hub”, e nós queremos que a\\n“Zona1” produza um pacote destinado para a “Zona2” indo através do “Hub”. Para mover um\\npacote de uma blockchain para outra, uma prova é feita na\\ncadeia recebedora. A prova atesta esse envio publicado na cadeia de destino por uma alegação\\nde pacote. Para a cadeia recebedora checar essa prova, isso é possível\\npor um block principal de envio. Esse mecanismo é similar ao usado por\\ncadeias paralelas, que requerem duas cadeias interagindo uma com a outra via\\ntransmissões bidirecionais por dados de prova-de-existência (transações).\")]),_c('p',[_vm._v(\"O protocolo IBC pode naturalmente ser definido usando dois tipos de transações: uma\\ntransação \"),_c('code',{pre:true},[_vm._v(\"IBCBlockCommitTx\")]),_vm._v(\", a qual permite uma blockchain provar para qualquer\\nespectador o mais recente hash-de-bloco, e uma transação \"),_c('code',{pre:true},[_vm._v(\"IBCPacketTx\")]),_vm._v(\", a qual\\npermite uma blockchain provar para qualquer espectador que o pacote recebido foi realmente\\npublicado pelo remetente, via Merkle-proof para um hash-de-bloco\\nrecente.\")]),_c('p',[_vm._v(\"Ao misturar o mecanismo ICB em duas transações separadas, nós permitimos\\nque o mecanismo de mercado de taxa nativa da blockchain recebedora determine quais pacotes\\nirão se comprometer (isto é, ser reconhecido), permitindo simultaneamente que uma\\nblockchain envie de quantos pacotes de saída forem permitidos.\")]),_c('p',[_c('img',{attrs:{\"src\":\"https://raw.githubusercontent.com/gnuclear/atom-whitepaper/master/msc/ibc_without_ack.png\",\"alt\":\"Figura da Zona1, Zona2, e Hub IBC semreconhecimento\"}})]),_c('p',[_vm._v(\"No exemplo acima, para atualizar o hash de blocos da\\n“Zona1” no “Hub” (ou do “Hub” para a “Zona2”), uma transação \"),_c('code',{pre:true},[_vm._v(\"IBCBlockCommitTx\")]),_vm._v(\"\\nprecisa ser feita no “Hub” com o hash de bloco da “Zona1” (ou na\\n“Zona2” com o hash de bloco do “Hub”).\")]),_c('p',[_c('em',[_vm._v(\"Veja \"),_c('a',{attrs:{\"href\":\"#ibcblockcommittx\"}},[_vm._v(\"IBCBlockCommitTx\")]),_vm._v(\" e \"),_c('a',{attrs:{\"href\":\"#ibcpacketcommit\"}},[_vm._v(\"IBCPacketTx\")]),_vm._v(\"\\npara mais informações sobre os 2 tipos de transação IBC.\")])]),_c('h2',{attrs:{\"id\":\"casos-de-uso\"}},[_vm._v(\"Casos de Uso\")]),_c('h3',{attrs:{\"id\":\"exchange-distribuidas\"}},[_vm._v(\"Exchange Distribuídas\")]),_c('p',[_vm._v(\"Da mesma forma que Bitcoin é mais seguro por ter uma distribuíção,\\ne replicação em massa, podemos tornar as exchanges menos vulneráveis a\\nHacks internos executando-a no blockchain. Chamamos isso de exchange\\ndistribuída.\")]),_c('p',[_vm._v(\"O que a comunidade de criptomoedas chama hoje de intercâmbio descentralizado\\nbaseado em algo chamado transações “atomic cross-chain” (AXC). Com uma transação\\nAXC, dois usuários em duas diferentes cadeias podem fazer duas transações\\nde transferências que serão feitas juntas nas duas ledgers, ou nenhuma (isto é,\\nAtomicamente). Por exemplo, dois usuários podem trocar bitcoins por ether (ou qualquer dois\\nTokens em dois ledgers diferentes) usando transações AXC, mesmo que o Bitcoin\\ne o Ethereum não estão conectados entre si. O benefício de executar um\\ntroca em transações AXC é que nenhum dos usuários precisam confiar um no outro ou\\nno serviço de correspondência comercial. A desvantagem é que ambas as partes precisam estar\\non-line para o negócio ocorrer.\")]),_c('p',[_vm._v(\"Outro tipo de intercâmbio descentralizado é um sistema de\\nexchange que funciona em seu próprio blockchain. Os usuários deste tipo de exchange podem\\nenviar uma ordem de limite e desligar o computador, e o negócio pode ser executado\\nsem que o usuário esteja online. O blockchain combina e completa o negócio\\nem nome do negociante.\")]),_c('p',[_vm._v(\"Uma exchange centralizada pode criar um vasto livro de ordens de ordens e\\natrair mais comerciantes. A liquidez gera mais liquidez no mundo cambial,\\ne assim há um forte efeito na rede (ou pelo menos efeito de vencedor-leva-mais)\\nno negócio de câmbio. A atual líder para troca de criptomoedas\\nhoje é a Poloniex com um volume de 24 milhões de dólares por dia, e em segundo lugar a\\nBitfinex com um volume de US$5 milhões por dia. Dados esses fortes efeitos na rede,\\né improvável que as exchanges descentralizadas baseadas no AXC ganhem volume\\ncentrais. Para uma exchange descentralizada competir com um\\nexchange centralizada, seria necessário dar suporte aos livros de\\nordens. Somente uma exchange distribuída em uma blockchain pode fornecer isso.\")]),_c('p',[_vm._v(\"Tendermint fornece benefícios adicionais para realizar uma transação mais rápida. Com a\\nfinalidade de dar prioridade a rapidez sem sacrificar a consistência, as zonas no Cosmos podem\\nfinalizar transações rápidas - tanto para transações de ordem de\\ntransferências de tokens quanto para outras zonas IBC.\")]),_c('p',[_vm._v(\"Dado o estado das exchanges de criptomoedas hoje em dia, uma grande\\nexchange distribuída da Cosmos (aka o Cosmos DEX). A transação e\\na capacidade de processamento, bem como a latência de processos, podem ser\\ncentrais. Os comerciantes podem enviar ordens de limite que podem ser executadas\\nsem que ambas as partes tenham que estar online. E com Tendermint, o Cosmos Hub,\\ne o IBC, os comerciantes podem mover fundos dentro e fora da exchange e para outras\\nzonas com rapidez.\")]),_c('h3',{attrs:{\"id\":\"pegging-para-outras-criptomoedas\"}},[_vm._v(\"Pegging para Outras Criptomoedas\")]),_c('p',[_vm._v(\"Uma zona privilegiada pode agir como token simbolico de uma\\ncriptomoeda. A peg é semelhante à relação entre uma\\nzona e o Cosmos Hub; Ambos devem manter-se atualizados com os\\noutros, afim de verificar provas de que os tokens passaram de um para o outro. A\\nPeg-zone na rede Cosmos mantém-se com o Hub, bem como o\\noutra cryptomoeda. A indireção através da peg-zone permite a lógica de\\nque o Hub permaceça simples e imutável para outras estratégias de consenso blockchain\\ncomo a mineração de prova-de-trabalho do Bitcoin.\")]),_c('p',[_vm._v(\"Por exemplo, uma zona Cosmos com um conjunto validador específico, possivelmente o mesmo que\\no Hub, poderia atuar como um ether-peg, onde a aplicação TMSP sobre\\na zona (“peg-zone”) tem mecanismos para trocar mensagens IBC com um\\nPeg-contract na blockchain (a “origem”). Este contrato\\npermite que os titulares de ether enviem ether para a zona de peg, enviando-o para\\nPeg-contract na Ethereum. Uma vez que o ether é recebido pelo peg-contract, o ether\\nnão pode ser retirado a menos que um pacote IBC apropriado seja recebido pelo\\nPeg-contract da peg-zone. Quando uma zona recebe um pacote IBC provando\\nque o ether foi recebido no peg-contract para uma determinada conta Ethereum,\\na conta correspondente é criada na peg-zone com esse saldo. O ether na\\npeg-zone (“pegged-ether”) pode então ser transferido para o Hub,\\ne mais tarde ser destruído com uma transação que envia para um determinado\\nendereço de retirada no Ethereum. Um pacote IBC provando que a transação\\nna Peg-Zone podem ser lançados no peg-contract Ethereum para permitir que o\\nEther seja retirado.\")]),_c('p',[_vm._v(\"Naturalmente, o risco do contrato do pegging e um conjunto de validadores desonestos. -bizantino.\\nO poder de voto bizantino poderia causar um fork, retirando o ether do\\npeg-contract mantendo o pegged-ether na peg-zone. Na pior das hipóteses,\\n+⅔ do poder de voto bizantino pode roubar o ether daqueles que o enviaram para o\\npeg-contract, desviando-se da pegging e da peg-zone de origem.\")]),_c('p',[_vm._v(\"É possível abordar essas questões projetando o peg para ser totalmente\\nresponsável. Por exemplo, todos os pacotes IBC, a partir do hub de\\norigem, poderão exigir um reconhecimento pela zona de fixação de tal forma que\\nas transições de estados da peg-zone podem ser desafiadas de forma eficiente e verificadas pelo\\nhub ou pelo peg-contract de origem. O Hub e a origem devem\\npermitir que os validadores da zona de fixação apresentem garantias e as transferências\\ncontratuais devem ser atrasadas (e um prazo de vinculação de colateral suficientemente\\nlongo) para permitir que quaisquer desafios sejam feitos por auditores independentes. Nós saímos\\nda concepção, da especificação e implementação deste sistema aberto como uma\\nfutura proposta de melhoria da Cosmos, a ser aprovada pela governança do sistema do Cosmos\\nHub.\")]),_c('p',[_vm._v(\"Embora a atmosfera sociopolítica ainda não esteja bastante desenvolvida, podemos\\naumentar o mecanismo para permitir que as zonas se liguem as moedas FIAT de um\\nestado-nação, formando um validador responsável estabelecido a partir de uma combinação da\\nmoeda da nação, mais particularmente, pelos seus bancos. Claro,\\nprecauções adicionais devem ser tomadas para aceitar apenas moedas apoiadas por\\nsistemas que possam reforçar a capacidade de auditoria das atividades dos bancos\\ne de notário grupos de grandes instituições de confiança.\")]),_c('p',[_vm._v(\"Um resultado dessa integração poderia ser, por exemplo, permitir que\\numa conta em um banco na zona possa mover dólares de sua conta bancária\\npara outras contas na zona, ou para o hub, ou inteiramente para outra zona.\\nNesse sentido, o Cosmos Hub pode atuar como um canal sem\\nmoedas e criptomoedas, removendo as barreiras que limitariam\\nsua interoperabilidade com o mundo dos intercâmbios.\")]),_c('h3',{attrs:{\"id\":\"ethereum-scaling\"}},[_vm._v(\"Ethereum Scaling\")]),_c('p',[_vm._v(\"Resolver o problema de escalonamento é um problema aberto para a Ethereum. Atualmente,\\nos nós Ethereum processam cada transação única e também armazenam todos os estados.\\n\"),_c('a',{attrs:{\"href\":\"https://docs.google.com/presentation/d/1CjD0W4l4-CwHKUvfF5Vlps76fKLEC6pIwu1a_kC_YRQ/mobilepresent?slide=id.gd284b9333_0_28\"}},[_vm._v(\"link\")]),_vm._v(\".\")]),_c('p',[_vm._v(\"Desde que a Tendermint pode realizar os blocos muito mais rápido do que a prova-de-trabalho da Ethereum,\\nas zonas EVM alimentadas e operando pelo consenso da Tendermint\\nfornecem maior desempenho para blocos da blockchain Ethereum. Além disso, embora o\\nCosmos Hub e o mecanismo de pacotes IBC não permitam a execução da lógica de contratos\\narbitrários, podem ser usados para coordenar os movimentos Ethereum e a execução de\\ncontratos simbólicos em diferentes zonas, fornecendo uma base para\\no token ethereum através de sharding.\")]),_c('h3',{attrs:{\"id\":\"integracao-de-multi-aplicacao\"}},[_vm._v(\"Integração de Multi-Aplicação\")]),_c('p',[_vm._v(\"As zonas Cosmos executam lógica de aplicação arbitrária, que é definida no início da\\nvida da zona e podem potencialmente ser atualizados ao longo do tempo pela governança. Essa flexibilidade\\npermite que as zonas Cosmos ajam como pegs para outras criptomoedas como Ethereum ou\\nBitcoin, e também permite derivados desses blockchains, que utilizam a\\nmesma base de código, mas com um conjunto de validador diferente e distribuição inicial. Isto\\npermite que muitos tipos de criptomoedas existentes, como as Ethereum,\\nZerocash, Bitcoin, CryptoNote e assim por diante, possam ser usados com o Tendermint BFT,\\nque é um motor de consenso de maior desempenho, em uma rede comum, abrindo\\noportunidade de interoperabilidade entre as plataformas. Além disso, como\\nmulti-asset blockchain, uma única transação pode conter vários\\nonde cada entrada pode ser qualquer tipo de token, permitindo a Cosmos\\nser uma plataforma para a exchange descentralizada, mesmo que as ordens sejam\\npara outras plataformas. Alternativamente, uma zona pode servir como um\\nfault-tolerant (com livros de ordens), o que pode ser uma melhoria\\nnas exchanges centralizadas de criptomoeda que tendem a ser invadidas com\\no tempo.\")]),_c('p',[_vm._v(\"As zonas também podem servir como versões bloqueadas de empresas e\\nsistemas, onde partes de um serviço particular da organização ou grupo de organizações\\nque são tradicionalmente executadas como um aplicativo TMSP\\nem uma certa zona, o que lhe permite receber a segurança e a interoperabilidade da\\nrede pública Cosmos sem sacrificar o controle sobre o serviço subjacente.\\nAssim, a Cosmos pode oferecer o melhor da tecnologia blockchain para ambos os mundos e\\npara as organizações, que se recusam a deixar completamente o controle\\npara um distribuidor terceirizado.\")]),_c('h3',{attrs:{\"id\":\"reducao-de-particao-de-rede\"}},[_vm._v(\"Redução de partição de rede\")]),_c('p',[_vm._v(\"Alguns afirmam que um grande problema da coerência-favorecendo algoritmos de consenso\\ncomo o Tendermint é que qualquer partição de rede que faz com que não haja uma única\\npartição com +⅔ de poder de votação (por exemplo, ⅓+ ficando offline) irá parar o consenso\\ncompletamente. A arquitetura Cosmos pode ajudar a mitigar esse problema usando umas\\nzonas regionais autônomas, onde o poder de voto para cada zona é\\ndistribuído com base em uma região geográfica comum. Por exemplo, um\\nparâmetro pode ser para cidades individuais, ou regiões, para operar suas próprias zonas\\nde partilha com um centro em comum (por exemplo, o Cosmos Hub), permitindo que a\\no hub possa parar devido a uma paralisação de rede temporária.\\nObserve que isso permite uma geologia real, política e rede-topológica,\\nque são recursos a serem considerados no projeto de sistemas robustos federados de fault-tolerant.\")]),_c('h3',{attrs:{\"id\":\"sistema-de-resolucao-de-nomes-federados\"}},[_vm._v(\"Sistema de Resolução de Nomes Federados\")]),_c('p',[_vm._v(\"NameCoin foi uma das primeiras blockchains a tentar resolver o\\nproblema de resolução de nomes através de uma adaptação da blockchain do Bitcoin. Infelizmente\\ntêm ocorrido várias questões com esta abordagem.\")]),_c('p',[_vm._v(\"Com a Namecoin, podemos verificar que, por exemplo, o nome \"),_c('em',[_vm._v(\"@satoshi\")]),_vm._v(\" foi registrado como\\nparticular, em algum momento do passado, mas não saberíamos se\\na chave pública tinha sido atualizada recentemente, a menos que baixassemos todos os blocos\\ndesde a última atualização desse nome. Isto é devido as limitações do modelo de\\nMerkle-ization de UTXO do Bitcoin, onde somente as transações (não\\nmutáveis) são Merkle-ized no hash do bloco. Isso nos permite\\nprovar a existência, mas não a não-existência de atualizações posteriores a um nome. Assim, nós\\nnão podemos saber com certeza o valor mais recente de um nome sem confiar em um\\nnó, ou recorrer a gastos significativos na largura de banda, baixando o\\nBlockchain.\")]),_c('p',[_vm._v(\"Mesmo se uma árvore de pesquisa Merkle-ized for implementada na NameCoin, sua dependência\\nsobre a prova-de-trabalho torna a verificação do cliente light problemática. Os clientes light devem\\nbaixar uma cópia completa dos cabeçalhos para todos os blocos em toda a blockchain\\n(ou pelo menos todos os cabeçalhos desde a última atualização de um nome). Isso significa que\\nos requisitos de largura de banda crescem linearmente com a o passar do tempo \"),_c('a',{attrs:{\"href\":\"https://en.bitcoin.it/wiki/Thin_Client_Security\"}},[_vm._v(\"[21]\")]),_vm._v(\".\\nAlém disso, as mudanças de nome em um bloco de prova-de-trabalho requerem\\na confirmação do trabalho, o que pode levar até uma hora\\nno Bitcoin.\")]),_c('p',[_vm._v(\"Com Tendermint, tudo o que precisamos é o hash de bloco mais recente assinado por um quorum de\\nvalidadores (por poder de voto), e uma prova Merkle para o valor atual associado\\ncom o nome. Isto torna possível ter uma solução sucinta, rápida e segura\\npara a verificação de valores de nome no cliente light.\")]),_c('p',[_vm._v(\"Na Cosmos, podemos aplicar este conceito e estendê-lo ainda mais. Cada\\nzona de registro de nomes na Cosmos pode ter um domínio de nível superior (TLD)\\nassociado, como o “.com” ou “.org”, e cada zona de registro de nome pode ter\\nsuas próprias regras de governança e registro.\")]),_c('h2',{attrs:{\"id\":\"emissao-e-incentivos\"}},[_vm._v(\"Emissão e Incentivos\")]),_c('h3',{attrs:{\"id\":\"o-token-atom\"}},[_vm._v(\"O Token Atom\")]),_c('p',[_vm._v(\"Enquanto o Cosmos Hub é um ledger de distribuíção multi-asset, há um token nativo\\nespecial chamado \"),_c('em',[_vm._v(\"atom\")]),_vm._v(\". Os atoms são o únicos símbolos do Cosmos\\nHub. Os atoms são uma licença para o titular votar, validar ou delegar\\nvalidadores. Como o ether da Ethereum, os atoms também podem ser usados para\\nreduzir o spam. Atoms inflacionários adicionais e as taxas do bloco de transação\\nsão recompensadas pelos validadores e delegados que\\no validarão.\")]),_c('p',[_vm._v(\"A transação \"),_c('code',{pre:true},[_vm._v(\"BurnAtomTx\")]),_vm._v(\" pode ser usada para cobrir proporcionalmente a quantidade\\nde tokens reservados para a pool.\")]),_c('h4',{attrs:{\"id\":\"levantamento-de-fundos\"}},[_vm._v(\"Levantamento de Fundos\")]),_c('p',[_vm._v(\"A distribuição inicial dos tokens atom e validadores na Genesis vão para os\\ndoadores do Levantamento de Fundos da Cosmos (75%), doadores pesados (5%), Fundação da Rede\\nCosmos (10%), e a ALL IN BITS, Inc (10%). A partir da Genesis em diante, 1/3 da\\nquantidade total de atoms será recompensada aos validadores e delegados durante\\ntodo o ano.\")]),_c('p',[_vm._v(\"Veja o \"),_c('a',{attrs:{\"href\":\"https://github.com/cosmos/cosmos/blob/master/PLAN.md\"}},[_vm._v(\"Plano Cosmos\")]),_vm._v(\"\\npara detalhes adicionais.\")]),_c('h4',{attrs:{\"id\":\"investindo\"}},[_vm._v(\"Investindo\")]),_c('p',[_vm._v(\"Para evitar que o levantamento de fundos atraia especuladores de curto prazo apenas interessados\\nem esquemas de pump and dump, os atoms da Genesis não serão transferíveis até\\neles tenham investido. Cada conta irá adquirir atoms durante um período de 2 anos com\\ntaxa constante a cada hora, determinada pelo número total de atoms da Genesis/(2*\\n365 * 24) horas. Os atoms ganhos pela recompensa do bloco são pré-investidos,\\ne podem ser transferidos imediatamente, de modo que os validadores e os delegados ligados possam ganhar\\nmais da metade de seus atoms da Genesis após o primeiro ano.\")]),_c('h3',{attrs:{\"id\":\"limitacoes-do-numero-de-validadores\"}},[_vm._v(\"Limitações do Número de Validadores\")]),_c('p',[_vm._v(\"Diferentemente do Bitcoin ou de outros blockchains de prova-de-trabalho, o blockchain Tendermint será\\nmais lento com mais validadores devido ao aumento da complexidade da comunicação.\\nFelizmente, podemos oferecer suporte a validadores suficientes para a\\ndistribuição na Blockchain com tempos de confirmação de transação muito mais rápidos e, através de\\nlargura de banda, armazenamento e aumento da capacidade de computação paralela, seremos capazes de\\nter mais validadores no futuro.\")]),_c('p',[_vm._v(\"No dia da Genesis, o número máximo de validadores será definido como 100,\\no número aumentará a uma taxa de 13% durante 10 anos até atingir a marca de 300\\nValidadores.\")]),_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"v-pre\":\"\"}},[_vm._v(\"Ano 0: 100\\nAno 1: 113\\nAno 2: 127\\nAno 3: 144\\nAno 4: 163\\nAno 5: 184\\nAno 6: 208\\nAno 7: 235\\nAno 8: 265\\nAno 9: 300\\nAno 10: 300\\n...\\n\")])]),_c('h3',{attrs:{\"id\":\"tornando-se-um-validador-depois-do-dia-da-genesis\"}},[_vm._v(\"Tornando-se um Validador depois do dia da Genesis\")]),_c('p',[_vm._v(\"Os titulares de atoms que ainda não são capazes de se tornarem validadores assinados e\\nsubmeter uma transação \"),_c('code',{pre:true},[_vm._v(\"BondTx\")]),_vm._v(\". A quantidade de atoms fornecida como garantia\\ndeve ser diferente de zero. Qualquer pessoa pode se tornar um validador a qualquer momento, exceto quando o\\ntamanho do conjunto de validadores atual é maior que o número máximo de\\nvalidadores permitidos. Nesse caso, a transação só é válida se o montante\\nde atoms é maior do que a quantidade de atoms efetivos mantidos pelo menor\\nvalidador, onde atoms eficazes incluem atoms delegados. Quando um novo validador\\nsubstitui um validador existente de tal forma, o validador existente torna-se\\ninativo e todos os atoms e atoms delegados entram no estado de unbonding.\")]),_c('h3',{attrs:{\"id\":\"penalidades-para-validadores\"}},[_vm._v(\"Penalidades para Validadores\")]),_c('p',[_vm._v(\"Deve haver alguma penalidade imposta aos validadores por qualquer desvio intencional\\nou não intencional do protocolo sancionado. Algumas evidências são imediatamente admissíveis,\\ncomo um double-sign na mesma altura e volta, ou uma violação de “prevote-the-lock”\\n(uma regra do protocolo de consenso Tendermint). Tais evidências resultarão em que o\\nvalidador perca sua boa reputação e seus átomos ligados, bem como sua proporção de tokens\\nna pool reserva - coletivamente chamados de “stake” - serão cortados.\")]),_c('p',[_vm._v(\"Às vezes, os validadores não estarão disponíveis, devido a interrupções na rede regional,\\nfalha de energia ou outros motivos. Se, em qualquer ponto nos blocos \"),_c('code',{pre:true},[_vm._v(\"ValidatorTimeoutWindow\")]),_vm._v(\"\\nanteriores, o voto de validação de um validador não estiver incluído na cadeia de\\nblocos mais do que \"),_c('code',{pre:true},[_vm._v(\"ValidatorTimeoutMaxAbsent\")]),_vm._v(\" vezes, esse validador ficará inativo e\\nperderá \"),_c('code',{pre:true},[_vm._v(\"ValidatorTimeoutPenalty\")]),_vm._v(\" (PADRÃO DE 1%) de sua participação.\")]),_c('p',[_vm._v(\"Alguns comportamentos “maliciosos” não produzem provas obviamente discerníveis sobre\\na blockchain. Nesses casos, os validadores podem coordenar fora da banda para forçar\\no tempo limite desses validadores maliciosos, se houver um consenso majoritário.\")]),_c('p',[_vm._v(\"Em situações em que o Cosmos Hub parar devido a uma coalizão de ⅓+ de poder de voto\\noffline, ou em situações onde uma coalizão de ⅓+ de poder de voto censurar evidências de\\ncomportamento malicioso entrando na blockchain, o hub deve recuperar com um hard-fork\\nde proposta reorganizacional. (Link to “Forks and Censorship Attacks”).\")]),_c('h3',{attrs:{\"id\":\"taxas-de-transacao\"}},[_vm._v(\"Taxas de Transação\")]),_c('p',[_vm._v(\"Os validadores do Cosmos Hub podem aceitar qualquer tipo de token ou combinação\\nde tipos como taxas para processar uma transação. Cada validador pode fixar subjetivamente a\\ntaxa de câmbio que quiser e escolher as transações que desejar, desde que o \"),_c('code',{pre:true},[_vm._v(\"BlockGasLimit\")]),_vm._v(\"\\nnão seja excedido. As taxas cobradas, menos quaisquer impostos especificados abaixo,\\nsão redistribuídas aos stakeholders ligados em proporção aos seus átomos ligados, cada \"),_c('code',{pre:true},[_vm._v(\"ValidatorPayoutPeriod\")]),_vm._v(\" (PADRÃO DE 1 hora).\")]),_c('p',[_vm._v(\"Das taxas de transação cobradas, \"),_c('code',{pre:true},[_vm._v(\"ReserveTax\")]),_vm._v(\" (PADRÃO DE 2%) irá para a pool reserva\\npara aumentar a pool reserva e aumentar a segurança e o valor da rede Cosmos. Além disso, um\\n\"),_c('code',{pre:true},[_vm._v(\"CommonsTax\")]),_vm._v(\" (PADRÃO DE 3%) irá para o financiamento de bens comuns. Estes fundos vão para o\\n\"),_c('code',{pre:true},[_vm._v(\"CustodianAddress\")]),_vm._v(\" para ser distribuído de acordo com as decisões tomadas pelo sistema de governança.\")]),_c('p',[_vm._v(\"Os titulares de átomos que delegam o seu poder de voto a outros validadores pagam uma comissão\\nao validador delegado. A comissão pode ser definida por cada validador.\")]),_c('h3',{attrs:{\"id\":\"incentivando-hackers\"}},[_vm._v(\"Incentivando Hackers\")]),_c('p',[_vm._v(\"A segurança do Cosmos Hub é uma função da segurança dos validadores subjacentes e da escolha\\nda delegação pelos delegados. A fim de incentivar a descoberta e notificação precoce de vulnerabilidades\\nencontradas, o Cosmos Hub incentiva os hackers a publicar exploits bem sucedidos através de uma transação\\n\"),_c('code',{pre:true},[_vm._v(\"ReportHackTx\")]),_vm._v(\" que diz,\\\" Este validador foi hackeado. Por favor, envie recompensa para este endereço\\\".\\nDepois de tal exploração, o validador e os delegados ficarão inativos, \"),_c('code',{pre:true},[_vm._v(\"HackPunishmentRatio\")]),_vm._v(\" (PADRÃO DE 5%)\\ndos átomos de todos serão cortados, e\"),_c('code',{pre:true},[_vm._v(\"HackRewardRatio\")]),_vm._v(\" (PADRÃO DE 5%) dos átomos de todos\\nserão recompensado com o endereço de recompensa do hacker. O validador deve recuperar os átomos\\nrestantes usando sua chave de backup.\")]),_c('p',[_vm._v(\"Para evitar que esse recurso seja abusado para transferir átomos não invadidos,\\na porção de átomos adquirido vs relativo de validadores e delegados antes e depois do \"),_c('code',{pre:true},[_vm._v(\"ReportHackTx\")]),_vm._v(\"\\npermanecerá o mesmo, e o bounty do hacker irá incluir alguns átomos relativos, se houver.\")]),_c('h3',{attrs:{\"id\":\"especificacao-de-governanca\"}},[_vm._v(\"Específicação de Governança\")]),_c('p',[_vm._v(\"O Cosmos Hub é operado por uma organização distribuída que requer um mecanismo de\\ngovernança bem definido para coordenar várias mudanças na blockchain, como parâmetros\\nvariáveis do sistema, bem como atualizações de software e emendas constitucionais.\")]),_c('p',[_vm._v(\"Todos os validadores são responsáveis por votar em todas as propostas.\\nNão votar em uma proposta em tempo hábil resultará na desativação automática do\\nvalidador por um período de tempo denominado \"),_c('code',{pre:true},[_vm._v(\"AbsenteeismPenaltyPeriod\")]),_vm._v(\" (PADRÃO DE 1 semana).\")]),_c('p',[_vm._v(\"Os delegados herdam automaticamente o voto do validador delegado.\\nEste voto pode ser anulado manualmente. Os átomos não ligados obtêm nenhum voto.\")]),_c('p',[_vm._v(\"Cada proposta requer um depósito de tokens de \"),_c('code',{pre:true},[_vm._v(\"MinimumProposalDeposit\")]),_vm._v(\",\\nque pode ser uma combinação de um ou mais tokens incluindo átomos.\\nPara cada proposta, os eleitores podem votar para receber o depósito.\\nSe mais da metade dos eleitores optarem por receber o depósito (por exemplo, porque a proposta era spam),\\no depósito vai para a pool reserva, exceto os átomos que são queimados.\")]),_c('p',[_vm._v(\"Para cada proposta, os eleitores podem votar nas seguintes opições:\")]),_c('ul',[_c('li',[_vm._v(\"Sim\")]),_c('li',[_vm._v(\"Com Certeza\")]),_c('li',[_vm._v(\"Não\")]),_c('li',[_vm._v(\"Nunca\")]),_c('li',[_vm._v(\"Abstenção\")])]),_c('p',[_vm._v(\"É necessário uma maioria estrita de votos Yea(Sim) ou YeaWithForce(Com certeza)\\n(ou votos Nay(Não) ou NayWithForce(Nunca)) para que a proposta seja decidida como aceita\\n(ou decidida como falha), mas 1/3+ pode vetar a decisão da maioria votando “Com certeza”.\\nQuando uma maioria estrita é vetada, todos são punidos com a perda de \"),_c('code',{pre:true},[_vm._v(\"VetoPenaltyFeeBlocks\")]),_vm._v(\"\\n(PADRÃO DE no valor de um dia de blocos) de taxas (exceto os impostos que não serão afetados),\\ne a parte que vetou a decisão da maioria será adicionalmente punida com a perda de \"),_c('code',{pre:true},[_vm._v(\"VetoPenaltyAtoms\")]),_vm._v(\"\\n(PADRÃO DE 0.1%) de seus átomos.\")]),_c('h3',{attrs:{\"id\":\"parametro-de-mudanca-de-proposta\"}},[_vm._v(\"Parâmetro de Mudança de Proposta\")]),_c('p',[_vm._v(\"Qualquer um dos parâmetros aqui definidos pode ser alterado com a aceitação\\nde um \"),_c('code',{pre:true},[_vm._v(\"ParameterChangeProposal\")]),_vm._v(\".\")]),_c('h3',{attrs:{\"id\":\"texto-da-proposta\"}},[_vm._v(\"Texto da Proposta\")]),_c('p',[_vm._v(\"Todas as outras propostas, como uma proposta de atualização do protocolo, serão coordenadas através do genérico \"),_c('code',{pre:true},[_vm._v(\"TextProposal\")]),_vm._v(\".\")]),_c('h2',{attrs:{\"id\":\"roteiro\"}},[_vm._v(\"Roteiro\")]),_c('p',[_vm._v(\"Veja \"),_c('a',{attrs:{\"href\":\"https://github.com/cosmos/cosmos/blob/master/PLAN.md\"}},[_vm._v(\"o Plano Cosmos\")]),_vm._v(\".\")]),_c('h2',{attrs:{\"id\":\"trabalho-relacionado\"}},[_vm._v(\"Trabalho Relacionado\")]),_c('p',[_vm._v(\"Houve muitas inovações no consenso da blockchain e na escalabilidade nos últimos dois anos.\\nEsta seção fornece um breve levantamento de um seleto número das mais importantes.\")]),_c('h3',{attrs:{\"id\":\"sistemas-de-consenso\"}},[_vm._v(\"Sistemas de Consenso\")]),_c('h4',{attrs:{\"id\":\"classic-byzantine-fault-tolerance\"}},[_vm._v(\"Classic Byzantine Fault Tolerance\")]),_c('p',[_vm._v(\"Consenso na presença de participantes maliciosos é um problema que remonta ao início dos anos 1980,\\nquando Leslie Lamport cunhou a frase “falha bizantina” para se referir ao comportamento do processo\\narbitrário que se desvia do comportamento pretendido, que contraste com uma “falha acidental”,\\nem que um processo simplesmente falha. Soluções iniciais foram descobertas para redes síncronas onde\\nhá um limite superior na latência da mensagem, embora o uso prático fosse limitado a ambientes altamente controlados,\\ncomo controladores de avião e datacenters sincronizados via relógios atômicos.\\nNão foi até o final dos anos 90 que a Practical Byzantine Fault Tolerance (PBFT) foi introduzida como\\num eficiente algoritmo de consenso parcialmente síncrono capaz de tolerar até ⅓ de processos\\ncomportando-se arbitrariamente. PBFT tornou-se o algoritmo padrão, gerando muitas variações,\\nincluindo mais recentemente uma criada pela IBM como parte de sua contribuição para a Hyperledger.\")]),_c('p',[_vm._v(\"O principal benefício do consenso Tendermint sobre PBFT é que o Tendermint tem uma estrutura\\nsubjacente melhorada e simplificada, um dos quais é um resultado de adotar o paradigma blockchain.\\nBlocos Tendermint devem confirmar em ordem, o que evita a complexidade e sobrecarga de comunicação\\nassociada a alteração de visão do PBFT’s. No Cosmos e muitas outras criptomoedas,\\nnão há necessidade de permitir o bloco \"),_c('em',[_vm._v(\"N+i\")]),_vm._v(\" onde \"),_c('em',[_vm._v(\"i >= 1\")]),_vm._v(\" se confirmar,\\nquando o próprio bloco \"),_c('em',[_vm._v(\"N\")]),_vm._v(\" ainda não se confirmou. Se a largura de banda é a razão\\npela qual o bloco \"),_c('em',[_vm._v(\"N\")]),_vm._v(\" não se confirmou em uma zona do Cosmos, então isso não ajuda\\na usar os votos de compartilhamento de largura de banda para blocos \"),_c('em',[_vm._v(\"N+i\")]),_vm._v(\".\\nSe uma partição de rede ou nós offline for a razão pela qual o bloco \"),_c('em',[_vm._v(\"N\")]),_vm._v(\" não foi confirmado,\\n\"),_c('em',[_vm._v(\"N+i\")]),_vm._v(\" não se comprometerá de qualquer maneira.\")]),_c('p',[_vm._v(\"Além disso, o lote de transações em blocos permite que o Merkle-hashing regule o estado da aplicação,\\nao invés de resumos periódicos com esquemas de pontos de verificação como PBFT faz.\\nIsso permite confirmações de transações mais rápidas para clientes leves e uma comunicação mais rápida entre a blockchain.\")]),_c('p',[_vm._v(\"Tendermint BFT também inclui muitas otimizações e recursos que vão acima e além do que é especificado no PBFT.\\nPor exemplo, os blocos propostos pelos validadores são divididos em partes,\\nMerkleized e inútilizados de tal forma que melhora o desempenho da transmissão\\n(ver LibSwift \"),_c('a',{attrs:{\"href\":\"http://www.ds.ewi.tudelft.nl/fileadmin/pds/papers/PerformanceAnalysisOfLibswift.pdf\"}},[_vm._v(\"[19]\")]),_vm._v(\" para inspiração). Além disso, Tendermint BFT não faz qualquer suposição sobre\\na conectividade ponto-a-ponto, e funciona durante o tempo que a rede P2P está fracamente conectada.\")]),_c('h4',{attrs:{\"id\":\"participacao-delegada-do-bitshares\"}},[_vm._v(\"Participação delegada do BitShares\")]),_c('p',[_vm._v(\"Apesar de não serem os primeiros a implementar a prova-de-participação (Proof-of-Stake - PoS),\\no BitShares \"),_c('a',{attrs:{\"href\":\"https://bitshares.org/technology/delegated-proof-of-stake-consensus/\"}},[_vm._v(\"[12]\")]),_vm._v(\" contribuiu consideravelmente para a pesquisa e adoção das blockchains que usam o PoS,\\nparticularmente aqueles conhecidos como PoS “delegados”. No BitShares, as partes interessadas elegem “testemunhas”,\\nresponsáveis por ordenar e confirmar transações e “delegados”, responsáveis pela coordenação\\nde atualizações de software e alterações de parâmetros. Embora o BitShares atinja alto desempenho\\n(100k tx/s, 1s de latência) em condições ideais, ele está sujeito a ataques de duplo gasto por testemunhas\\nmaliciosas que “forkem” a blockchain sem sofrer uma punição econômica explícita - ele sofre do problema\\n“nada a perder”. O BitShares tenta suavizar o problema permitindo que as transações se refiram a\\nblocos-hashes recentes. Além disso, as partes interessadas podem remover ou substituir\\ntestemunhas de má conduta diariamente, embora isso não faça nada para punir\\nexplicitamente os ataques bem sucedidos de duplo gasto.\")]),_c('h4',{attrs:{\"id\":\"stellar\"}},[_vm._v(\"Stellar\")]),_c('p',[_vm._v(\"Baseando-se em uma abordagem pioneira da Ripple, a Stellar \"),_c('a',{attrs:{\"href\":\"https://www.stellar.org/papers/stellar-consensus-protocol.pdf\"}},[_vm._v(\"[13]\")]),_vm._v(\" refinou um modelo do\\nFederated Byzantine Agreement em que os processos que participam do consenso não constituem\\num conjunto fixo e globalmente conhecido. Em vez disso, cada nó de processo codifica uma ou mais\\n“fatias de quórum”, cada uma constituindo um conjunto de processos confiáveis. Um “quórum” na\\nStellar é definido como um conjunto de nós que contêm pelo menos uma fatia de quórum para cada\\nnó no conjunto, de modo que o acordo possa ser alcançado.\")]),_c('p',[_vm._v(\"A segurança do mecanismo Stellar baseia-se no pressuposto de que a intersecção de \"),_c('em',[_vm._v(\"qualquer\")]),_vm._v(\" dois\\nquóruns é não-vazia, enquanto a disponibilidade de um nó requer pelo menos uma das suas fatias de\\nquórum para consistir inteiramente de nós corretos, criando um troca externa entre o uso de grandes\\nou pequenas fatias-quórum que podem ser difíceis de equilíbrar sem impor pressupostos significativos\\nsobre a confiança. Em última análise, os nós precisam, de alguma forma, escolher fatias de quórum adequadas\\npara que haja tolerância suficiente a falhas (ou qualquer “nó intacto” em geral, do qual muitos dos\\nresultados do trabalho dependem) e a única estratégia fornecida para garantir tal configuração é\\nhierárquica e similar ao Border Gateway Protocol (BGP), usado por ISPs de primeira linha na\\ninternet para estabelecer tabelas de roteamento globais e usado pelos navegadores para gerenciar\\ncertificados TLS; Ambos notórios por sua insegurança.\")]),_c('p',[_vm._v(\"A crítica sobre papel da Stellar nos sistemas PoS baseados em Tendermint é atenuada pela estratégia\\nde token descrita aqui, em que um novo tipo de token chamado \"),_c('em',[_vm._v(\"atom\")]),_vm._v(\" é emitido para representar\\nreivindicações para futuras porções de taxas e recompensas. A vantagem do PoS baseado em Tendermint,\\nportanto, é a sua relativa simplicidade, ao mesmo tempo que oferece garantias de segurança suficientes e prováveis.\")]),_c('h4',{attrs:{\"id\":\"bitcoinng\"}},[_vm._v(\"BitcoinNG\")]),_c('p',[_vm._v(\"O BitcoinNG é uma proposta de melhoria do Bitcoin que permitiria formas de escalabilidade vertical,\\ncomo o aumento do tamanho do bloco, sem as conseqüências econômicas negativas normalmente associadas a tal mudança,\\ncomo o impacto desproporcionalmente grande sobre os pequenos mineradores. Esta melhoria é conseguida separando\\na eleição do líder da transmissão da transação: os líderes são eleitos pela primeira vez\\npor prova de trabalho(PoW) em “microblocos”, e então são capazes de transmitir transações a\\nserem confirmadas até que um novo microbloco seja encontrado. Isso reduz os requisitos\\nde largura de banda necessários para vencer a corrida PoW, permitindo que os pequenos\\nmineiros possam competir mais justamente, e permitindo que as transações sejam confirmadas\\ncom mais regularidade pelo último minerador para encontrar um micro-bloco.\")]),_c('h4',{attrs:{\"id\":\"casper\"}},[_vm._v(\"Casper\")]),_c('p',[_vm._v(\"Casper \"),_c('a',{attrs:{\"href\":\"https://blog.ethereum.org/2015/08/01/introducing-casper-friendly-ghost/\"}},[_vm._v(\"[16]\")]),_vm._v(\" é uma proposta de algoritmo de consenso PoS para o Ethereum.\\nSeu modo principal de operação é “consenso-por-aposta”. Ao permitir que os validadores apostem\\niterativamente em qual bloco eles acreditam que será confirmado na blockchain com base nas\\noutras apostas que eles têm visto até agora, a finalidade pode ser alcançada eventualmente.\\n\"),_c('a',{attrs:{\"href\":\"https://blog.ethereum.org/2015/12/28/understanding-serenity-part-2-casper/\"}},[_vm._v(\"link\")]),_vm._v(\". Esta é uma área ativa\\nde pesquisa da equipe de Casper. O desafio está na construção de um mecanismo de apostas que pode ser\\ncomprovado como uma estratégia evolutivamente estável. O principal benefício da Casper em relação à\\nTendermint pode ser a oferta de “disponibilidade sobre a consistência” - consenso não requer\\num quórum +⅔ de poder de voto - talvez ao custo de velocidade de confirmação ou complexidade de implementação.\")]),_c('h3',{attrs:{\"id\":\"escala-horizontal\"}},[_vm._v(\"Escala Horizontal\")]),_c('h4',{attrs:{\"id\":\"protocolo-interledger\"}},[_vm._v(\"Protocolo Interledger\")]),_c('p',[_vm._v(\"O Protocolo Interledger \"),_c('a',{attrs:{\"href\":\"https://interledger.org/rfcs/0001-interledger-architecture/\"}},[_vm._v(\"[14]\")]),_vm._v(\" não é estritamente uma solução de escalabilidade.\\nEle fornece uma interoperabilidade ad hoc entre diferentes sistemas de ledger através de uma rede\\nde relações bilaterais livremente acopladas. Tal como a Lightning Network, a finalidade do\\nILP é facilitar pagamentos, mas focaliza especificamente pagamentos em diferentes tipos de ledger,\\nestendendo o mecanismo de transações atômicas para incluir não apenas hash-locks, mas também um\\nquórum de notários (chamado de Atomic Transport Protocol). O último mecanismo para reforçar a\\natomicidade em transacções entre-ledger é semelhante ao mecanismo SPV do cliente leve do Tendermint,\\nentão uma ilustração da distinção entre ILP e Cosmos/IBC é garantida, e fornecida abaixo.\")]),_c('ol',[_c('li',[_c('p',[_vm._v(\"Os notários de um conector em ILP não suportam mudanças de consentimento, e não permitem uma\\npesagem flexível entre notários. Por outro lado, o IBC é projetado especificamente para blockchains,\\nonde os validadores podem ter diferentes pesos, e onde o consentimento pode mudar ao longo da cadeia de blocos.\")])]),_c('li',[_c('p',[_vm._v(\"Como na Lightning Network, o receptor do pagamento em ILP deve estar on-line para enviar\\numa confirmação de volta ao remetente. Em uma transferência de token sobre IBC, o conjunto\\nde validadores da blockchain do receptor é responsável por fornecer a confirmação, não o usuário receptor.\")])]),_c('li',[_c('p',[_vm._v(\"A diferença mais notável é que os conectores do ILP não são responsáveis ou mantêm o estado\\nautoritário sobre os pagamentos, enquanto que no Cosmos, os validadores de um hub são a autoridade\\ndo estado das transferências de tokens do IBC, bem como a autoridade da quantidade de tokens\\nmantidos por cada zona (mas não a quantidade de tokens mantidos por cada conta dentro de uma zona).\\nEsta é a inovação fundamental que permite a tranferência assimétrica segura de tokens de zona para\\nzona; O conector analógico do ILP no Cosmos é uma persistente e maximamente segura ledger de blockchain, o Cosmos Hub.\")])]),_c('li',[_c('p',[_vm._v(\"Os pagamentos entre contas no ILP precisam ser suportados por uma ordem de compra/venda, uma\\nvez que não há transferência assimétrica de moedas de um ledger para outro, apenas a transferência\\nde valor ou equivalentes de mercado.\")])])]),_c('h4',{attrs:{\"id\":\"sidechains\"}},[_vm._v(\"Sidechains\")]),_c('p',[_vm._v(\"Sidechains \"),_c('a',{attrs:{\"href\":\"https://blockstream.com/sidechains.pdf\"}},[_vm._v(\"[15]\")]),_vm._v(\" são um mecanismo proposto para dimensionar a rede Bitcoin através de\\nblockchains alternativas que são “atreladas” para a blockchain do Bitcoin. As Sidechains\\npermitem que bitcoins se movam efetivamente da blockchain do Bitcoin para a sidechain e retornarem,\\ne permitem a experimentação em novos recursos na sidechain. Como no Cosmos Hub, a sidechain e\\nBitcoin servem como clientes leves uns dos outros, usando provas SPV para determinar quando as moedas\\ndevem ser transferidas para a cadeia lateral e retornarem. Claro, como o Bitcoin usa PoW, sidechains\\ncentradas em torno do Bitcoin sofrem dos muitos problemas e riscos do PoW como um mecanismo de consenso.\\nAlém disso, esta é uma solução Bitcoin-maximalista que não suporta nativamente uma variedade de tokens e\\ntopologia de rede entre-zona como o Cosmos faz. Dito isto, o mecanismo de núcleo bidirecional atrelado é,\\nem princípio, o mesmo que o empregado pela rede Cosmos.\")]),_c('h4',{attrs:{\"id\":\"esforcos-de-escalabilidade-do-ethereum\"}},[_vm._v(\"Esforços de Escalabilidade do Ethereum\")]),_c('p',[_vm._v(\"Ethereum está atualmente pesquisando uma série de estratégias diferentes para fragmentar o\\nestado da blockchain do Ethereum para atender às necessidades de escalabilidade.\\nEsses esforços têm como objetivo manter a camada de abstração oferecida pela atual\\nEthereum Virtual Machine através do espaço de estado compartilhado. Vários esforços de\\npesquisa estão em andamento neste momento. \"),_c('a',{attrs:{\"href\":\"https://github.com/ethereum/EIPs/issues/53\"}},[_vm._v(\"[18]\")]),_c('a',{attrs:{\"href\":\"http://vitalik.ca/files/mauve_paper.html\"}},[_vm._v(\"[22]\")])]),_c('h5',{attrs:{\"id\":\"cosmos-vs-ethereum-20-mauve\"}},[_vm._v(\"Cosmos vs Ethereum 2.0 Mauve\")]),_c('p',[_vm._v(\"Cosmos e Ethereum 2.0 Mauve \"),_c('a',{attrs:{\"href\":\"http://vitalik.ca/files/mauve_paper.html\"}},[_vm._v(\"[22]\")]),_vm._v(\" tem diferentes objetivos de projeto.\")]),_c('ul',[_c('li',[_vm._v(\"Cosmos é especificamente sobre tokens. Malva é sobre escalonamento de computação geral.\")]),_c('li',[_vm._v(\"O Cosmos não está ligado ao EVM, por isso mesmo VMs diferentes podem interoperar.\")]),_c('li',[_vm._v(\"Cosmos permite que o criador da zona determine quem valida a zona.\")]),_c('li',[_vm._v(\"Qualquer pessoa pode iniciar uma nova zona no Cosmos (a menos que a governança decida o contrário).\")]),_c('li',[_vm._v(\"O hub isola falhas de zonas de modo que tokens invariantes sejam preservados.\")])]),_c('h3',{attrs:{\"id\":\"escala-geral\"}},[_vm._v(\"Escala Geral\")]),_c('h4',{attrs:{\"id\":\"lightning-network\"}},[_vm._v(\"Lightning Network\")]),_c('p',[_vm._v(\"A Lightning Network é uma proposta de rede de transferência de token operando em uma camada acima\\nda blockchain do Bitcoin (e outras blockchains públicas), permitindo a melhoria de muitas ordens\\nde magnitude no processamento de transações movendo a maioria das transações fora da ledger de consenso\\npara o chamado “Canais de pagamento”. Isso é possível graças a scripts de criptomoedas em cadeia,\\nque permitem que as partes entrem em contratos estatais bilaterais onde o estado pode ser atualizado\\ncompartilhando assinaturas digitais, e os contratos podem ser fechados definitivamente publicando\\nevidências na blockchain, um mecanismo primeiramente popularizado por trocas atômicas de\\ncross-chains(cadeias cruzadas). Ao abrir canais de pagamento com muitas partes, os participantes\\nda Lightning Network podem se tornar pontos focais para encaminhar os pagamentos de outros,\\nlevando a uma rede de canais de pagamento totalmente conectada, ao custo do capital estar ligado aos canais de pagamento.\")]),_c('p',[_vm._v(\"Enquanto a Lightning Network também pode facilmente se estender através de várias blockchains independentes\\npara permitir a transferência de \"),_c('em',[_vm._v(\"value\")]),_vm._v(\" através de um mercado de câmbio, não pode ser usado para\\ntransferir assimetricamente \"),_c('em',[_vm._v(\"tokens\")]),_vm._v(\" de uma blockchain para outra. O principal benefício da rede Cosmos\\ndescrita aqui é permitir tais transferências diretas de tokens. Dito isto, esperamos que os canais de\\npagamento e a Lightning Network sejam amplamente adotados juntamente com nosso mecanismo de transferência\\nde token, por razões de economia de custos e privacidade.\")]),_c('h4',{attrs:{\"id\":\"segregated-witness\"}},[_vm._v(\"Segregated Witness\")]),_c('p',[_vm._v(\"Segregated Witness é uma proposta de melhoria do Bitcoin\\n\"),_c('a',{attrs:{\"href\":\"https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki\"}},[_vm._v(\"link\")]),_vm._v(\" que visa aumentar em 2X ou 3X a\\ntaxa de transferência por bloco, ao mesmo tempo que faz a sincronização de blocos ser mais rapida para\\nnovos nós. O brilho desta solução é de como ele funciona dentro das limitações do protocolo atual do Bitcoin\\ne permite uma atualização de soft-fork (ou seja, os clientes com versões mais antigas do software\\ncontinuarão funcionando após a atualização). O Tendermint, sendo um novo protocolo, não tem restrições\\nde projeto, por isso tem prioridades diferentes de escalonamento. Sobretudo, o Tendermint usa um algoritmo\\nde rodízio BFT baseado em assinaturas criptográficas em vez de mineração, o que trivialmente permite escalonamento\\nhorizontal através de múltiplas blockchains paralelas, enquanto que os regulares e mais frequentes blocos confirmam\\na escala vertical também.\")]),_c('hr'),_c('h2',{attrs:{\"id\":\"apendice\"}},[_vm._v(\"Apêndice\")]),_c('h3',{attrs:{\"id\":\"responsabilidade-de-fork\"}},[_vm._v(\"Responsabilidade de Fork\")]),_c('p',[_vm._v(\"Um protocolo de consenso bem projetado deve fornecer algumas garantias no caso da capacidade de\\ntolerância ser excedida e o consenso falhar. Isto é especialmente necessário nos sistemas econômicos,\\nonde o comportamento Bizantino pode ter recompensa financeira substancial. A\\ngarantia maisimportante é uma forma de \"),_c('em',[_vm._v(\"fork-accountability\")]),_vm._v(\", onde os processos que\\nfizeram com que o consenso falhasse (ou seja, clientes do protocolo\\nmotivados para aceitar valores diferentes - um fork) podem ser identificados e punidos de acordo com as\\nregras do protocolo , Ou, possivelmente, o sistema jurídico. Quando o sistema jurídico não é confiável\\nou é excessivamente caro para suplicar, os validadores podem ser forçados a fazerem depósitos de segurança\\npara participar, e esses depósitos podem ser revogados ou cortados, quando um comportamento malicioso é detectado \"),_c('a',{attrs:{\"href\":\"https://blog.ethereum.org/2014/01/15/slasher-a-punitive-proof-of-stake-algorithm/\"}},[_vm._v(\"[10]\")]),_vm._v(\".\")]),_c('p',[_vm._v(\"Observe que isso é diferente do Bitcoin, onde o fork é uma ocorrência regular devido à assincronia de\\nrede e à natureza probabilística de encontrar colisões de hash parciais. Uma vez que, em muitos casos,\\num fork malicioso é indistinguível de um fork devido à assincronia, o Bitcoin não pode implementar de\\nforma confiável a responsabilidade de um fork, com exceção do custo implícito pago por mineradores que\\ntem a oportunidade de minerarem um bloco órfão.\")]),_c('h3',{attrs:{\"id\":\"consenso-tendermint\"}},[_vm._v(\"Consenso Tendermint\")]),_c('p',[_vm._v(\"Chamamos as fases de votação de \"),_c('em',[_vm._v(\"PreVote\")]),_vm._v(\" e \"),_c('em',[_vm._v(\"PreCommit\")]),_vm._v(\". Um voto pode ser para um bloco em particular ou\\npara \"),_c('em',[_vm._v(\"Nil\")]),_vm._v(\". Chamamos uma coleção de +⅔ PreVotes para um único bloco na mesma rodada de um \"),_c('em',[_vm._v(\"Polka\")]),_vm._v(\", e uma\\ncoleção de +⅔ PreCommits para um único bloco na mesma rodada de um \"),_c('em',[_vm._v(\"Commit\")]),_vm._v(\". Se +⅔ PreCommit para Nil na\\nmesma rodada, eles passam para a próxima rodada.\")]),_c('p',[_vm._v(\"Observe que o determinismo estrito no protocolo incorre em uma suposição de sincronia fraca, pois os líderes\\ncom falhas devem ser detectados e ignorados. Assim, os validadores aguardam algum tempo, \"),_c('em',[_vm._v(\"TimeoutPropose\")]),_vm._v(\",\\nantes de Prevote Nil, e o valor de TimeoutPropose aumenta a cada rodada. A progressão através do\\nresto de uma rodada é totalmente assincrôna, onde o progresso é feito somente quando um validador\\nouve de +⅔ da rede. Na prática, seria necessário um adversário extremamente forte para impedir\\nindefinidamente a suposição de sincronia fraca (fazendo com que o consenso deixasse de confirmar um bloco),\\ne isso pode ser ainda mais difícil usando valores randomizados de TimeoutPropose em cada validador.\")]),_c('p',[_vm._v(\"Um conjunto adicional de restrições, ou Locking Rules(Regras de bloqueio), garante que a rede acabará\\npor confirmar apenas um bloco em cada altura. Qualquer tentativa maliciosa de confirmar de causar um\\nbloco a ser confirmado a uma determinada altura pode ser identificada. Primeiro, um PreCommit para um\\nbloco deve vir com justificação, na forma de um Polka para esse bloco. Se o validador já tiver PreCommit\\num bloco na rodada \"),_c('em',[_vm._v(\"R\"),_c('em',[_vm._v(\"1\")]),_vm._v(\", nós dizemos que eles estão _locked\")]),_vm._v(\" nesse bloco, e o Polka usado\\npara justificar o novo PreCommit na rodada \"),_c('em',[_vm._v(\"R_2\")]),_vm._v(\" deve vir de uma rodada \"),_c('em',[_vm._v(\"R_polka\")]),_vm._v(\"\\nonde \"),_c('em',[_vm._v(\"R_1 < R_polka <= R_2\")]),_vm._v(\". Em segundo lugar, os validadores devem propor e/ou pré-votar\\no bloco que eles estão travados. Juntas, essas condições garantem que um validador não PreCommit\\nsem evidência suficiente como justificativa, e que os validadores que já têm PreCommit não podem\\ncontribuir para a evidência de PreCommit algo mais. Isso garante a segurança e a vivacidade do algoritmo de consenso.\")]),_c('p',[_vm._v(\"Os detalhes completos do protocolo são descritos\\n\"),_c('a',{attrs:{\"href\":\"https://github.com/tendermint/tendermint/wiki/Byzantine-Consensus-Algorithm\"}},[_vm._v(\"aqui\")]),_vm._v(\".\")]),_c('h3',{attrs:{\"id\":\"clientes-leves-do-tendermint\"}},[_vm._v(\"Clientes Leves do Tendermint\")]),_c('p',[_vm._v(\"A necessidade de sincronizar todos os cabeçalhos de bloco é eliminada no Tendermint-PoS, como por exemplo\\na existência de uma cadeia alternativa (um fork) significando que ⅓+ do stake ligado pode ser reduzido.\\nNaturalmente, a partir que dividir requer que \"),_c('em',[_vm._v(\"someone\")]),_vm._v(\" compartilhe evidência de um fork, clientes leves\\ndevem armazenar qualquer bloco-hash comprometido que eles vêem. Além disso, os clientes leves podem\\nperiodicamente ficarem sincronizados com as alterações no conjunto de validadores, para evitar\\n\"),_c('a',{attrs:{\"href\":\"#preventing-long-range-attacks\"}},[_vm._v(\"ataques de longo alcance\")]),_vm._v(\" (mas outras soluções são possíveis).\")]),_c('p',[_vm._v(\"Em espírito semelhante do Ethereum, o Tendermint permite que os aplicativos incorporem um hash de raiz\\nMerkle global em cada bloco, permitindo verifícações fáceis de consultas de estado para fins como saldos\\nde contas, o valor armazenado em um contrato ou a existência de saída de uma transação não gasta,\\ndependendo da natureza da aplicação.\")]),_c('h3',{attrs:{\"id\":\"prevencao-de-ataques-de-longo-alcance\"}},[_vm._v(\"Prevenção de ataques de longo alcance\")]),_c('p',[_vm._v(\"Assumindo uma coleção suficientemente elástica de redes de difusão e um conjunto de validador\\nestático, qualquer fork na blockchain pode ser detectado e os depósitos dos validadores ofensivos cortados.\\nEsta inovação, sugerida pela primeira vez por Vitalik Buterin no início de 2014, resolve o problema do “nada a perder” de outras\\ncriptomoedas de PoW (ver \"),_c('a',{attrs:{\"href\":\"#related-work\"}},[_vm._v(\"Trabalho Relacionado\")]),_vm._v(\"). No entanto, uma vez que os conjuntos de\\nvalidadores devem ser capazes de mudar, durante um longo período de tempo, os validadores originais podem\\ntornar-se não ligados e, portanto, seriam livres para criar uma nova cadeia a partir do bloco gênese,\\nnão incorrendo nenhum custo, visto que eles não tem depósitos trancados. Este ataque veio a ser conhecido\\ncomo Ataque de Longo Alcance (Long Range Attack - LRA), em contraste com um Ataque de Curto Alcance,\\nonde os validadores que estão atualmente ligados causam um fork e são, portanto, puníveis\\n(assumindo um algoritimo BFT de fork-responsável como o consenso Tendermint).\\nAtaques de longo alcance são muitas vezes pensados para serem um golpe crítico para o PoW.\")]),_c('p',[_vm._v(\"Felizmente, o LRA pode ser atenuado da seguinte forma. Em primeiro lugar, para que um validador se\\ndesatar (assim recuperando seu depósito colateral e não mais ganhando taxas para participar no consenso),\\no depósito deve ser tornado intransferível por um período de tempo conhecido como o “unbonding period”\\n(período de desatamento), que pode ser na ordem de semanas ou meses. Em segundo lugar, para um cliente\\nleve ser seguro, a primeira vez que ele se conecta à rede, ele deve verificar um hash de bloqueio recente\\ncontra uma fonte confiável ou, preferencialmente, várias fontes. Esta condição é por vezes referida como\\n“subjetividade fraca”. Finalmente, para permanecer seguro, ele deve sincronizar com o mais recente\\nvalidador definido, pelo menos, tão frequentemente quanto a duração do período de desatamento.\\nIsso garante que o cliente leve saiba sobre as alterações no conjunto de validação definido antes de\\num validador não ter mais o seu capital ligado e, portanto, não mais em jogo, o que permitiria enganar\\no cliente, executando um ataque de longo alcance, criando novos blocos re-começando em uma altura\\na qual foi ligado (assumindo que tem controle de muitas das primeiras chaves privadas).\")]),_c('p',[_vm._v(\"Note que superar o LRA desta forma requer uma revisão do modelo de segurança original do PoW. No PoW,\\npresume-se que um cliente leve pode sincronizar com a altura atual do bloco gênese confiável a qualquer\\nmomento simplesmente processando o PoW em cada cabeçalho de bloco. Para superar o LRA, entretanto,\\nexigimos que um cliente leve entre em linha com alguma regularidade para rastrear mudanças no conjunto\\nde validadores e que, na primeira vez em que eles fiquem on-line, eles devem ser particularmente cuidadosos\\npara autenticar o que ouvem da rede contra fontes confiáveis . Naturalmente, este último requisito é\\nsemelhante ao do Bitcoin, onde o protocolo e o software também devem ser obtidos a partir de uma fonte confiável.\")]),_c('p',[_vm._v(\"O método acima para prevenir LRA é bem adequado para validadores e nós completos de uma blockchain alimentada\\npor Tendermint porque estes nós são destinados a permanecerem conectados à rede. O método também é adequado\\npara clientes leves que podem ser esperados para sincronizar com a rede com freqüência. No entanto, para\\nos clientes leves que não se espera ter acesso frequente à Internet ou à rede da blockchain, ainda pode\\nser utilizada outra solução para superar o LRA. Os detentores de tokens não validadores podem publicar\\nos seus tokens como colaterais com um período de não ligação muito longo (por exemplo, muito mais longo\\ndo que o período de não ligação para validadores) e servir clientes leves com um método secundário de\\natestar a validade dos blocos atuais e hashes de blocos passados. Embora esses tokens não contam para a\\nsegurança do consenso da blockchain, eles podem fornecer fortes garantias para clientes leves. Se a\\nconsulta histórica de hash de blocos fosse suportada no Ethereum, qualquer pessoa poderia vincular\\nseus tokens em um contrato inteligente projetado especialmente para isso e fornecer serviços de\\ncomprovação de pagamentos, efetivamente criando um mercado para a segurança contra LRA de cliente leve.\")]),_c('h3',{attrs:{\"id\":\"superando-forks-e-ataques-de-censura\"}},[_vm._v(\"Superando Forks e Ataques de Censura\")]),_c('p',[_vm._v(\"Devido à definição de uma confimação de bloco, qualquer coalizão de poder de voto ⅓+ pode interromper a\\nblockchain ficando off-line ou não transmitir os seus votos. Tal coalizão também pode censurar transações\\nparticulares rejeitando blocos que incluem essas transações, embora isso resultaria em uma proporção\\nsignificativa de propostas de blocos a serem rejeitadas, o que iria retardar a taxa de blocos\\nconfirmados da blockchain, reduzindo sua utilidade e valor. A coalizão mal-intencionada também pode transmitir\\nvotos em um fio de modo a triturar os blocos confirmados da blockchain para quase parar, ou se envolver em\\nqualquer combinação desses ataques. Finalmente, isso pode fazer com que a cadeia de blocos “forke” (bifurque),\\npor dupla assinatura ou violação as regras de bloqueio.\")]),_c('p',[_vm._v(\"Se um adversário globalmente ativo também estivesse envolvido, poderia dividir a rede de tal maneira que\\npossa parecer que o subconjunto errado de validadores era responsável pela desaceleração. Esta não é apenas\\numa limitação do Tendermint, mas sim uma limitação de todos os protocolos de consenso cuja\\nrede é potencialmente controlada por um adversário ativo.\")]),_c('p',[_vm._v(\"Para estes tipos de ataques, um subconjunto de validadores deve coordenar através de meios externos\\npara assinar um proposta de reorganização que escolhe um fork (e qualquer prova disso) e o\\nsubconjunto inicial de validadores com suas assinaturas. Os validadores que assinam tal\\nproposta de reorganização deixam seu colateral em todos os outros forks. Os clientes\\ndevem verificar as assinaturas na proposta de reorganização, verificar qualquer\\nevidência e fazer um julgamento ou solicitar ao usuário final uma decisão. Por exemplo,\\numa carteira para celular um aplicativo que pode alertar o usuário com um aviso de segurança,\\nenquanto um refrigerador pode aceitar qualquer proposta de reorganização assinada por\\n+½ dos validadores originais por poder de voto.\")]),_c('p',[_vm._v(\"Nenhum algoritmo não-sincrônico tolerante a falhas Bizantino pode chegar a um consenso quando ⅓+\\nde poder de voto for desonesto, mas um fork supõe que ⅓+ do poder de voto já foram desonestos por\\ndupla assinatura ou bloqueio de mudança sem justificativa. Portanto, assinar a proposta de\\nreorganização é um problema de coordenação que não pode ser resolvido por qualquer protocolo\\nnão-sincronico (isto é, automaticamente e sem fazer suposições sobre a confiabilidade da rede subjacente).\\nPor enquanto, deixamos o problema da coordenação da proposta de reorganização para a coordenação\\nhumana através do consenso social na mídia na internet. Os validadores devem ter cuidado para garantir\\nque não haja partições de rede remanescentes antes de assinar uma proposta de reorganização,\\npara evitar situações em que duas propostas de reorganização em conflito sejam assinadas.\")]),_c('p',[_vm._v(\"Assumindo que o meio de coordenação é externo e o protocolo é robusto, resulta-se que os forks são\\numa preocupação menor do que os ataques de censura.\")]),_c('p',[_vm._v(\"Além de forks e censura, que exigem ⅓+ poder de votação Bizantina, uma coalizão de +⅔ poder de\\nvoto pode ser pratica arbitrária, estado inválido. Esta é a característica de qualquer sistema\\nde consenso (BFT). Ao contrário da dupla assinatura, que cria forks com provas facilmente\\nverificáveis, a detecção de obrigatoriedade de um estado inválido requer que os pares não\\nvalidadores verifiquem blocos inteiros, o que implica que eles mantêm uma cópia local do estado\\ne executam cada transação, computando a raiz de estado de forma independente para eles mesmos.\\nUma vez detectado, a única maneira de lidar com essa falha é através do consenso social.\\nPor exemplo, em situações em que o Bitcoin falhou, seja por causa de bugs de software\\n(como em março de 2013), ou praticar um estado inválido devido ao comportamento Bizantino\\ndos mineradores (como em julho de 2015), a comunidade bem conectada de negócios, desenvolvedores,\\nmineradores e outras organizações estabeleceu um consenso social sobre quais ações manuais se\\nfaziam necessárias para curar a rede. Além disso, uma vez que se pode esperar que os validadores\\nde uma cadeia de blocos de Tendermint sejam identificáveis, o compromisso de um estado inválido\\npode até ser punido por lei ou por alguma jurisprudência externa, se desejado.\")]),_c('h3',{attrs:{\"id\":\"especificacao-tmsp\"}},[_vm._v(\"Especificação TMSP\")]),_c('p',[_vm._v(\"TMSP consiste em 3 tipos de mensagens primárias que são entregues do núcleo para o aplicativo.\\nO aplicativo responde com mensagens de resposta correspondentes.\")]),_c('p',[_vm._v(\"A mensagem \"),_c('code',{pre:true},[_vm._v(\"AppendTx\")]),_vm._v(\" é o cavalo de trabalho da aplicação. Cada transação na blockchain\\né entregue com esta mensagem. O aplicativo precisa validar cada transação recebida com a\\nmensagem AppendTx contra o estado atual, o protocolo de aplicativo e as credenciais\\ncriptográficas da transação. Uma transação validada precisa atualizar o estado do\\naplicativo - vinculando um valor a um armazenamento de valores chave ou atualizando o banco de dados UTXO.\")]),_c('p',[_vm._v(\"A mensagem \"),_c('code',{pre:true},[_vm._v(\"CheckTx\")]),_vm._v(\" é semelhante à AppendTx, mas é apenas para validar transações. O mempool do\\nTendermint BFT primeiro verifica a validade de uma transação com o CheckTx e apenas relata\\ntransações válidas para seus pares. Os aplicativos podem verificar um nonce incremental na transação\\ne retornar um erro em CheckTx se o nonce é antigo.\")]),_c('p',[_vm._v(\"A mensagem \"),_c('code',{pre:true},[_vm._v(\"Commit\")]),_vm._v(\" é usada para calcular uma obrigação criptográfica com o estado atual da aplicação,\\npara ser colocada no próximo cabeçalho do bloco. Isso tem algumas propriedades úteis. Inconsistências\\nna atualização desse estado agora aparecerão como forks do blockchain que captura uma classe inteira\\nde erros de programação. Isso também simplifica o desenvolvimento de clientes leves e seguros,\\njá que as provas de Merkle-hash podem ser provadas verificando o hash de blocos,\\ne o hash de blocos é assinado por um quórum de validadores (por poder de voto).\")]),_c('p',[_vm._v(\"Mensagens TMSP adicionais permitem que o aplicativo acompanhe e altere o conjunto\\nde validadores e que o aplicativo receba as informações do bloco, como a altura e os votos de confirmação.\")]),_c('p',[_vm._v(\"Pedidos/respostas TMSP são simples mensagens Protobuf.\\nConfira o \"),_c('a',{attrs:{\"href\":\"https://github.com/tendermint/tmsp/blob/master/types/types.proto\"}},[_vm._v(\"arquivo do esquema\")]),_vm._v(\".\")]),_c('h5',{attrs:{\"id\":\"appendtx\"}},[_vm._v(\"AppendTx\")]),_c('ul',[_c('li',[_c('strong',[_vm._v(\"Arguments\")]),_vm._v(\":\\n\"),_c('ul',[_c('li',[_c('code',{pre:true},[_vm._v(\"Data ([]byte)\")]),_vm._v(\": Os bytes de transação solicitada\")])])]),_c('li',[_c('strong',[_vm._v(\"Returns\")]),_vm._v(\":\\n\"),_c('ul',[_c('li',[_c('code',{pre:true},[_vm._v(\"Code (uint32)\")]),_vm._v(\": Código de resposta\")]),_c('li',[_c('code',{pre:true},[_vm._v(\"Data ([]byte)\")]),_vm._v(\": Bytes de resultado, se houver\")]),_c('li',[_c('code',{pre:true},[_vm._v(\"Log (string)\")]),_vm._v(\": Debug ou mensagem de erro\")])])]),_c('li',[_c('strong',[_vm._v(\"Usage\")]),_vm._v(\":\"),_c('br'),_vm._v(\"\\nAcrescentar e executar uma transação. Se a transação for válida,\\nCodeType.OK\")])]),_c('h5',{attrs:{\"id\":\"checktx\"}},[_vm._v(\"CheckTx\")]),_c('ul',[_c('li',[_c('strong',[_vm._v(\"Arguments\")]),_vm._v(\":\\n\"),_c('ul',[_c('li',[_c('code',{pre:true},[_vm._v(\"Data ([]byte)\")]),_vm._v(\": Os bytes de transação solicitados\")])])]),_c('li',[_c('strong',[_vm._v(\"Returns\")]),_vm._v(\":\\n\"),_c('ul',[_c('li',[_c('code',{pre:true},[_vm._v(\"Code (uint32)\")]),_vm._v(\": Código de resposta\")]),_c('li',[_c('code',{pre:true},[_vm._v(\"Data ([]byte)\")]),_vm._v(\": Bytes de resultado, se houver\")]),_c('li',[_c('code',{pre:true},[_vm._v(\"Log (string)\")]),_vm._v(\": Debug ou mensagem de erro\")])])]),_c('li',[_c('strong',[_vm._v(\"Usage\")]),_vm._v(\":\"),_c('br'),_vm._v(\"\\nValidar uma transação. Esta mensagem não deve mutar o estado.\\nAs transações são primeiro executadas através do CheckTx antes da transmissão para os pares na camada mempool.\\nVocê pode fazer o CheckTx semi-stateful e limpar o estado após \"),_c('code',{pre:true},[_vm._v(\"Commit\")]),_vm._v(\" ou\\n\"),_c('code',{pre:true},[_vm._v(\"BeginBlock\")]),_vm._v(\",\\npara permitir sequências dependentes de transações no mesmo bloco.\")])]),_c('h5',{attrs:{\"id\":\"commit\"}},[_vm._v(\"Commit\")]),_c('ul',[_c('li',[_c('strong',[_vm._v(\"Returns\")]),_vm._v(\":\\n\"),_c('ul',[_c('li',[_c('code',{pre:true},[_vm._v(\"Data ([]byte)\")]),_vm._v(\": O hash Merkle raiz\")]),_c('li',[_c('code',{pre:true},[_vm._v(\"Log (string)\")]),_vm._v(\": Debug ou erro de mensagem\")])])]),_c('li',[_c('strong',[_vm._v(\"Usage\")]),_vm._v(\":\"),_c('br'),_vm._v(\"\\nRetorna um hash Merkle raiz do estado da aplicação.\")])]),_c('h5',{attrs:{\"id\":\"query\"}},[_vm._v(\"Query\")]),_c('ul',[_c('li',[_c('strong',[_vm._v(\"Arguments\")]),_vm._v(\":\\n\"),_c('ul',[_c('li',[_c('code',{pre:true},[_vm._v(\"Data ([]byte)\")]),_vm._v(\": Os bytes de solicitação consultada\")])])]),_c('li',[_c('strong',[_vm._v(\"Returns\")]),_vm._v(\":\\n\"),_c('ul',[_c('li',[_c('code',{pre:true},[_vm._v(\"Code (uint32)\")]),_vm._v(\": Código de resposta\")]),_c('li',[_c('code',{pre:true},[_vm._v(\"Data ([]byte)\")]),_vm._v(\": Os bytes de resposta consultada\")]),_c('li',[_c('code',{pre:true},[_vm._v(\"Log (string)\")]),_vm._v(\": Debug ou erro de mensagem\")])])])]),_c('h5',{attrs:{\"id\":\"flush\"}},[_vm._v(\"Flush\")]),_c('ul',[_c('li',[_c('strong',[_vm._v(\"Usage\")]),_vm._v(\":\"),_c('br'),_vm._v(\"\\nLimpar a fila de resposta. Aplicações que implementam \"),_c('code',{pre:true},[_vm._v(\"types.Application\")]),_vm._v(\"\\nnão precisa implementar esta mensagem - é tratada pelo projeto.\")])]),_c('h5',{attrs:{\"id\":\"info\"}},[_vm._v(\"Info\")]),_c('ul',[_c('li',[_c('strong',[_vm._v(\"Returns\")]),_vm._v(\":\\n\"),_c('ul',[_c('li',[_c('code',{pre:true},[_vm._v(\"Data ([]byte)\")]),_vm._v(\": Os bytes de informação\")])])]),_c('li',[_c('strong',[_vm._v(\"Usage\")]),_vm._v(\":\"),_c('br'),_vm._v(\"\\nRetorna informações sobre o estado da aplicação. Aplicação específicão.\")])]),_c('h5',{attrs:{\"id\":\"setoption\"}},[_vm._v(\"SetOption\")]),_c('ul',[_c('li',[_c('strong',[_vm._v(\"Arguments\")]),_vm._v(\":\\n\"),_c('ul',[_c('li',[_c('code',{pre:true},[_vm._v(\"Key (string)\")]),_vm._v(\": Chave para definir\")]),_c('li',[_c('code',{pre:true},[_vm._v(\"Value (string)\")]),_vm._v(\": Valor a definir para a chave\")])])]),_c('li',[_c('strong',[_vm._v(\"Returns\")]),_vm._v(\":\\n\"),_c('ul',[_c('li',[_c('code',{pre:true},[_vm._v(\"Log (string)\")]),_vm._v(\": Debug ou mensagem de erro\")])])]),_c('li',[_c('strong',[_vm._v(\"Usage\")]),_vm._v(\":\"),_c('br'),_vm._v(\"\\nDefine as opções do aplicativo. Exemplo Key=“mode”, Value=“mempool” para uma conexão mempool\\n, ou Key=“mode”, Value=“consensus” para uma conexão de consenso.\\nOutras opções são específicas da aplicação.\")])]),_c('h5',{attrs:{\"id\":\"initchain\"}},[_vm._v(\"InitChain\")]),_c('ul',[_c('li',[_c('strong',[_vm._v(\"Arguments\")]),_vm._v(\":\\n\"),_c('ul',[_c('li',[_c('code',{pre:true},[_vm._v(\"Validators ([]Validator)\")]),_vm._v(\": validadores de genesis iniciais\")])])]),_c('li',[_c('strong',[_vm._v(\"Usage\")]),_vm._v(\":\"),_c('br'),_vm._v(\"\\nChamado uma vez na genesis\")])]),_c('h5',{attrs:{\"id\":\"beginblock\"}},[_vm._v(\"BeginBlock\")]),_c('ul',[_c('li',[_c('strong',[_vm._v(\"Arguments\")]),_vm._v(\":\\n\"),_c('ul',[_c('li',[_c('code',{pre:true},[_vm._v(\"Height (uint64)\")]),_vm._v(\": A altura do bloco que está começando\")])])]),_c('li',[_c('strong',[_vm._v(\"Usage\")]),_vm._v(\":\"),_c('br'),_vm._v(\"\\nSinaliza o início de um novo bloco. Chamado antes de qualquer AppendTxs.\")])]),_c('h5',{attrs:{\"id\":\"endblock\"}},[_vm._v(\"EndBlock\")]),_c('ul',[_c('li',[_c('strong',[_vm._v(\"Arguments\")]),_vm._v(\":\\n\"),_c('ul',[_c('li',[_c('code',{pre:true},[_vm._v(\"Height (uint64)\")]),_vm._v(\": A altura do bloco que terminou\")])])]),_c('li',[_c('strong',[_vm._v(\"Returns\")]),_vm._v(\":\\n\"),_c('ul',[_c('li',[_c('code',{pre:true},[_vm._v(\"Validators ([]Validator)\")]),_vm._v(\": Mudança de validadores com novos poderes de voto (0\\npara remover)\")])])]),_c('li',[_c('strong',[_vm._v(\"Usage\")]),_vm._v(\":\"),_c('br'),_vm._v(\"\\nSinaliza o fim de um bloco. Chamado antes de cada Commit após todas as\\ntransações\")])]),_c('p',[_vm._v(\"Veja \"),_c('a',{attrs:{\"href\":\"https://github.com/tendermint/tmsp#message-types\"}},[_vm._v(\"o repositório TMSP\")]),_vm._v(\" para mais detalhes.\")]),_c('h3',{attrs:{\"id\":\"reconhecimento-de-entrega-de-pacotes-ibc\"}},[_vm._v(\"Reconhecimento de entrega de pacotes IBC\")]),_c('p',[_vm._v(\"Há várias razões pelas quais um remetente pode querer o reconhecimento da entrega de um pacote\\npela cadeia de recebimento. Por exemplo, o remetente pode não saber o status da cadeia de\\ndestino, se for esperado que esteja com defeito. Ou, o remetente pode querer impor um tempo\\nlimite no pacote (com o campo \"),_c('code',{pre:true},[_vm._v(\"MaxHeight\")]),_vm._v(\"), enquanto qualquer cadeia de destino pode sofrer\\nde um ataque de negação de serviço com um aumento repentino no número de pacotes de entrada.\")]),_c('p',[_vm._v(\"Nesses casos, o remetente pode exigir confirmação de entrega configurando o status\\ndo pacote inicial como \"),_c('code',{pre:true},[_vm._v(\"AckPending\")]),_vm._v(\". Em seguida, é a responsabilidade da\\ncadeia receptora confirmar a entrega, incluindo uma abreviada \"),_c('code',{pre:true},[_vm._v(\"IBCPacket\")]),_vm._v(\" no app Merkle hash.\")]),_c('p',[_c('img',{attrs:{\"src\":\"https://raw.githubusercontent.com/gnuclear/atom-whitepaper/master/msc/ibc_with_ack.png\",\"alt\":\"Figura da Zone1, Zone2, e Hub IBC comreconhecimento\"}})]),_c('p',[_vm._v(\"Primeiro, um \"),_c('code',{pre:true},[_vm._v(\"IBCBlockCommit\")]),_vm._v(\" e\"),_c('code',{pre:true},[_vm._v(\"IBCPacketTx\")]),_vm._v(\" são postados no “Hub” que prova\\na existência de um \"),_c('code',{pre:true},[_vm._v(\"IBCPacket\")]),_vm._v(\" na “Zone1”. Digamos que \"),_c('code',{pre:true},[_vm._v(\"IBCPacketTx\")]),_vm._v(\" tem o seguinte valor:\")]),_c('ul',[_c('li',[_c('code',{pre:true},[_vm._v(\"FromChainID\")]),_vm._v(\": “Zone1”\")]),_c('li',[_c('code',{pre:true},[_vm._v(\"FromBlockHeight\")]),_vm._v(\": 100 (say)\")]),_c('li',[_c('code',{pre:true},[_vm._v(\"Packet\")]),_vm._v(\": an \"),_c('code',{pre:true},[_vm._v(\"IBCPacket\")]),_vm._v(\":\\n\"),_c('ul',[_c('li',[_c('code',{pre:true},[_vm._v(\"Header\")]),_vm._v(\": an \"),_c('code',{pre:true},[_vm._v(\"IBCPacketHeader\")]),_vm._v(\":\\n\"),_c('ul',[_c('li',[_c('code',{pre:true},[_vm._v(\"SrcChainID\")]),_vm._v(\": “Zone1”\")]),_c('li',[_c('code',{pre:true},[_vm._v(\"DstChainID\")]),_vm._v(\": “Zone2”\")]),_c('li',[_c('code',{pre:true},[_vm._v(\"Number\")]),_vm._v(\": 200 (say)\")]),_c('li',[_c('code',{pre:true},[_vm._v(\"Status\")]),_vm._v(\": \"),_c('code',{pre:true},[_vm._v(\"AckPending\")])]),_c('li',[_c('code',{pre:true},[_vm._v(\"Type\")]),_vm._v(\": “moeda”\")]),_c('li',[_c('code',{pre:true},[_vm._v(\"MaxHeight\")]),_vm._v(\": 350 (Dizer que “Hub” está atualmente na altura 300)\")])])]),_c('li',[_c('code',{pre:true},[_vm._v(\"Payload\")]),_vm._v(\": <Os bytes de uma carga paga de “moeda”>\")])])])]),_c('p',[_vm._v(\"Em seguida, um \"),_c('code',{pre:true},[_vm._v(\"IBCBlockCommit\")]),_vm._v(\" e \"),_c('code',{pre:true},[_vm._v(\"IBCPacketTx\")]),_vm._v(\" são publicados na “Zone2” que comprova\\na existência de um \"),_c('code',{pre:true},[_vm._v(\"IBCPacket\")]),_vm._v(\" em “Hub”. Digamos que \"),_c('code',{pre:true},[_vm._v(\"IBCPacketTx\")]),_vm._v(\" tem o seguinte valor:\")]),_c('ul',[_c('li',[_c('code',{pre:true},[_vm._v(\"FromChainID\")]),_vm._v(\": “Hub”\")]),_c('li',[_c('code',{pre:true},[_vm._v(\"FromBlockHeight\")]),_vm._v(\": 300\")]),_c('li',[_c('code',{pre:true},[_vm._v(\"Packet\")]),_vm._v(\": an \"),_c('code',{pre:true},[_vm._v(\"IBCPacket\")]),_vm._v(\":\\n\"),_c('ul',[_c('li',[_c('code',{pre:true},[_vm._v(\"Header\")]),_vm._v(\": an \"),_c('code',{pre:true},[_vm._v(\"IBCPacketHeader\")]),_vm._v(\":\\n\"),_c('ul',[_c('li',[_c('code',{pre:true},[_vm._v(\"SrcChainID\")]),_vm._v(\": “Zone1”\")]),_c('li',[_c('code',{pre:true},[_vm._v(\"DstChainID\")]),_vm._v(\": “Zone2”\")]),_c('li',[_c('code',{pre:true},[_vm._v(\"Number\")]),_vm._v(\": 200\")]),_c('li',[_c('code',{pre:true},[_vm._v(\"Status\")]),_vm._v(\": \"),_c('code',{pre:true},[_vm._v(\"AckPending\")])]),_c('li',[_c('code',{pre:true},[_vm._v(\"Type\")]),_vm._v(\": “moeda”\")]),_c('li',[_c('code',{pre:true},[_vm._v(\"MaxHeight\")]),_vm._v(\": 350\")])])]),_c('li',[_c('code',{pre:true},[_vm._v(\"Payload\")]),_vm._v(\": <Os mesmos bytes de uma carga paga de “moeda”>\")])])])]),_c('p',[_vm._v(\"Em seguida, “Zone2” deve incluir em seu app-hash um pacote abreviado que mostra o novo\\nstatus de \"),_c('code',{pre:true},[_vm._v(\"AckSent\")]),_vm._v(\". Um \"),_c('code',{pre:true},[_vm._v(\"IBCBlockCommit\")]),_vm._v(\" e \"),_c('code',{pre:true},[_vm._v(\"IBCPacketTx\")]),_vm._v(\" são colocados de volta no “Hub”\\nque comprova a existência de um \"),_c('code',{pre:true},[_vm._v(\"IBCPacket\")]),_vm._v(\" abreviado na “Zone2”. Digamos que \"),_c('code',{pre:true},[_vm._v(\"IBCPacketTx\")]),_vm._v(\" tem o seguinte valor:\")]),_c('ul',[_c('li',[_c('code',{pre:true},[_vm._v(\"FromChainID\")]),_vm._v(\": “Zone2”\")]),_c('li',[_c('code',{pre:true},[_vm._v(\"FromBlockHeight\")]),_vm._v(\": 400 (say)\")]),_c('li',[_c('code',{pre:true},[_vm._v(\"Packet\")]),_vm._v(\": an \"),_c('code',{pre:true},[_vm._v(\"IBCPacket\")]),_vm._v(\":\\n\"),_c('ul',[_c('li',[_c('code',{pre:true},[_vm._v(\"Header\")]),_vm._v(\": an \"),_c('code',{pre:true},[_vm._v(\"IBCPacketHeader\")]),_vm._v(\":\\n\"),_c('ul',[_c('li',[_c('code',{pre:true},[_vm._v(\"SrcChainID\")]),_vm._v(\": “Zone1”\")]),_c('li',[_c('code',{pre:true},[_vm._v(\"DstChainID\")]),_vm._v(\": “Zone2”\")]),_c('li',[_c('code',{pre:true},[_vm._v(\"Number\")]),_vm._v(\": 200\")]),_c('li',[_c('code',{pre:true},[_vm._v(\"Status\")]),_vm._v(\": \"),_c('code',{pre:true},[_vm._v(\"AckSent\")])]),_c('li',[_c('code',{pre:true},[_vm._v(\"Type\")]),_vm._v(\": “moeda”\")]),_c('li',[_c('code',{pre:true},[_vm._v(\"MaxHeight\")]),_vm._v(\": 350\")])])]),_c('li',[_c('code',{pre:true},[_vm._v(\"PayloadHash\")]),_vm._v(\": <Os bytes de hash da mesma carga paga de “moeda”>\")])])])]),_c('p',[_vm._v(\"Finalmente, “Hub” deve atualizar o status do pacote de \"),_c('code',{pre:true},[_vm._v(\"AckPending\")]),_vm._v(\" para\"),_c('code',{pre:true},[_vm._v(\"AckReceived\")]),_vm._v(\".\\nA evidência desse novo status finalizado deve voltar a “Zone2”. Digamos que \"),_c('code',{pre:true},[_vm._v(\"IBCPacketTx\")]),_vm._v(\" tem o seguinte valor:\")]),_c('ul',[_c('li',[_c('code',{pre:true},[_vm._v(\"FromChainID\")]),_vm._v(\": “Hub”\")]),_c('li',[_c('code',{pre:true},[_vm._v(\"FromBlockHeight\")]),_vm._v(\": 301\")]),_c('li',[_c('code',{pre:true},[_vm._v(\"Packet\")]),_vm._v(\": an \"),_c('code',{pre:true},[_vm._v(\"IBCPacket\")]),_vm._v(\":\\n\"),_c('ul',[_c('li',[_c('code',{pre:true},[_vm._v(\"Header\")]),_vm._v(\": an \"),_c('code',{pre:true},[_vm._v(\"IBCPacketHeader\")]),_vm._v(\":\\n\"),_c('ul',[_c('li',[_c('code',{pre:true},[_vm._v(\"SrcChainID\")]),_vm._v(\": “Zone1”\")]),_c('li',[_c('code',{pre:true},[_vm._v(\"DstChainID\")]),_vm._v(\": “Zone2”\")]),_c('li',[_c('code',{pre:true},[_vm._v(\"Number\")]),_vm._v(\": 200\")]),_c('li',[_c('code',{pre:true},[_vm._v(\"Status\")]),_vm._v(\": \"),_c('code',{pre:true},[_vm._v(\"AckReceived\")])]),_c('li',[_c('code',{pre:true},[_vm._v(\"Type\")]),_vm._v(\": “moeda”\")]),_c('li',[_c('code',{pre:true},[_vm._v(\"MaxHeight\")]),_vm._v(\": 350\")])])]),_c('li',[_c('code',{pre:true},[_vm._v(\"PayloadHash\")]),_vm._v(\": <Os bytes de hash da mesma carga paga de “moeda”>\")])])])]),_c('p',[_vm._v(\"Enquanto isso, “Zone1” pode assumir de maneira otimista a entrega bem-sucedida de um pacote\\nde “moeda”, a menos que provas em contrário sejam comprovadas em “Hub”. No exemplo acima,\\nse “Hub” não tivesse recebido um status \"),_c('code',{pre:true},[_vm._v(\"AckSent\")]),_vm._v(\" de “Zone2” pelo bloco 350, ele teria\\ndefinido o status automaticamente para \"),_c('code',{pre:true},[_vm._v(\"Timeout\")]),_vm._v(\". Essa evidência de um tempo limite pode\\nser postada novamente na “Zone1”, e quaisquer tokens podem ser retornados.\")]),_c('p',[_c('img',{attrs:{\"src\":\"https://raw.githubusercontent.com/gnuclear/atom-whitepaper/master/msc/ibc_with_ack_timeout.png\",\"alt\":\"Figura da Zone1, Zone2, e Hub IBC com reconhecimento etimeout\"}})]),_c('h3',{attrs:{\"id\":\"arvore-merkle-e-especificacao-de-prova\"}},[_vm._v(\"Árvore Merkle e Especificação de Prova\")]),_c('p',[_vm._v(\"Existem dois tipos de árvores Merkle suportadas no ecossistema Tendermint / Cosmos: A Árvore Simples e a Árvore IAVL+.\")]),_c('h4',{attrs:{\"id\":\"arvore-simples\"}},[_vm._v(\"Árvore Simples\")]),_c('p',[_vm._v(\"A Árvore Simples é uma árvore Merkle para uma lista estática de elementos. Se o número de\\nitens não for um poder de dois, algumas folhas estarão em níveis diferentes. Árvore Simples\\ntenta manter ambos os lados da árvore da mesma altura, mas a esquerda pode ter um maior.\\nEsta árvore Merkle é usada para Merkle-lizar as transações de um bloco, e os elementos de\\nnível superior da raiz do estado do aplicativo.\")]),_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"v-pre\":\"\"}},[_vm._v(\"                *\\n               / \\\\\\n             /     \\\\\\n           /         \\\\\\n         /             \\\\\\n        *               *\\n       / \\\\             / \\\\\\n      /   \\\\           /   \\\\\\n     /     \\\\         /     \\\\\\n    *       *       *       h6\\n   / \\\\     / \\\\     / \\\\\\n  h0  h1  h2  h3  h4  h5\\n\\n  Uma ÁrvoreSimples com sete elementos\\n\")])]),_c('h4',{attrs:{\"id\":\"arvore-iavl\"}},[_vm._v(\"Árvore IAVL+\")]),_c('p',[_vm._v(\"O objetivo da estrutura de dados IAVL+ é fornecer armazenamento persistente para pares de valores-chave\\nno estado do aplicativo, de modo que um hash determinista de raiz Merkle possa ser calculado\\neficientemente. A árvore é balanceada usando uma variante do \"),_c('a',{attrs:{\"href\":\"http://en.wikipedia.org/wiki/AVL_tree\"}},[_vm._v(\"algoritmo AVL\")]),_vm._v(\", e todas as operações são O(log(n)).\")]),_c('p',[_vm._v(\"Em uma árvore AVL, as alturas das duas subárvores filhas de qualquer nó diferem por no máximo um.\\nSempre que esta condição for violada após uma atualização, a árvore é rebalanceada criando O(log(n))\\nnovos nós que apontam para nós não modificados da árvore antiga. No algoritmo AVL original, os nós\\ninternos também podem conter pares de valores-chave. O algoritmo AVL + (observe o sinal de adição)\\nmodifica o algoritmo AVL para manter todos os valores em folha de nós, enquanto\\nusando apenas nós de ramo para armazenar chaves. Isso simplifica o algoritmo, mantendo a trilha hash merkle curta.\")]),_c('p',[_vm._v(\"A Árvore AVL + é análoga à Ethereum \"),_c('a',{attrs:{\"href\":\"http://en.wikipedia.org/wiki/Radix_tree\"}},[_vm._v(\"Patricia tries\")]),_vm._v(\".\\nHá compensações. Chaves não precisam ser hasheadas antes da inserção em árvores IAVL+, portanto,\\nisso fornece iteração mais rápida ordenada no espaço-chave que pode beneficiar algumas aplicações.\\nA lógica é mais simples de implementar, requerendo apenas dois tipos de nós - nós internos e nós de folhas.\\nA prova de Merkle é em média mais curta, sendo uma árvore binária equilibrada. Por outro lado,\\na raiz Merkle de uma árvore IAVL+ depende da ordem das atualizações.\")]),_c('p',[_vm._v(\"Iremos apoiar outras árvores Merkle eficientes, como Patricia Trie, da Ethereum, quando a variante binária estiver disponível.\")]),_c('h3',{attrs:{\"id\":\"tipos-de-transacao\"}},[_vm._v(\"Tipos de Transação\")]),_c('p',[_vm._v(\"Na implementação canônica, as transações são transmitidas para o aplicativo Cosmos hub através da interface TMSP.\")]),_c('p',[_vm._v(\"O Cosmos Hub aceitará uma série de tipos de transações primárias, incluindo \"),_c('code',{pre:true},[_vm._v(\"SendTx\")]),_vm._v(\",\\n\"),_c('code',{pre:true},[_vm._v(\"BondTx\")]),_vm._v(\", \"),_c('code',{pre:true},[_vm._v(\"UnbondTx\")]),_vm._v(\", \"),_c('code',{pre:true},[_vm._v(\"ReportHackTx\")]),_vm._v(\", \"),_c('code',{pre:true},[_vm._v(\"SlashTx\")]),_vm._v(\", \"),_c('code',{pre:true},[_vm._v(\"BurnAtomTx\")]),_vm._v(\", \"),_c('code',{pre:true},[_vm._v(\"ProposalCreateTx\")]),_vm._v(\" e \"),_c('code',{pre:true},[_vm._v(\"ProposalVoteTx\")]),_vm._v(\",\\nque são relativamente auto-explicativas e será documentado em uma futura revisão deste artigo.\\nAqui documentamos os dois principais tipos de transação para IBC: \"),_c('code',{pre:true},[_vm._v(\"IBCBlockCommitTx\")]),_vm._v(\" e \"),_c('code',{pre:true},[_vm._v(\"IBCPacketTx\")]),_vm._v(\".\")]),_c('h4',{attrs:{\"id\":\"ibcblockcommittx\"}},[_vm._v(\"IBCBlockCommitTx\")]),_c('p',[_vm._v(\"Uma transação \"),_c('code',{pre:true},[_vm._v(\"IBCBlockCommitTx\")]),_vm._v(\" é composta de:\")]),_c('ul',[_c('li',[_c('code',{pre:true},[_vm._v(\"ChainID (string)\")]),_vm._v(\": O ID da blockchain\")]),_c('li',[_c('code',{pre:true},[_vm._v(\"BlockHash ([]byte)\")]),_vm._v(\": Os bytes de hash de bloco, a raiz Merkle que inclui o app-hash\")]),_c('li',[_c('code',{pre:true},[_vm._v(\"BlockPartsHeader (PartSetHeader)\")]),_vm._v(\": Os bytes de cabeçalho do conjunto de blocos,\\napenas necessários para verificar assinaturas de voto\")]),_c('li',[_c('code',{pre:true},[_vm._v(\"BlockHeight (int)\")]),_vm._v(\": A altura do commit\")]),_c('li',[_c('code',{pre:true},[_vm._v(\"BlockRound (int)\")]),_vm._v(\": A rodada do commit\")]),_c('li',[_c('code',{pre:true},[_vm._v(\"Commit ([]Vote)\")]),_vm._v(\": O +⅔ Tendermint \"),_c('code',{pre:true},[_vm._v(\"Precommit\")]),_vm._v(\" de votos que compõem um bloco\")]),_c('li',[_c('code',{pre:true},[_vm._v(\"ValidatorsHash ([]byte)\")]),_vm._v(\": O hash da raiz da árvore-Merkle do novo conjunto de validadores\")]),_c('li',[_c('code',{pre:true},[_vm._v(\"ValidatorsHashProof (SimpleProof)\")]),_vm._v(\": Uma ÁrvoreSimples da prova-Merkle para provar o\\n\"),_c('code',{pre:true},[_vm._v(\"ValidatorsHash\")]),_vm._v(\" contra o \"),_c('code',{pre:true},[_vm._v(\"BlockHash\")])]),_c('li',[_c('code',{pre:true},[_vm._v(\"AppHash ([]byte)\")]),_vm._v(\": Um hash da raiz da árvore-Merkle da Árvore IAVL do estado de aplicação\")]),_c('li',[_c('code',{pre:true},[_vm._v(\"AppHashProof (SimpleProof)\")]),_vm._v(\": Uma ÁrvoreSimples da prova-Merkle para provar o\\n\"),_c('code',{pre:true},[_vm._v(\"AppHash\")]),_vm._v(\" contra o \"),_c('code',{pre:true},[_vm._v(\"BlockHash\")])])]),_c('h4',{attrs:{\"id\":\"ibcpackettx\"}},[_vm._v(\"IBCPacketTx\")]),_c('p',[_vm._v(\"Um \"),_c('code',{pre:true},[_vm._v(\"IBCPacket\")]),_vm._v(\" é composto de:\")]),_c('ul',[_c('li',[_c('code',{pre:true},[_vm._v(\"Header (IBCPacketHeader)\")]),_vm._v(\": O cabeçalho do pacote\")]),_c('li',[_c('code',{pre:true},[_vm._v(\"Payload ([]byte)\")]),_vm._v(\": Os bytes da carga paga do pacote. \"),_c('em',[_vm._v(\"Optional\")])]),_c('li',[_c('code',{pre:true},[_vm._v(\"PayloadHash ([]byte)\")]),_vm._v(\": O hash para os bytes do pacote. \"),_c('em',[_vm._v(\"Optional\")])])]),_c('p',[_vm._v(\"Qualquer um dos \"),_c('code',{pre:true},[_vm._v(\"Payload\")]),_vm._v(\" ou \"),_c('code',{pre:true},[_vm._v(\"PayloadHash\")]),_vm._v(\" deve estar presente. O hash de um \"),_c('code',{pre:true},[_vm._v(\"IBCPacket\")]),_vm._v(\"\\né uma raiz Merkle simples dos dois itens, \"),_c('code',{pre:true},[_vm._v(\"Header\")]),_vm._v(\" e \"),_c('code',{pre:true},[_vm._v(\"Payload\")]),_vm._v(\". Um \"),_c('code',{pre:true},[_vm._v(\"IBCPacket\")]),_vm._v(\" sem a carga completa\\né chamado de \"),_c('em',[_vm._v(\"abbreviated packet\")]),_vm._v(\".\")]),_c('p',[_vm._v(\"Um \"),_c('code',{pre:true},[_vm._v(\"IBCPacketHeader\")]),_vm._v(\" é composto de:\")]),_c('ul',[_c('li',[_c('code',{pre:true},[_vm._v(\"SrcChainID (string)\")]),_vm._v(\": O ID da blockchain fonte\")]),_c('li',[_c('code',{pre:true},[_vm._v(\"DstChainID (string)\")]),_vm._v(\": O ID da blockchain destino\")]),_c('li',[_c('code',{pre:true},[_vm._v(\"Number (int)\")]),_vm._v(\": Um número exclusivo para todos os pacotes\")]),_c('li',[_c('code',{pre:true},[_vm._v(\"Status (enum)\")]),_vm._v(\": Pode ser um \"),_c('code',{pre:true},[_vm._v(\"AckPending\")]),_vm._v(\", \"),_c('code',{pre:true},[_vm._v(\"AckSent\")]),_vm._v(\", \"),_c('code',{pre:true},[_vm._v(\"AckReceived\")]),_vm._v(\",\\n\"),_c('code',{pre:true},[_vm._v(\"NoAck\")]),_vm._v(\", ou \"),_c('code',{pre:true},[_vm._v(\"Timeout\")])]),_c('li',[_c('code',{pre:true},[_vm._v(\"Type (string)\")]),_vm._v(\": Os tipos são dependentes da aplicação. Cosmos reserva-se ao tipo de pacote “moeda”\")]),_c('li',[_c('code',{pre:true},[_vm._v(\"MaxHeight (int)\")]),_vm._v(\": Se status não for \"),_c('code',{pre:true},[_vm._v(\"NoAckWanted\")]),_vm._v(\" ou \"),_c('code',{pre:true},[_vm._v(\"AckReceived\")]),_vm._v(\" por essa altura, o status se tornará \"),_c('code',{pre:true},[_vm._v(\"Timeout\")]),_vm._v(\". \"),_c('em',[_vm._v(\"Opcional\")])])]),_c('p',[_vm._v(\"Uma transação \"),_c('code',{pre:true},[_vm._v(\"IBCPacketTx\")]),_vm._v(\" é composta de:\")]),_c('ul',[_c('li',[_c('code',{pre:true},[_vm._v(\"FromChainID (string)\")]),_vm._v(\": O ID da blockchain que está fornecendo este pacote; Não necessariamente a fonte\")]),_c('li',[_c('code',{pre:true},[_vm._v(\"FromBlockHeight (int)\")]),_vm._v(\": A altura da blockchain na qual o seguinte pacote é incluído (Merkle-izado) no hash da blockchain de origem\")]),_c('li',[_c('code',{pre:true},[_vm._v(\"Packet (IBCPacket)\")]),_vm._v(\": Um pacote de dados, cujo estado pode ser um\\n\"),_c('code',{pre:true},[_vm._v(\"AckPending\")]),_vm._v(\", \"),_c('code',{pre:true},[_vm._v(\"AckSent\")]),_vm._v(\", \"),_c('code',{pre:true},[_vm._v(\"AckReceived\")]),_vm._v(\", \"),_c('code',{pre:true},[_vm._v(\"NoAck\")]),_vm._v(\", ou \"),_c('code',{pre:true},[_vm._v(\"Timeout\")])]),_c('li',[_c('code',{pre:true},[_vm._v(\"PacketProof (IAVLProof)\")]),_vm._v(\": Uma prova-Merkle da Árvore IAVL para para provar o hash do pacote contra o `AppHash’ da cadeia de origem em determinada altura\")])]),_c('p',[_vm._v(\"A seqüência para enviar um pacote da “Zone1” para a “Zone2” através do “Hub” é mostrada em {Figure X}.\\nPrimeiro, um \"),_c('code',{pre:true},[_vm._v(\"IBCPacketTx\")]),_vm._v(\" prova ao “Hub” que o pacote está incluído no estado da aplicação de “Zone1”.\\nEm seguida, outro \"),_c('code',{pre:true},[_vm._v(\"IBCPacketTx\")]),_vm._v(\" prova a “Zone2” que o pacote está incluído no estado da aplicação “Hub”.\\nDurante esse procedimento, os campos \"),_c('code',{pre:true},[_vm._v(\"IBCPacket\")]),_vm._v(\" são idênticos: o \"),_c('code',{pre:true},[_vm._v(\"SrcChainID\")]),_vm._v(\" é sempre “Zone1”,\\ne o \"),_c('code',{pre:true},[_vm._v(\"DstChainID\")]),_vm._v(\" é sempre\\\" Zone2 \\\".\")]),_c('p',[_vm._v(\"O \"),_c('code',{pre:true},[_vm._v(\"PacketProof\")]),_vm._v(\" deve ter o caminho correto da prova-Merkle, da seguinte maneira:\")]),_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"v-pre\":\"\"}},[_vm._v(\"IBC/<SrcChainID>/<DstChainID>/<Number>\\n\")])]),_c('p',[_vm._v(\"Quando “Zone1” quer enviar um pacote para “Zone2” através do “Hub”, os dados de \"),_c('code',{pre:true},[_vm._v(\"IBCPacket\")]),_vm._v(\"\\nsão idênticos se o pacote é Merkle-izado em “Zone1”, no “Hub” ou “Zone2”. O único campo mutável\\né \"),_c('code',{pre:true},[_vm._v(\"Status\")]),_vm._v(\" para acompanhar a entrega, conforme mostrado abaixo.\")]),_c('h2',{attrs:{\"id\":\"agradecimentos\"}},[_vm._v(\"Agradecimentos\")]),_c('p',[_vm._v(\"Agradecemos aos nossos amigos e colegas por sua ajuda na conceituação, revisão e apoio no nosso trabalho com Tendermint e Cosmos.\")]),_c('ul',[_c('li',[_c('a',{attrs:{\"href\":\"https://github.com/zmanian\"}},[_vm._v(\"Zaki Manian\")]),_vm._v(\" da\\n\"),_c('a',{attrs:{\"href\":\"https://www.skuchain.com/\"}},[_vm._v(\"SkuChain\")]),_vm._v(\" forneceu muita ajuda na formatação e redacção, especialmente sob a seção TMSP\")]),_c('li',[_c('a',{attrs:{\"href\":\"https://github.com/jtremback\"}},[_vm._v(\"Jehan Tremback\")]),_vm._v(\" da Althea and Dustin Byington\\npor ajudar com iterações iniciais\")]),_c('li',[_c('a',{attrs:{\"href\":\"http://soc1024.com/\"}},[_vm._v(\"Andrew Miller\")]),_vm._v(\" da \"),_c('a',{attrs:{\"href\":\"https://eprint.iacr.org/2016/199\"}},[_vm._v(\"Honey\\nBadger\")]),_vm._v(\" pelo feedback sobre consenso\")]),_c('li',[_c('a',{attrs:{\"href\":\"https://fixingtao.com/\"}},[_vm._v(\"Greg Slepak\")]),_vm._v(\" pelo feedback sobre consenso e redação\")]),_c('li',[_vm._v(\"Também agradecemos ao \"),_c('a',{attrs:{\"href\":\"https://github.com/gleim\"}},[_vm._v(\"Bill Gleim\")]),_vm._v(\" e \"),_c('a',{attrs:{\"href\":\"http://www.seunghwanhan.com\"}},[_vm._v(\"Seunghwan\\nHan\")]),_vm._v(\" por várias contribuições.\")]),_c('li',[_c('a',{attrs:{\"href\":\"https://github.com/ShooterXD\"}},[_vm._v(\"Pedro Augusto\")]),_vm._v(\" pela tradução para\\nPortuguês\")])]),_c('h2',{attrs:{\"id\":\"citacoes\"}},[_vm._v(\"Citações\")]),_c('ul',[_c('li',[_c('a',{attrs:{\"href\":\"https://bitcoin.org/bitcoin.pdf\"}},[_vm._v(\"1\")]),_vm._v(\" Bitcoin: \"),_c('a',{attrs:{\"href\":\"https://bitcoin.org/bitcoin.pdf\"}},[_vm._v(\"https://bitcoin.org/bitcoin.pdf\")])]),_c('li',[_c('a',{attrs:{\"href\":\"http://zerocash-project.org/paper\"}},[_vm._v(\"2\")]),_vm._v(\" ZeroCash: \"),_c('a',{attrs:{\"href\":\"http://zerocash-project.org/paper\"}},[_vm._v(\"http://zerocash-project.org/paper\")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://github.com/ethereum/wiki/wiki/White-Paper\"}},[_vm._v(\"3\")]),_vm._v(\" Ethereum: \"),_c('a',{attrs:{\"href\":\"https://github.com/ethereum/wiki/wiki/White-Paper\"}},[_vm._v(\"https://github.com/ethereum/wiki/wiki/White-Paper\")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://download.slock.it/public/DAO/WhitePaper.pdf\"}},[_vm._v(\"4\")]),_vm._v(\" TheDAO: \"),_c('a',{attrs:{\"href\":\"https://download.slock.it/public/DAO/WhitePaper.pdf\"}},[_vm._v(\"https://download.slock.it/public/DAO/WhitePaper.pdf\")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki\"}},[_vm._v(\"5\")]),_vm._v(\" Segregated Witness: \"),_c('a',{attrs:{\"href\":\"https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki\"}},[_vm._v(\"https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki\")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://arxiv.org/pdf/1510.02037v2.pdf\"}},[_vm._v(\"6\")]),_vm._v(\" BitcoinNG: \"),_c('a',{attrs:{\"href\":\"https://arxiv.org/pdf/1510.02037v2.pdf\"}},[_vm._v(\"https://arxiv.org/pdf/1510.02037v2.pdf\")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://lightning.network/lightning-network-paper-DRAFT-0.5.pdf\"}},[_vm._v(\"7\")]),_vm._v(\" Lightning Network: \"),_c('a',{attrs:{\"href\":\"https://lightning.network/lightning-network-paper-DRAFT-0.5.pdf\"}},[_vm._v(\"https://lightning.network/lightning-network-paper-DRAFT-0.5.pdf\")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://github.com/tendermint/tendermint/wiki\"}},[_vm._v(\"8\")]),_vm._v(\" Tendermint: \"),_c('a',{attrs:{\"href\":\"https://github.com/tendermint/tendermint/wiki\"}},[_vm._v(\"https://github.com/tendermint/tendermint/wiki\")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://groups.csail.mit.edu/tds/papers/Lynch/jacm85.pdf\"}},[_vm._v(\"9\")]),_vm._v(\" FLP Impossibility: \"),_c('a',{attrs:{\"href\":\"https://groups.csail.mit.edu/tds/papers/Lynch/jacm85.pdf\"}},[_vm._v(\"https://groups.csail.mit.edu/tds/papers/Lynch/jacm85.pdf\")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://blog.ethereum.org/2014/01/15/slasher-a-punitive-proof-of-stake-algorithm/\"}},[_vm._v(\"10\")]),_vm._v(\" Slasher: \"),_c('a',{attrs:{\"href\":\"https://blog.ethereum.org/2014/01/15/slasher-a-punitive-proof-of-stake-algorithm/\"}},[_vm._v(\"https://blog.ethereum.org/2014/01/15/slasher-a-punitive-proof-of-stake-algorithm/\")])]),_c('li',[_c('a',{attrs:{\"href\":\"http://pmg.csail.mit.edu/papers/osdi99.pdf\"}},[_vm._v(\"11\")]),_vm._v(\" PBFT: \"),_c('a',{attrs:{\"href\":\"http://pmg.csail.mit.edu/papers/osdi99.pdf\"}},[_vm._v(\"http://pmg.csail.mit.edu/papers/osdi99.pdf\")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://bitshares.org/technology/delegated-proof-of-stake-consensus/\"}},[_vm._v(\"12\")]),_vm._v(\" BitShares: \"),_c('a',{attrs:{\"href\":\"https://bitshares.org/technology/delegated-proof-of-stake-consensus/\"}},[_vm._v(\"https://bitshares.org/technology/delegated-proof-of-stake-consensus/\")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://www.stellar.org/papers/stellar-consensus-protocol.pdf\"}},[_vm._v(\"13\")]),_vm._v(\" Stellar: \"),_c('a',{attrs:{\"href\":\"https://www.stellar.org/papers/stellar-consensus-protocol.pdf\"}},[_vm._v(\"https://www.stellar.org/papers/stellar-consensus-protocol.pdf\")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://interledger.org/rfcs/0001-interledger-architecture/\"}},[_vm._v(\"14\")]),_vm._v(\" Interledger: \"),_c('a',{attrs:{\"href\":\"https://interledger.org/rfcs/0001-interledger-architecture/\"}},[_vm._v(\"https://interledger.org/rfcs/0001-interledger-architecture/\")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://blockstream.com/sidechains.pdf\"}},[_vm._v(\"15\")]),_vm._v(\" Sidechains: \"),_c('a',{attrs:{\"href\":\"https://blockstream.com/sidechains.pdf\"}},[_vm._v(\"https://blockstream.com/sidechains.pdf\")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://blog.ethereum.org/2015/08/01/introducing-casper-friendly-ghost/\"}},[_vm._v(\"16\")]),_vm._v(\" Casper: \"),_c('a',{attrs:{\"href\":\"https://blog.ethereum.org/2015/08/01/introducing-casper-friendly-ghost/\"}},[_vm._v(\"https://blog.ethereum.org/2015/08/01/introducing-casper-friendly-ghost/\")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://github.com/tendermint/tmsp\"}},[_vm._v(\"17\")]),_vm._v(\" TMSP: \"),_c('a',{attrs:{\"href\":\"https://github.com/tendermint/tmsp\"}},[_vm._v(\"https://github.com/tendermint/tmsp\")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://github.com/ethereum/EIPs/issues/53\"}},[_vm._v(\"18\")]),_vm._v(\" Ethereum Sharding: \"),_c('a',{attrs:{\"href\":\"https://github.com/ethereum/EIPs/issues/53\"}},[_vm._v(\"https://github.com/ethereum/EIPs/issues/53\")])]),_c('li',[_c('a',{attrs:{\"href\":\"http://www.ds.ewi.tudelft.nl/fileadmin/pds/papers/PerformanceAnalysisOfLibswift.pdf\"}},[_vm._v(\"19\")]),_vm._v(\" LibSwift: \"),_c('a',{attrs:{\"href\":\"http://www.ds.ewi.tudelft.nl/fileadmin/pds/papers/PerformanceAnalysisOfLibswift.pdf\"}},[_vm._v(\"http://www.ds.ewi.tudelft.nl/fileadmin/pds/papers/PerformanceAnalysisOfLibswift.pdf\")])]),_c('li',[_c('a',{attrs:{\"href\":\"http://groups.csail.mit.edu/tds/papers/Lynch/jacm88.pdf\"}},[_vm._v(\"20\")]),_vm._v(\" DLS: \"),_c('a',{attrs:{\"href\":\"http://groups.csail.mit.edu/tds/papers/Lynch/jacm88.pdf\"}},[_vm._v(\"http://groups.csail.mit.edu/tds/papers/Lynch/jacm88.pdf\")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://en.bitcoin.it/wiki/Thin_Client_Security\"}},[_vm._v(\"21\")]),_vm._v(\" Thin Client Security: \"),_c('a',{attrs:{\"href\":\"https://en.bitcoin.it/wiki/Thin_Client_Security\"}},[_vm._v(\"https://en.bitcoin.it/wiki/Thin_Client_Security\")])]),_c('li',[_c('a',{attrs:{\"href\":\"http://vitalik.ca/files/mauve_paper.html\"}},[_vm._v(\"22\")]),_vm._v(\" Ethereum 2.0 Mauve Paper: \"),_c('a',{attrs:{\"href\":\"http://vitalik.ca/files/mauve_paper.html\"}},[_vm._v(\"http://vitalik.ca/files/mauve_paper.html\")])])]),_c('h4',{attrs:{\"id\":\"links-nao-classificados\"}},[_vm._v(\"Links não classificados\")]),_c('ul',[_c('li',[_c('a',{attrs:{\"href\":\"https://www.docdroid.net/ec7xGzs/314477721-ethereum-platform-review-opportunities-and-challenges-for-private-and-consortium-blockchains.pdf.html\"}},[_vm._v(\"https://www.docdroid.net/ec7xGzs/314477721-ethereum-platform-review-opportunities-and-challenges-for-private-and-consortium-blockchains.pdf.html\")])])])])}]\n\nexport { render, staticRenderFns }"]}