{"remainingRequest":"C:\\xampp\\htdocs\\cosmos\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\cosmos\\src\\views\\EventsAll.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\xampp\\htdocs\\cosmos\\src\\views\\EventsAll.vue","mtime":1644920968000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport moment from \"moment\"\nimport { orderBy } from \"lodash\"\nimport { mapGetters } from \"vuex\"\nimport CardsEvent from \"cards/CardsEvent\"\nimport TmBtn from \"common/TmBtn\"\nimport TmHeader from \"common/TmHeader\"\nimport TmSection from \"common/TmSection\"\nimport SectionBanner from \"sections/SectionBanner\"\n\nexport default {\n  name: \"page-events-all\",\n  metaInfo: { title: \"All Events\" },\n  components: {\n    CardsEvent,\n    TmBtn,\n    TmHeader,\n    TmSection,\n    SectionBanner\n  },\n  computed: {\n    ...mapGetters([\"events\", \"urls\", \"cwu\", \"meetup\"]),\n    datedEvents() {\n      return [...this.events].filter(e => e.dateStart !== undefined)\n    },\n    cwuEvents() {\n      let cwuEvents = this.cwu.cwu.map(e => {\n        return {\n          type: \"Live Session\",\n          id: e.autonumber,\n          featured: false,\n          dateStart: e.date,\n          dateEnd: e.date,\n          title: e.title,\n          href: `https://cosmos.network/series/code-with-us/${e.slug}`,\n          logo: [\n            {\n              type: \"image/jpeg\",\n              url: e.coverImg[0].url\n            }\n          ]\n        }\n      })\n      return cwuEvents\n    },\n    upcomingEvents() {\n      // fuzz search to current and future events within 1 day of today\n      let events = [...this.datedEvents, ...this.cwuEvents].filter(\n        e => moment(e.dateEnd).add(1, \"days\") >= moment()\n      )\n\n      events = [\n        ...events,\n        ...this.meetup.meetupEvents.map(e => {\n          // TODO: some created events don't have country and venue\n          // const country = e.event.venue.country\n          // const venue = e.event.venue.name\n          return {\n            type: \"Meetup\",\n            date: e.event.local_date,\n            id: e.event.id,\n            featured: true,\n            dateStart: e.event.time,\n            dateEnd: e.event.time,\n            // location: `${venue}${country ? \", \" + country : \"\"}`,\n            location: \"Online event\",\n            title: e.event.name,\n            href: e.event.link,\n            logo: [\n              {\n                type: \"image/jpeg\",\n                url: e.event_image && e.event_image.photo_link\n              }\n            ]\n          }\n        })\n      ]\n      events = orderBy(\n        events,\n        [\n          function(e) {\n            return moment(e.dateStart)\n          }\n        ],\n        \"asc\"\n      )\n      return events\n    },\n    pastEvents() {\n      let events = this.datedEvents.filter(\n        e => moment(e.dateEnd).add(1, \"days\") < moment()\n      )\n      return orderBy(\n        events,\n        [\n          function(e) {\n            return moment(e.dateEnd)\n          }\n        ],\n        \"desc\"\n      )\n    }\n  }\n}\n",{"version":3,"sources":["EventsAll.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAqfile":"EventsAll.vue","sourceRoot":"src/views","sourcesContent":["<template lang=\"pug\">\n.page-events\n  tm-header\n    div(slot=\"title\") All Events\n    div(slot=\"subtitle\") Meet with the Cosmos team at one of our events.\n\n  tm-section(v-if=\"!upcomingEvents.length\")\n    div(slot=\"title\") Upcoming Events\n    div(slot=\"subtitle\") There are currently no upcoming events.\n  tm-section(v-else)\n    div(slot=\"title\") Upcoming Events\n    div(slot=\"subtitle\") These are community events that we are either hosting or attending.\n    cards-event(:events=\"upcomingEvents\")\n    section-banner.section-banner\n\n  tm-section(v-if=\"pastEvents.length > 0\")\n    div(slot=\"title\") Past Events\n    cards-event(:events=\"pastEvents\")\n</template>\n\n<script>\nimport moment from \"moment\"\nimport { orderBy } from \"lodash\"\nimport { mapGetters } from \"vuex\"\nimport CardsEvent from \"cards/CardsEvent\"\nimport TmBtn from \"common/TmBtn\"\nimport TmHeader from \"common/TmHeader\"\nimport TmSection from \"common/TmSection\"\nimport SectionBanner from \"sections/SectionBanner\"\n\nexport default {\n  name: \"page-events-all\",\n  metaInfo: { title: \"All Events\" },\n  components: {\n    CardsEvent,\n    TmBtn,\n    TmHeader,\n    TmSection,\n    SectionBanner\n  },\n  computed: {\n    ...mapGetters([\"events\", \"urls\", \"cwu\", \"meetup\"]),\n    datedEvents() {\n      return [...this.events].filter(e => e.dateStart !== undefined)\n    },\n    cwuEvents() {\n      let cwuEvents = this.cwu.cwu.map(e => {\n        return {\n          type: \"Live Session\",\n          id: e.autonumber,\n          featured: false,\n          dateStart: e.date,\n          dateEnd: e.date,\n          title: e.title,\n          href: `https://cosmos.network/series/code-with-us/${e.slug}`,\n          logo: [\n            {\n              type: \"image/jpeg\",\n              url: e.coverImg[0].url\n            }\n          ]\n        }\n      })\n      return cwuEvents\n    },\n    upcomingEvents() {\n      // fuzz search to current and future events within 1 day of today\n      let events = [...this.datedEvents, ...this.cwuEvents].filter(\n        e => moment(e.dateEnd).add(1, \"days\") >= moment()\n      )\n\n      events = [\n        ...events,\n        ...this.meetup.meetupEvents.map(e => {\n          // TODO: some created events don't have country and venue\n          // const country = e.event.venue.country\n          // const venue = e.event.venue.name\n          return {\n            type: \"Meetup\",\n            date: e.event.local_date,\n            id: e.event.id,\n            featured: true,\n            dateStart: e.event.time,\n            dateEnd: e.event.time,\n            // location: `${venue}${country ? \", \" + country : \"\"}`,\n            location: \"Online event\",\n            title: e.event.name,\n            href: e.event.link,\n            logo: [\n              {\n                type: \"image/jpeg\",\n                url: e.event_image && e.event_image.photo_link\n              }\n            ]\n          }\n        })\n      ]\n      events = orderBy(\n        events,\n        [\n          function(e) {\n            return moment(e.dateStart)\n          }\n        ],\n        \"asc\"\n      )\n      return events\n    },\n    pastEvents() {\n      let events = this.datedEvents.filter(\n        e => moment(e.dateEnd).add(1, \"days\") < moment()\n      )\n      return orderBy(\n        events,\n        [\n          function(e) {\n            return moment(e.dateEnd)\n          }\n        ],\n        \"desc\"\n      )\n    }\n  }\n}\n</script>\n\n<style lang=\"stylus\" scoped>\n.section-banner\n  margin-top 3rem\n  margin-bottom 3rem\n</style>\n"]}]}