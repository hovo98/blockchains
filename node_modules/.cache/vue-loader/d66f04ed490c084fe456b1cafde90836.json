{"remainingRequest":"C:\\xampp\\htdocs\\cosmos\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\cosmos\\src\\components\\cards\\CardsEvent.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\xampp\\htdocs\\cosmos\\src\\components\\cards\\CardsEvent.vue","mtime":1644920968000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport hf from \"scripts/helpers\"\nimport TmCardHz from \"cards/TmCardHz\"\nexport default {\n  name: \"cards-events\",\n  components: {\n    TmCardHz\n  },\n  data: () => ({\n    hf: hf\n  }),\n  methods: {\n    subtitle(event) {\n      if (event.subtitle) {\n        return event.subtitle\n      }\n      if (event.dateStart && event.dateEnd) {\n        let value = `${this.hf.dates(event.dateStart, event.dateEnd)}`\n        if (event.type) {\n          return `${value} · ${event.type}`\n        }\n        // if (event.location) {\n        //   return (value += \" · \" + event.location)\n        // }\n        return value\n      }\n      return `TBD · ${event.location}`\n    }\n  },\n  props: [\"events\"]\n}\n",{"version":3,"sources":["CardsEvent.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CardsEvent.vue","sourceRoot":"src/components/cards","sourcesContent":["<template lang=\"pug\">\n.tm-cards-hz\n  tm-card-hz(\n    v-for=\"i in events\"\n    :flush=\"hf.isFlush(hf.optionalImg(i.logo).type)\"\n    :ended=\"hf.pastDate(i.dateEnd)\"\n    :img-src=\"hf.optionalImg(i.logo).src\"\n    :key=\"i.id\"\n    :subtitle=\"subtitle(i)\"\n    :title=\"i.title\"\n    :type=\"i.type\"\n    :href=\"i.href\"\n    :to=\"{ name: 'event', params: { event: i.slug }}\")\n</template>\n\n<script>\nimport hf from \"scripts/helpers\"\nimport TmCardHz from \"cards/TmCardHz\"\nexport default {\n  name: \"cards-events\",\n  components: {\n    TmCardHz\n  },\n  data: () => ({\n    hf: hf\n  }),\n  methods: {\n    subtitle(event) {\n      if (event.subtitle) {\n        return event.subtitle\n      }\n      if (event.dateStart && event.dateEnd) {\n        let value = `${this.hf.dates(event.dateStart, event.dateEnd)}`\n        if (event.type) {\n          return `${value} · ${event.type}`\n        }\n        // if (event.location) {\n        //   return (value += \" · \" + event.location)\n        // }\n        return value\n      }\n      return `TBD · ${event.location}`\n    }\n  },\n  props: [\"events\"]\n}\n</script>\n"]}]}