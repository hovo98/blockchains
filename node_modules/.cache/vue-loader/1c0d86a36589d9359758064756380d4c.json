{"remainingRequest":"C:\\xampp\\htdocs\\cosmos\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\cosmos\\src\\views\\Api.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\xampp\\htdocs\\cosmos\\src\\views\\Api.vue","mtime":1644920968000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport SwaggerUI from \"swagger-ui\"\nimport \"swagger-ui/dist/swagger-ui.css\"\nimport versionList from \"@/swagger.json\"\nimport { find } from \"lodash\"\nimport axios from \"axios\"\nimport YAML from \"yamljs\"\n\nexport default {\n  props: [\"version\"],\n  mounted() {\n    this.swaggerInit(this.version)\n  },\n  watch: {\n    version: {\n      handler: function(newVersion) {\n        this.swaggerInit(newVersion)\n      }\n    }\n  },\n  data: function() {\n    return {\n      versionList,\n      spec: null,\n      host: null\n    }\n  },\n  methods: {\n    async swaggerInit(v, host) {\n      const version = find(versionList, [\"key\", v])\n      const yaml = (await axios.get(version.url)).data\n      const spec = YAML.parse(yaml)\n      spec.schemes = [\"https\", \"http\"]\n      const dom_id = \"#swagger\"\n      if (host) {\n        spec.host = host\n      } else spec.host = \"api.cosmos.network\"\n      this.host = spec.host\n      if (version) {\n        this.spec = SwaggerUI({ dom_id, spec })\n      } else {\n        this.versionChange(\"\")\n      }\n    },\n    versionChange(ver) {\n      this.$router.push(`/rpc/${ver}`)\n    },\n    hostChange() {\n      this.swaggerInit(this.version, this.host)\n    }\n  }\n}\n",{"version":3,"sources":["Api.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkFA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Api.vue","sourceRoot":"src/views","sourcesContent":["<template lang=\"pug\">\n  div\n    .container\n      .dropdown.wrapper\n        div Version:\n        select(:value=\"version\" @input=\"versionChange($event.target.value)\")\n          option(v-for=\"v in versionList\" :value=\"v.key\") {{v.label}}\n      .wrapper\n        .input-url\n          span.input-url__label Base URL:\n          input.input-url__input(v-model=\"host\" placeholder=\"example.org\" @keypress.enter=\"hostChange\")\n          button.input-url__button(@click=\"hostChange\") Change\n      #swagger\n</template>\n\n<style lang=\"stylus\" scoped>\n.container\n  margin-top 10rem\n\n.wrapper\n  margin-left auto\n  margin-right auto\n  max-width 1460px\n  padding 0 20px\n  display flex\n  justify-content flex-end\n  font-size 1rem\n  margin-bottom 0.5rem\n\n.dropdown\n  box-siging border-box\n  align-items center\n  font-size 1rem\n\nselect\n  font-family inherit\n  font-size inherit\n  margin-left 0.5rem\n  border 1px solid rgba(140, 145, 177, 0.32)\n  background rgba(0, 0, 0, 0)\n  line-height 1.75\n\ninput\n  font-size inherit\n  border 1px solid rgba(140, 145, 177, 0.32)\n  margin-top 0.25rem\n\n.input-url\n  align-items center\n  gap 0.5rem\n  grid-auto-flow column\n\n.input-url__label\n  margin-right 0.5rem\n\n.input-url__input\n  line-height 1.75\n  width 250px\n  padding 0 0.25rem\n  margin 0.5rem 0.5rem 0.5rem 0\n\n.input-url__button\n  font-size inherit\n  border 1px solid rgba(140, 145, 177, 0.32)\n  background none\n  cursor pointer\n  padding 0 0.5rem\n  border-radius 4px\n  line-height 1.75\n  transition all 0.25s\n\n  &:hover\n    border 1px solid rgba(140, 145, 177, 0.5)\n\n  &:active\n    opacity 0.5\n\n#swagger\n  min-height 100vh\n</style>\n\n<script>\nimport SwaggerUI from \"swagger-ui\"\nimport \"swagger-ui/dist/swagger-ui.css\"\nimport versionList from \"@/swagger.json\"\nimport { find } from \"lodash\"\nimport axios from \"axios\"\nimport YAML from \"yamljs\"\n\nexport default {\n  props: [\"version\"],\n  mounted() {\n    this.swaggerInit(this.version)\n  },\n  watch: {\n    version: {\n      handler: function(newVersion) {\n        this.swaggerInit(newVersion)\n      }\n    }\n  },\n  data: function() {\n    return {\n      versionList,\n      spec: null,\n      host: null\n    }\n  },\n  methods: {\n    async swaggerInit(v, host) {\n      const version = find(versionList, [\"key\", v])\n      const yaml = (await axios.get(version.url)).data\n      const spec = YAML.parse(yaml)\n      spec.schemes = [\"https\", \"http\"]\n      const dom_id = \"#swagger\"\n      if (host) {\n        spec.host = host\n      } else spec.host = \"api.cosmos.network\"\n      this.host = spec.host\n      if (version) {\n        this.spec = SwaggerUI({ dom_id, spec })\n      } else {\n        this.versionChange(\"\")\n      }\n    },\n    versionChange(ver) {\n      this.$router.push(`/rpc/${ver}`)\n    },\n    hostChange() {\n      this.swaggerInit(this.version, this.host)\n    }\n  }\n}\n</script>\n"]}]}