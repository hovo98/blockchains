{"remainingRequest":"C:\\xampp\\htdocs\\cosmos\\node_modules\\babel-loader\\lib\\index.js!C:\\xampp\\htdocs\\cosmos\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\xampp\\htdocs\\cosmos\\src\\store\\modules\\blog.js","dependencies":[{"path":"C:\\xampp\\htdocs\\cosmos\\src\\store\\modules\\blog.js","mtime":1644920968000},{"path":"C:\\xampp\\htdocs\\cosmos\\babel.config.js","mtime":1644920968000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/xampp/htdocs/cosmos/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n\n/* global RSSParser */\nimport \"rss-parser/dist/rss-parser.min.js\";\nvar state = {\n  posts: []\n};\nvar mutations = {\n  initializeBlog: function () {\n    var _initializeBlog = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(state) {\n      var parser, feed;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              parser = new RSSParser();\n              _context.next = 3;\n              return parser.parseURL(\"https://feed.blog.cosmos.network\");\n\n            case 3:\n              feed = _context.sent;\n              state.posts = feed.items;\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function initializeBlog(_x) {\n      return _initializeBlog.apply(this, arguments);\n    }\n\n    return initializeBlog;\n  }()\n};\nexport default {\n  state: state,\n  mutations: mutations\n};",{"version":3,"sources":["C:/xampp/htdocs/cosmos/src/store/modules/blog.js"],"names":["state","posts","mutations","initializeBlog","parser","RSSParser","parseURL","feed","items"],"mappings":";;;AAAA;AACA,OAAO,mCAAP;AAEA,IAAMA,KAAK,GAAG;AACZC,EAAAA,KAAK,EAAE;AADK,CAAd;AAIA,IAAMC,SAAS,GAAG;AACVC,EAAAA,cADU;AAAA,mGACKH,KADL;AAAA;AAAA;AAAA;AAAA;AAAA;AAERI,cAAAA,MAFQ,GAEC,IAAIC,SAAJ,EAFD;AAAA;AAAA,qBAGGD,MAAM,CAACE,QAAP,CAAgB,kCAAhB,CAHH;;AAAA;AAGVC,cAAAA,IAHU;AAIdP,cAAAA,KAAK,CAACC,KAAN,GAAcM,IAAI,CAACC,KAAnB;;AAJc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,CAAlB;AAQA,eAAe;AAAER,EAAAA,KAAK,EAALA,KAAF;AAASE,EAAAA,SAAS,EAATA;AAAT,CAAf","sourcesContent":["/* global RSSParser */\nimport \"rss-parser/dist/rss-parser.min.js\"\n\nconst state = {\n  posts: []\n}\n\nconst mutations = {\n  async initializeBlog(state) {\n    const parser = new RSSParser()\n    let feed = await parser.parseURL(\"https://feed.blog.cosmos.network\")\n    state.posts = feed.items\n  }\n}\n\nexport default { state, mutations }\n"]}]}