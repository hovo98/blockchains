{"remainingRequest":"C:\\xampp\\htdocs\\cosmos\\node_modules\\thread-loader\\dist\\cjs.js!C:\\xampp\\htdocs\\cosmos\\node_modules\\babel-loader\\lib\\index.js!C:\\xampp\\htdocs\\cosmos\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\xampp\\htdocs\\cosmos\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\cosmos\\src\\components\\common\\TmCountDown.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\xampp\\htdocs\\cosmos\\src\\components\\common\\TmCountDown.vue","mtime":1644920968000},{"path":"C:\\xampp\\htdocs\\cosmos\\babel.config.js","mtime":1644920968000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.math.trunc\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"tm-count-down\",\n  computed: {\n    countingDown: function countingDown() {\n      return this.days > 0 || this.hours > 0 || this.minutes > 0 || this.seconds > 0;\n    },\n    endDate: function endDate() {\n      return Math.trunc(Date.parse(this.end) / 1000);\n    },\n    seconds: function seconds() {\n      var value = (this.endDate - this.now) % 60;\n      if (value < 10) return \"0\" + value;\n      return value;\n    },\n    minutes: function minutes() {\n      var value = Math.trunc((this.endDate - this.now) / 60) % 60;\n      if (value < 10) return \"0\" + value;\n      return value;\n    },\n    hours: function hours() {\n      var value = Math.trunc((this.endDate - this.now) / 60 / 60) % 24;\n      if (value < 10) return \"0\" + value;\n      return value;\n    },\n    days: function days() {\n      var value = Math.trunc((this.endDate - this.now) / 60 / 60 / 24);\n      if (value < 10) return \"0\" + value;\n      return value;\n    }\n  },\n  props: [\"now\", \"end\"]\n};",{"version":3,"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,eAAe;AACbA,MAAI,EAAE,eADO;AAEbC,UAAQ,EAAE;AACRC,gBADQ,0BACO;AACb,aACE,KAAKC,IAAL,GAAY,CAAZ,IAAiB,KAAKC,KAAL,GAAa,CAA9B,IAAmC,KAAKC,OAAL,GAAe,CAAlD,IAAuD,KAAKC,OAAL,GAAe,CADxE;AAGD,KALO;AAMRC,WANQ,qBAME;AACR,aAAOC,IAAI,CAACC,KAAL,CAAWC,IAAI,CAACC,KAAL,CAAW,KAAKC,GAAhB,IAAuB,IAAlC,CAAP;AACD,KARO;AASRN,WATQ,qBASE;AACR,UAAIO,KAAK,GAAG,CAAC,KAAKN,OAAL,GAAe,KAAKO,GAArB,IAA4B,EAAxC;AACA,UAAID,KAAK,GAAG,EAAZ,EAAgB,OAAO,MAAMA,KAAb;AAChB,aAAOA,KAAP;AACD,KAbO;AAcRR,WAdQ,qBAcE;AACR,UAAIQ,KAAK,GAAGL,IAAI,CAACC,KAAL,CAAW,CAAC,KAAKF,OAAL,GAAe,KAAKO,GAArB,IAA4B,EAAvC,IAA6C,EAAzD;AACA,UAAID,KAAK,GAAG,EAAZ,EAAgB,OAAO,MAAMA,KAAb;AAChB,aAAOA,KAAP;AACD,KAlBO;AAmBRT,SAnBQ,mBAmBA;AACN,UAAIS,KAAK,GAAGL,IAAI,CAACC,KAAL,CAAW,CAAC,KAAKF,OAAL,GAAe,KAAKO,GAArB,IAA4B,EAA5B,GAAiC,EAA5C,IAAkD,EAA9D;AACA,UAAID,KAAK,GAAG,EAAZ,EAAgB,OAAO,MAAMA,KAAb;AAChB,aAAOA,KAAP;AACD,KAvBO;AAwBRV,QAxBQ,kBAwBD;AACL,UAAIU,KAAK,GAAGL,IAAI,CAACC,KAAL,CAAW,CAAC,KAAKF,OAAL,GAAe,KAAKO,GAArB,IAA4B,EAA5B,GAAiC,EAAjC,GAAsC,EAAjD,CAAZ;AACA,UAAID,KAAK,GAAG,EAAZ,EAAgB,OAAO,MAAMA,KAAb;AAChB,aAAOA,KAAP;AACD;AA5BO,GAFG;AAgCbE,OAAK,EAAE,CAAC,KAAD,EAAQ,KAAR;AAhCM,CAAf","names":["name","computed","countingDown","days","hours","minutes","seconds","endDate","Math","trunc","Date","parse","end","value","now","props"],"sourceRoot":"src/components/common","sources":["C:/xampp/htdocs/cosmos/src/components/common/TmCountDown.vue"],"sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: \"tm-count-down\",\n  computed: {\n    countingDown() {\n      return (\n        this.days > 0 || this.hours > 0 || this.minutes > 0 || this.seconds > 0\n      )\n    },\n    endDate() {\n      return Math.trunc(Date.parse(this.end) / 1000)\n    },\n    seconds() {\n      let value = (this.endDate - this.now) % 60\n      if (value < 10) return \"0\" + value\n      return value\n    },\n    minutes() {\n      let value = Math.trunc((this.endDate - this.now) / 60) % 60\n      if (value < 10) return \"0\" + value\n      return value\n    },\n    hours() {\n      let value = Math.trunc((this.endDate - this.now) / 60 / 60) % 24\n      if (value < 10) return \"0\" + value\n      return value\n    },\n    days() {\n      let value = Math.trunc((this.endDate - this.now) / 60 / 60 / 24)\n      if (value < 10) return \"0\" + value\n      return value\n    }\n  },\n  props: [\"now\", \"end\"]\n}\n"]}]}