{"remainingRequest":"C:\\xampp\\htdocs\\cosmos\\node_modules\\thread-loader\\dist\\cjs.js!C:\\xampp\\htdocs\\cosmos\\node_modules\\babel-loader\\lib\\index.js!C:\\xampp\\htdocs\\cosmos\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\xampp\\htdocs\\cosmos\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\cosmos\\node_modules\\@cosmos-ui\\vue\\src\\GozMilestones\\GozMilestones.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\@cosmos-ui\\vue\\src\\GozMilestones\\GozMilestones.vue","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\cosmos\\babel.config.js","mtime":1644920968000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/xampp/htdocs/cosmos/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport GozRow from \"../GozRow/GozRow\";\nimport IconIbc from \"../Icons/IconIbc\";\nimport IconSdk from \"../Icons/IconSdk\";\nimport axios from \"axios\";\nexport default {\n  components: {\n    GozRow: GozRow,\n    IconIbc: IconIbc,\n    IconSdk: IconSdk\n  },\n  data: function data() {\n    return {\n      milestone: {\n        logo: \"sdk\",\n        h1: \"Cosmos SDK - GoZ Milestone\",\n        h2: \"cosmos/sdk\"\n      },\n      milestoneList: [],\n      sources: [[\"cosmos/cosmos-sdk\", 24, \"sdk\", \"Cosmos SDK – GoZ Milestone\"], [\"cosmos/cosmos-sdk\", 21, \"sdk\", \"Cosmos SDK – IBC 1.0 Milestone\"], [\"cosmos/relayer\", 2, \"ibc\", \"Relayer – GoZ Milestone\"], [\"cosmos/ics\", 5, \"ibc\", \"IBC 1.0 – Spec Milestone\"]]\n    };\n  },\n  mounted: function () {\n    var _mounted = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      var _this = this;\n\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              this.sources.forEach( /*#__PURE__*/function () {\n                var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(source) {\n                  var milestone;\n                  return regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          _context.next = 2;\n                          return _this.getMilestone.apply(null, source);\n\n                        case 2:\n                          milestone = _context.sent;\n\n                          _this.milestoneList.push(milestone);\n\n                        case 4:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                return function (_x) {\n                  return _ref.apply(this, arguments);\n                };\n              }());\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }(),\n  methods: {\n    getMilestone: function () {\n      var _getMilestone = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(repo, id, logo, defaultTitle, defaultProgress) {\n        var url, api, m, title, open, closed, progress;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                url = \"https://github.com/\".concat(repo, \"/milestone/\").concat(id);\n                _context3.prev = 1;\n                api = \"https://api.github.com/repos/\".concat(repo, \"/milestones/\").concat(id);\n                _context3.next = 5;\n                return axios.get(api);\n\n              case 5:\n                m = _context3.sent.data;\n                title = m.title;\n                open = parseInt(m.open_issues);\n                closed = parseInt(m.closed_issues);\n                progress = Math.floor(100 * closed / (open + closed)).toFixed(0);\n                return _context3.abrupt(\"return\", {\n                  title: title,\n                  repo: repo,\n                  progress: progress,\n                  logo: logo,\n                  url: url\n                });\n\n              case 13:\n                _context3.prev = 13;\n                _context3.t0 = _context3[\"catch\"](1);\n                return _context3.abrupt(\"return\", {\n                  repo: repo,\n                  logo: logo,\n                  url: url,\n                  title: defaultTitle,\n                  progress: null\n                });\n\n              case 16:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[1, 13]]);\n      }));\n\n      function getMilestone(_x2, _x3, _x4, _x5, _x6) {\n        return _getMilestone.apply(this, arguments);\n      }\n\n      return getMilestone;\n    }()\n  }\n};",{"version":3,"mappings":"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","names":["GozRow","IconIbc","IconSdk","axios","components","data","milestone","logo","h1","h2","milestoneList","sources","mounted","forEach","source","getMilestone","apply","push","methods","repo","id","defaultTitle","defaultProgress","url","api","get","m","title","open","parseInt","open_issues","closed","closed_issues","progress","Math","floor","toFixed"],"sourceRoot":"node_modules/@cosmos-ui/vue/src/GozMilestones","sources":["C:/xampp/htdocs/cosmos/node_modules/@cosmos-ui/vue/src/GozMilestones/GozMilestones.vue"],"sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport GozRow from \"../GozRow/GozRow\"\nimport IconIbc from \"../Icons/IconIbc\"\nimport IconSdk from \"../Icons/IconSdk\"\nimport axios from \"axios\"\n\nexport default {\n  components: {\n    GozRow,\n    IconIbc,\n    IconSdk\n  },\n  data: function() {\n    return {\n      milestone: {\n        logo: \"sdk\",\n        h1: \"Cosmos SDK - GoZ Milestone\",\n        h2: \"cosmos/sdk\"\n      },\n      milestoneList: [],\n      sources: [\n        [\"cosmos/cosmos-sdk\", 24, \"sdk\", \"Cosmos SDK – GoZ Milestone\"],\n        [\"cosmos/cosmos-sdk\", 21, \"sdk\", \"Cosmos SDK – IBC 1.0 Milestone\"],\n        [\"cosmos/relayer\", 2, \"ibc\", \"Relayer – GoZ Milestone\"],\n        [\"cosmos/ics\", 5, \"ibc\", \"IBC 1.0 – Spec Milestone\"],\n      ],\n    }\n  },\n  async mounted() {\n    this.sources.forEach(async source => {\n      const milestone = await this.getMilestone.apply(null, source)\n      this.milestoneList.push(milestone)\n    })\n  },\n  methods: {\n    async getMilestone(repo, id, logo, defaultTitle, defaultProgress) {\n      const url = `https://github.com/${repo}/milestone/${id}`\n      try {\n        const\n          api = `https://api.github.com/repos/${repo}/milestones/${id}`,\n          m = (await axios.get(api)).data,\n          title = m.title,\n          open = parseInt(m.open_issues),\n          closed = parseInt(m.closed_issues),\n          progress = Math.floor((100 * closed) / (open + closed)).toFixed(0)\n        return { title, repo, progress, logo, url }\n      } catch {\n        return {\n          repo,\n          logo,\n          url,\n          title: defaultTitle,\n          progress: null,\n        }\n      }\n    }\n  }\n}\n"]}]}