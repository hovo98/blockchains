{"remainingRequest":"C:\\xampp\\htdocs\\cosmos\\node_modules\\thread-loader\\dist\\cjs.js!C:\\xampp\\htdocs\\cosmos\\node_modules\\babel-loader\\lib\\index.js!C:\\xampp\\htdocs\\cosmos\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\xampp\\htdocs\\cosmos\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\cosmos\\src\\views\\Ecosystem.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\xampp\\htdocs\\cosmos\\src\\views\\Ecosystem.vue","mtime":1644920968000},{"path":"C:\\xampp\\htdocs\\cosmos\\babel.config.js","mtime":1644920968000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.split\";\nimport _defineProperty from \"C:/xampp/htdocs/cosmos/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport algoliasearch from \"algoliasearch\";\nimport TmHeader from \"common/TmHeader\";\nimport TmSection from \"common/TmSection\";\nimport TmBtn from \"common/TmBtn\";\nimport SectionMessari from \"sections/SectionMessari\";\nimport IconDot from \"common/IconDot\";\nvar searchApiKey = process.env.VUE_APP_ALGOLIA_SEARCH_API_KEY;\nvar searchClient = algoliasearch(\"ME7376U3XW\", searchApiKey);\nexport default {\n  name: \"page-ecosystem\",\n  metaInfo: {\n    title: \"Ecosystem\"\n  },\n  components: {\n    TmHeader: TmHeader,\n    TmSection: TmSection,\n    TmBtn: TmBtn,\n    SectionMessari: SectionMessari,\n    IconDot: IconDot\n  },\n  data: function data() {\n    return {\n      searchClient: searchClient,\n      dotColor: {\n        mainnet: \"#4ACF4A\",\n        testnet: \"#BA3FD9\",\n        development: \"#FF9500\",\n        proofofconcept: \"#3B427D\",\n        beta: \"#66A1FF\",\n        alpha: \"#BCE7FF\",\n        live: \"#4ACF4A\"\n      }\n    };\n  },\n  methods: {\n    moveToTheEnd: function moveToTheEnd(arr, word) {\n      arr.map(function (elem, index) {\n        if (elem.label.toLowerCase() === word.toLowerCase()) {\n          arr.splice(index, 1);\n          arr.push(elem);\n        }\n      });\n      return arr;\n    },\n    transformItems: function transformItems(items) {\n      this.moveToTheEnd(items, \"Uncategorized\");\n      this.moveToTheEnd(items, \"Unknown\");\n      return items.map(function (item) {\n        return _objectSpread({}, item);\n      });\n    },\n    cleanText: function cleanText(item) {\n      return item.split(\" \").join(\"\").toLowerCase();\n    }\n  }\n};",{"version":3,"mappingsaAAP,MAA0B,eAA1B;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,OAAP,MAAoB,gBAApB;AAEA,IAAMC,YAAY,GAAGC,OAAO,CAACC,GAAR,CAAYC,8BAAjC;AACA,IAAMC,YAAY,GAAGV,aAAa,CAAC,YAAD,EAAeM,YAAf,CAAlC;AAEA,eAAe;AACbK,MAAI,EAAE,gBADO;AAEbC,UAAQ,EAAE;AACRC,SAAK,EAAE;AADC,GAFG;AAKbC,YAAU,EAAE;AACVb,YAAQ,EAARA,QADU;AAEVC,aAAS,EAATA,SAFU;AAGVC,SAAK,EAALA,KAHU;AAIVC,kBAAc,EAAdA,cAJU;AAKVC,WAAO,EAAPA;AALU,GALC;AAYbU,MAZa,kBAYN;AACL,WAAO;AACLL,kBAAY,EAAEA,YADT;AAELM,cAAQ,EAAE;AACRC,eAAO,EAAE,SADD;AAERC,eAAO,EAAE,SAFD;AAGRC,mBAAW,EAAE,SAHL;AAIRC,sBAAc,EAAE,SAJR;AAKRC,YAAI,EAAE,SALE;AAMRC,aAAK,EAAE,SANC;AAORC,YAAI,EAAE;AAPE;AAFL,KAAP;AAYD,GAzBY;AA0BbC,SAAO,EAAE;AACPC,gBADO,wBACMC,GADN,EACWC,IADX,EACiB;AACtBD,SAAG,CAACE,GAAJ,CAAQ,UAACC,IAAD,EAAOC,KAAP,EAAiB;AACvB,YAAID,IAAI,CAACE,KAAL,CAAWC,WAAX,OAA6BL,IAAI,CAACK,WAAL,EAAjC,EAAqD;AACnDN,aAAG,CAACO,MAAJ,CAAWH,KAAX,EAAkB,CAAlB;AACAJ,aAAG,CAACQ,IAAJ,CAASL,IAAT;AACD;AACF,OALD;AAMA,aAAOH,GAAP;AACD,KATM;AAUPS,kBAVO,0BAUQC,KAVR,EAUe;AACpB,WAAKX,YAAL,CAAkBW,KAAlB,EAAyB,eAAzB;AACA,WAAKX,YAAL,CAAkBW,KAAlB,EAAyB,SAAzB;AAEA,aAAOA,KAAK,CAACR,GAAN,CAAU,cAAI;AAAA,iCAChBS,IADgB;AAAA,OAAd,CAAP;AAGD,KAjBM;AAkBPC,aAlBO,qBAkBGD,IAlBH,EAkBS;AACd,aAAOA,IAAI,CACRE,KADI,CACE,GADF,EAEJC,IAFI,CAEC,EAFD,EAGJR,WAHI,EAAP;AAID;AAvBM;AA1BI,CAAf","names":["algoliasearch","TmHeader","TmSection","TmBtn","SectionMessari","IconDot","searchApiKey","process","env","VUE_APP_ALGOLIA_SEARCH_API_KEY","searchClient","name","metaInfo","title","components","data","dotColor","mainnet","testnet","development","proofofconcept","beta","alpha","live","methods","moveToTheEnd","arr","word","map","elem","index","label","toLowerCase","splice","push","transformItems","items","item","cleanText","split","join"],"sourceRoot":"src/views","sources":["C:/xampp/htdocs/cosmos/src/views/Ecosystem.vue"],"sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport algoliasearch from \"algoliasearch\"\nimport TmHeader from \"common/TmHeader\"\nimport TmSection from \"common/TmSection\"\nimport TmBtn from \"common/TmBtn\"\nimport SectionMessari from \"sections/SectionMessari\"\nimport IconDot from \"common/IconDot\"\n\nconst searchApiKey = process.env.VUE_APP_ALGOLIA_SEARCH_API_KEY\nconst searchClient = algoliasearch(\"ME7376U3XW\", searchApiKey)\n\nexport default {\n  name: \"page-ecosystem\",\n  metaInfo: {\n    title: \"Ecosystem\"\n  },\n  components: {\n    TmHeader,\n    TmSection,\n    TmBtn,\n    SectionMessari,\n    IconDot\n  },\n  data() {\n    return {\n      searchClient: searchClient,\n      dotColor: {\n        mainnet: \"#4ACF4A\",\n        testnet: \"#BA3FD9\",\n        development: \"#FF9500\",\n        proofofconcept: \"#3B427D\",\n        beta: \"#66A1FF\",\n        alpha: \"#BCE7FF\",\n        live: \"#4ACF4A\"\n      }\n    }\n  },\n  methods: {\n    moveToTheEnd(arr, word) {\n      arr.map((elem, index) => {\n        if (elem.label.toLowerCase() === word.toLowerCase()) {\n          arr.splice(index, 1)\n          arr.push(elem)\n        }\n      })\n      return arr\n    },\n    transformItems(items) {\n      this.moveToTheEnd(items, \"Uncategorized\")\n      this.moveToTheEnd(items, \"Unknown\")\n\n      return items.map(item => ({\n        ...item\n      }))\n    },\n    cleanText(item) {\n      return item\n        .split(\" \")\n        .join(\"\")\n        .toLowerCase()\n    }\n  }\n}\n"]}]}