{"remainingRequest":"C:\\xampp\\htdocs\\cosmos\\node_modules\\babel-loader\\lib\\index.js!C:\\xampp\\htdocs\\cosmos\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\xampp\\htdocs\\cosmos\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\cosmos\\src\\views\\Glossary.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\xampp\\htdocs\\cosmos\\src\\views\\Glossary.vue","mtime":1644920968000},{"path":"C:\\xampp\\htdocs\\cosmos\\babel.config.js","mtime":1644920968000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\n//\n//\n//\n//\n//\n//\n//\n//\nimport { map } from \"lodash\";\nimport TmBtn from \"common/TmBtn\";\nimport TmDefinition from \"common/TmDefinition\";\nimport TmHeader from \"common/TmHeader\";\nimport TmSection from \"common/TmSection\";\nimport source from \"@cosmos-ui/vue/src/Tooltip/dict.json\";\nimport MarkdownIt from \"markdown-it\";\nexport default {\n  name: \"page-about\",\n  metaInfo: {\n    title: \"About\"\n  },\n  components: {\n    TmBtn: TmBtn,\n    TmDefinition: TmDefinition,\n    TmHeader: TmHeader,\n    TmSection: TmSection\n  },\n  data: function data() {\n    return {\n      dict: map(source, function (item) {\n        var html = new MarkdownIt().render(item);\n        var doc = new DOMParser().parseFromString(html, \"text/html\");\n        return {\n          title: doc.querySelector(\"h1\").innerText,\n          description: item.split(\"\\n\").filter(function (e) {\n            return !/^#/.test(e);\n          }).join(\"\\n\"),\n          url: \"url\"\n        };\n      })\n    };\n  }\n};",{"version":3,"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,GAAT,QAAoB,QAApB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AAEA,eAAe;AACbC,MAAI,EAAE,YADO;AAEbC,UAAQ,EAAE;AAAEC,SAAK,EAAE;AAAT,GAFG;AAGbC,YAAU,EAAE;AACVT,SAAK,EAALA,KADU;AAEVC,gBAAY,EAAZA,YAFU;AAGVC,YAAQ,EAARA,QAHU;AAIVC,aAAS,EAATA;AAJU,GAHC;AASbO,MAAI,EAAE,gBAAW;AACf,WAAO;AACLC,UAAI,EAAEZ,GAAG,CAACK,MAAD,EAAS,cAAI,EAAI;AACxB,YAAMQ,IAAI,GAAG,IAAIP,UAAJ,GAAiBQ,MAAjB,CAAwBC,IAAxB,CAAb;AACA,YAAMC,GAAG,GAAG,IAAIC,SAAJ,GAAgBC,eAAhB,CAAgCL,IAAhC,EAAsC,WAAtC,CAAZ;AACA,eAAO;AACLJ,eAAK,EAAEO,GAAG,CAACG,aAAJ,CAAkB,IAAlB,EAAwBC,SAD1B;AAELC,qBAAW,EAAEN,IAAI,CACdO,KADU,CACJ,IADI,EAEVC,MAFU,CAEH,WAAC;AAAA,mBAAI,CAAC,KAAKC,IAAL,CAAUC,CAAV,CAAL;AAAA,WAFE,EAGVC,IAHU,CAGL,IAHK,CAFR;AAMLC,aAAG,EAAE;AANA,SAAP;AAQD,OAXQ;AADJ,KAAP;AAcD;AAxBY,CAAf","names":["map","TmBtn","TmDefinition","TmHeader","TmSection","source","MarkdownIt","name","metaInfo","title","components","data","dict","html","render","item","doc","DOMParser","parseFromString","querySelector","innerText","description","split","filter","test","e","join","url"],"sourceRoot":"src/views","sources":["C:/xampp/htdocs/cosmos/src/views/Glossary.vue"],"sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n\nimport { map } from \"lodash\"\nimport TmBtn from \"common/TmBtn\"\nimport TmDefinition from \"common/TmDefinition\"\nimport TmHeader from \"common/TmHeader\"\nimport TmSection from \"common/TmSection\"\nimport source from \"@cosmos-ui/vue/src/Tooltip/dict.json\"\nimport MarkdownIt from \"markdown-it\"\n\nexport default {\n  name: \"page-about\",\n  metaInfo: { title: \"About\" },\n  components: {\n    TmBtn,\n    TmDefinition,\n    TmHeader,\n    TmSection\n  },\n  data: function() {\n    return {\n      dict: map(source, item => {\n        const html = new MarkdownIt().render(item)\n        const doc = new DOMParser().parseFromString(html, \"text/html\")\n        return {\n          title: doc.querySelector(\"h1\").innerText,\n          description: item\n            .split(\"\\n\")\n            .filter(e => !/^#/.test(e))\n            .join(\"\\n\"),\n          url: \"url\"\n        }\n      })\n    }\n  }\n}\n"]}]}