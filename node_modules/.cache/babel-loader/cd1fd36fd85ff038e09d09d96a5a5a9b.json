{"remainingRequest":"C:\\xampp\\htdocs\\cosmos\\node_modules\\thread-loader\\dist\\cjs.js!C:\\xampp\\htdocs\\cosmos\\node_modules\\babel-loader\\lib\\index.js!C:\\xampp\\htdocs\\cosmos\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\xampp\\htdocs\\cosmos\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\cosmos\\src\\views\\Workshop.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\xampp\\htdocs\\cosmos\\src\\views\\Workshop.vue","mtime":1644920968000},{"path":"C:\\xampp\\htdocs\\cosmos\\babel.config.js","mtime":1644920968000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.find\";\nimport _defineProperty from \"C:/xampp/htdocs/cosmos/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport moment from \"moment-timezone\";\nimport { mapGetters } from \"vuex\";\nimport MarkdownIt from \"markdown-it\";\nimport { Modal, SeriesSignup } from \"@cosmos-ui/vue\";\nimport TmBtn from \"common/TmBtn\";\nimport TmSection from \"common/TmSection\";\nimport TmContent from \"common/TmContent\";\nexport default {\n  name: \"page-event\",\n  metaInfo: {\n    title: \"Workshop Details\"\n  },\n  components: {\n    Modal: Modal,\n    SeriesSignup: SeriesSignup,\n    TmBtn: TmBtn,\n    TmSection: TmSection,\n    TmContent: TmContent\n  },\n  data: function data() {\n    return {\n      moment: moment,\n      md: new MarkdownIt({\n        linkify: true,\n        html: true\n      }),\n      signup: null\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters([\"cwu\"])), {}, {\n    workshop: function workshop() {\n      var _this = this;\n\n      if (this.cwu.cwu && this.cwu.cwu.length > 0) {\n        return this.cwu.cwu.find(function (e) {\n          return e.slug === _this.$route.params.workshop;\n        });\n      } else {\n        return {\n          slug: \"\"\n        };\n      }\n    }\n  }),\n  methods: {\n    openModal: function openModal(bool) {\n      this.signup = bool;\n    },\n    toTimezone: function toTimezone(date, time) {\n      return moment // set base time with UTC\n      // get timezone with i18n API - Intl.DateTimeFormat().resolvedOptions().timeZone\n      // usage: 2020-08-04 08:00\n      .tz(\"\".concat(date, \" \").concat(time), \"UTC\") // use client's local time zone\n      .tz(moment.tz.guess()).format(\"h:mma z\");\n    }\n  }\n};",{"version":3,"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,MAAP,MAAmB,iBAAnB;AACA,SAASC,UAAT,QAA2B,MAA3B;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,SAASC,KAAT,EAAgBC,YAAhB,QAAoC,gBAApC;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AAEA,eAAe;AACbC,MAAI,EAAE,YADO;AAEbC,UAAQ,EAAE;AACRC,SAAK,EAAE;AADC,GAFG;AAKbC,YAAU,EAAE;AACVR,SAAK,EAALA,KADU;AAEVC,gBAAY,EAAZA,YAFU;AAGVC,SAAK,EAALA,KAHU;AAIVC,aAAS,EAATA,SAJU;AAKVC,aAAS,EAATA;AALU,GALC;AAYbK,MAAI,EAAE;AAAA,WAAO;AACXZ,YAAM,EAAEA,MADG;AAEXa,QAAE,EAAE,IAAIX,UAAJ,CAAe;AACjBY,eAAO,EAAE,IADQ;AAEjBC,YAAI,EAAE;AAFW,OAAf,CAFO;AAMXC,YAAM,EAAE;AANG,KAAP;AAAA,GAZO;AAoBbC,UAAQ,kCACHhB,UAAU,CAAC,CAAC,KAAD,CAAD,CADP;AAENiB,YAFM,sBAEK;AAAA;;AACT,UAAI,KAAKC,GAAL,CAASA,GAAT,IAAgB,KAAKA,GAAL,CAASA,GAAT,CAAaC,MAAb,GAAsB,CAA1C,EAA6C;AAC3C,eAAO,KAAKD,GAAL,CAASA,GAAT,CAAaE,IAAb,CAAkB,WAAC;AAAA,iBAAIC,CAAC,CAACC,IAAF,KAAW,KAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBP,QAAlC;AAAA,SAAnB,CAAP;AACD,OAFD,MAEO;AACL,eAAO;AACLK,cAAI,EAAE;AADD,SAAP;AAGD;AACF;AAVK,IApBK;AAgCbG,SAAO,EAAE;AACPC,aADO,qBACGC,IADH,EACS;AACd,WAAKZ,MAAL,GAAcY,IAAd;AACD,KAHM;AAIPC,cAJO,sBAIIC,IAJJ,EAIUC,IAJV,EAIgB;AACrB,aACE/B,MAAM,CACJ;AACA;AACA;AAHI,OAIHgC,EAJH,WAISF,IAJT,cAIiBC,IAJjB,GAIyB,KAJzB,EAKE;AALF,OAMGC,EANH,CAMMhC,MAAM,CAACgC,EAAP,CAAUC,KAAV,EANN,EAOGC,MAPH,CAOU,SAPV,CADF;AAUD;AAfM;AAhCI,CAAf","names":["moment","mapGetters","MarkdownIt","Modal","SeriesSignup","TmBtn","TmSection","TmContent","name","metaInfo","title","components","data","md","linkify","html","signup","computed","workshop","cwu","length","find","e","slug","$route","params","methods","openModal","bool","toTimezone","date","time","tz","guess","format"],"sourceRoot":"src/views","sources":["C:/xampp/htdocs/cosmos/src/views/Workshop.vue"],"sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport moment from \"moment-timezone\"\nimport { mapGetters } from \"vuex\"\nimport MarkdownIt from \"markdown-it\"\nimport { Modal, SeriesSignup } from \"@cosmos-ui/vue\"\nimport TmBtn from \"common/TmBtn\"\nimport TmSection from \"common/TmSection\"\nimport TmContent from \"common/TmContent\"\n\nexport default {\n  name: \"page-event\",\n  metaInfo: {\n    title: \"Workshop Details\"\n  },\n  components: {\n    Modal,\n    SeriesSignup,\n    TmBtn,\n    TmSection,\n    TmContent\n  },\n  data: () => ({\n    moment: moment,\n    md: new MarkdownIt({\n      linkify: true,\n      html: true\n    }),\n    signup: null\n  }),\n  computed: {\n    ...mapGetters([\"cwu\"]),\n    workshop() {\n      if (this.cwu.cwu && this.cwu.cwu.length > 0) {\n        return this.cwu.cwu.find(e => e.slug === this.$route.params.workshop)\n      } else {\n        return {\n          slug: \"\"\n        }\n      }\n    }\n  },\n  methods: {\n    openModal(bool) {\n      this.signup = bool\n    },\n    toTimezone(date, time) {\n      return (\n        moment\n          // set base time with UTC\n          // get timezone with i18n API - Intl.DateTimeFormat().resolvedOptions().timeZone\n          // usage: 2020-08-04 08:00\n          .tz(`${date} ${time}`, \"UTC\")\n          // use client's local time zone\n          .tz(moment.tz.guess())\n          .format(\"h:mma z\")\n      )\n    }\n  }\n}\n"]}]}