{"remainingRequest":"C:\\xampp\\htdocs\\cosmos\\node_modules\\babel-loader\\lib\\index.js!C:\\xampp\\htdocs\\cosmos\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\xampp\\htdocs\\cosmos\\src\\store\\modules\\modals.js","dependencies":[{"path":"C:\\xampp\\htdocs\\cosmos\\src\\store\\modules\\modals.js","mtime":1644920968000},{"path":"C:\\xampp\\htdocs\\cosmos\\babel.config.js","mtime":1644920968000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport disableScroll from \"disable-scroll\";\nvar state = {\n  definition: {\n    current: \"\",\n    active: false,\n    top: 0,\n    left: 0\n  }\n};\nvar actions = {};\nvar mutations = {\n  showDefinition: function showDefinition(state, _ref) {\n    var event = _ref.event,\n        glossary = _ref.glossary;\n    // set the position of the modal\n    var viewportOffset = event.target.getBoundingClientRect();\n    state.definition.top = viewportOffset.top;\n    state.definition.left = viewportOffset.left; // set the data of the modal\n\n    var defSlug = event.target.getAttribute(\"data-def\");\n    state.definition.current = glossary.find(function (i) {\n      return i.slug === defSlug;\n    }); // enable the modal\n\n    if (state.definition.current) {\n      disableScroll.on();\n      state.definition.active = true;\n    }\n  },\n  closeDefinition: function closeDefinition(state) {\n    disableScroll.off();\n    state.definition.active = false;\n  }\n};\nexport default {\n  state: state,\n  actions: actions,\n  mutations: mutations\n};",{"version":3,"sources":["C:/xampp/htdocs/cosmos/src/store/modules/modals.js"],"names":["disableScroll","state","definition","current","active","top","left","actions","mutations","showDefinition","event","glossary","viewportOffset","target","getBoundingClientRect","defSlug","getAttribute","find","i","slug","on","closeDefinition","off"],"mappings":";AAAA,OAAOA,aAAP,MAA0B,gBAA1B;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,UAAU,EAAE;AACVC,IAAAA,OAAO,EAAE,EADC;AAEVC,IAAAA,MAAM,EAAE,KAFE;AAGVC,IAAAA,GAAG,EAAE,CAHK;AAIVC,IAAAA,IAAI,EAAE;AAJI;AADA,CAAd;AASA,IAAMC,OAAO,GAAG,EAAhB;AAEA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,cADgB,0BACDR,KADC,QAC2B;AAAA,QAAnBS,KAAmB,QAAnBA,KAAmB;AAAA,QAAZC,QAAY,QAAZA,QAAY;AACzC;AACA,QAAIC,cAAc,GAAGF,KAAK,CAACG,MAAN,CAAaC,qBAAb,EAArB;AACAb,IAAAA,KAAK,CAACC,UAAN,CAAiBG,GAAjB,GAAuBO,cAAc,CAACP,GAAtC;AACAJ,IAAAA,KAAK,CAACC,UAAN,CAAiBI,IAAjB,GAAwBM,cAAc,CAACN,IAAvC,CAJyC,CAMzC;;AACA,QAAIS,OAAO,GAAGL,KAAK,CAACG,MAAN,CAAaG,YAAb,CAA0B,UAA1B,CAAd;AACAf,IAAAA,KAAK,CAACC,UAAN,CAAiBC,OAAjB,GAA2BQ,QAAQ,CAACM,IAAT,CAAc,UAAAC,CAAC;AAAA,aAAIA,CAAC,CAACC,IAAF,KAAWJ,OAAf;AAAA,KAAf,CAA3B,CARyC,CAUzC;;AACA,QAAId,KAAK,CAACC,UAAN,CAAiBC,OAArB,EAA8B;AAC5BH,MAAAA,aAAa,CAACoB,EAAd;AACAnB,MAAAA,KAAK,CAACC,UAAN,CAAiBE,MAAjB,GAA0B,IAA1B;AACD;AACF,GAhBe;AAiBhBiB,EAAAA,eAjBgB,2BAiBApB,KAjBA,EAiBO;AACrBD,IAAAA,aAAa,CAACsB,GAAd;AACArB,IAAAA,KAAK,CAACC,UAAN,CAAiBE,MAAjB,GAA0B,KAA1B;AACD;AApBe,CAAlB;AAuBA,eAAe;AAAEH,EAAAA,KAAK,EAALA,KAAF;AAASM,EAAAA,OAAO,EAAPA,OAAT;AAAkBC,EAAAA,SAAS,EAATA;AAAlB,CAAf","sourcesContent":["import disableScroll from \"disable-scroll\"\n\nconst state = {\n  definition: {\n    current: \"\",\n    active: false,\n    top: 0,\n    left: 0\n  }\n}\n\nconst actions = {}\n\nconst mutations = {\n  showDefinition(state, { event, glossary }) {\n    // set the position of the modal\n    let viewportOffset = event.target.getBoundingClientRect()\n    state.definition.top = viewportOffset.top\n    state.definition.left = viewportOffset.left\n\n    // set the data of the modal\n    let defSlug = event.target.getAttribute(\"data-def\")\n    state.definition.current = glossary.find(i => i.slug === defSlug)\n\n    // enable the modal\n    if (state.definition.current) {\n      disableScroll.on()\n      state.definition.active = true\n    }\n  },\n  closeDefinition(state) {\n    disableScroll.off()\n    state.definition.active = false\n  }\n}\n\nexport default { state, actions, mutations }\n"]}]}