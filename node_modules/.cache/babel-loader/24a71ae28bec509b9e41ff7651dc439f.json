{"remainingRequest":"C:\\xampp\\htdocs\\cosmos\\node_modules\\babel-loader\\lib\\index.js!C:\\xampp\\htdocs\\cosmos\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\xampp\\htdocs\\cosmos\\src\\store\\modules\\community.js","dependencies":[{"path":"C:\\xampp\\htdocs\\cosmos\\src\\store\\modules\\community.js","mtime":1644920968000},{"path":"C:\\xampp\\htdocs\\cosmos\\babel.config.js","mtime":1644920968000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\n\nvar Airtable = require(\"airtable\");\n\nvar apiKey = process.env.VUE_APP_AIRTABLE_API_KEY;\nAirtable.configure({\n  endpointUrl: \"https://api.airtable.com\",\n  apiKey: \"\".concat(apiKey)\n});\nvar base = Airtable.base(\"app6cmf6dU89OHtUP\");\n\nvar gatherRecords = function gatherRecords(commit, baseName, mutationName) {\n  base(baseName).select() // firstPage() returns first 100 of records in each request\n  .all(function (err, records) {\n    if (err) {\n      return;\n    }\n\n    records.forEach(function (record) {\n      if (record.fields.active) commit(mutationName, record);\n    });\n  });\n};\n\nvar state = {\n  media: [],\n  videos: [],\n  events: []\n};\nvar actions = {\n  initCommunityMedia: function initCommunityMedia(_ref) {\n    var commit = _ref.commit;\n    gatherRecords(commit, \"media\", \"addCommunityMedia\");\n  },\n  initCommunityVideos: function initCommunityVideos(_ref2) {\n    var commit = _ref2.commit;\n    gatherRecords(commit, \"videos\", \"addCommunityVideo\");\n  },\n  initCommunityEvents: function initCommunityEvents(_ref3) {\n    var commit = _ref3.commit;\n    gatherRecords(commit, \"events\", \"addCommunityEvent\");\n  }\n};\nvar mutations = {\n  addCommunityMedia: function addCommunityMedia(state, value) {\n    state.media.push(value.fields);\n  },\n  addCommunityVideo: function addCommunityVideo(state, value) {\n    state.videos.push(value.fields);\n  },\n  addCommunityEvent: function addCommunityEvent(state, value) {\n    state.events.push(value.fields);\n  }\n};\nexport default {\n  state: state,\n  actions: actions,\n  mutations: mutations\n};",{"version":3,"sources":["C:/xampp/htdocs/cosmos/src/store/modules/community.js"],"names":["Airtable","require","apiKey","process","env","VUE_APP_AIRTABLE_API_KEY","configure","endpointUrl","base","gatherRecords","commit","baseName","mutationName","select","all","err","records","forEach","record","fields","active","state","media","videos","events","actions","initCommunityMedia","initCommunityVideos","initCommunityEvents","mutations","addCommunityMedia","value","push","addCommunityVideo","addCommunityEvent"],"mappings":";;AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AAEA,IAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,wBAA3B;AAEAL,QAAQ,CAACM,SAAT,CAAmB;AACjBC,EAAAA,WAAW,EAAE,0BADI;AAEjBL,EAAAA,MAAM,YAAKA,MAAL;AAFW,CAAnB;AAKA,IAAIM,IAAI,GAAGR,QAAQ,CAACQ,IAAT,CAAc,mBAAd,CAAX;;AAEA,IAAIC,aAAa,GAAG,SAAhBA,aAAgB,CAASC,MAAT,EAAiBC,QAAjB,EAA2BC,YAA3B,EAAyC;AAC3DJ,EAAAA,IAAI,CAACG,QAAD,CAAJ,CACGE,MADH,GAEE;AAFF,GAGGC,GAHH,CAGO,UAACC,GAAD,EAAMC,OAAN,EAAkB;AACrB,QAAID,GAAJ,EAAS;AACP;AACD;;AACDC,IAAAA,OAAO,CAACC,OAAR,CAAgB,UAAAC,MAAM,EAAI;AACxB,UAAIA,MAAM,CAACC,MAAP,CAAcC,MAAlB,EAA0BV,MAAM,CAACE,YAAD,EAAeM,MAAf,CAAN;AAC3B,KAFD;AAGD,GAVH;AAWD,CAZD;;AAcA,IAAMG,KAAK,GAAG;AACZC,EAAAA,KAAK,EAAE,EADK;AAEZC,EAAAA,MAAM,EAAE,EAFI;AAGZC,EAAAA,MAAM,EAAE;AAHI,CAAd;AAMA,IAAMC,OAAO,GAAG;AACdC,EAAAA,kBADc,oCACiB;AAAA,QAAVhB,MAAU,QAAVA,MAAU;AAC7BD,IAAAA,aAAa,CAACC,MAAD,EAAS,OAAT,EAAkB,mBAAlB,CAAb;AACD,GAHa;AAIdiB,EAAAA,mBAJc,sCAIkB;AAAA,QAAVjB,MAAU,SAAVA,MAAU;AAC9BD,IAAAA,aAAa,CAACC,MAAD,EAAS,QAAT,EAAmB,mBAAnB,CAAb;AACD,GANa;AAOdkB,EAAAA,mBAPc,sCAOkB;AAAA,QAAVlB,MAAU,SAAVA,MAAU;AAC9BD,IAAAA,aAAa,CAACC,MAAD,EAAS,QAAT,EAAmB,mBAAnB,CAAb;AACD;AATa,CAAhB;AAYA,IAAMmB,SAAS,GAAG;AAChBC,EAAAA,iBADgB,6BACET,KADF,EACSU,KADT,EACgB;AAC9BV,IAAAA,KAAK,CAACC,KAAN,CAAYU,IAAZ,CAAiBD,KAAK,CAACZ,MAAvB;AACD,GAHe;AAIhBc,EAAAA,iBAJgB,6BAIEZ,KAJF,EAISU,KAJT,EAIgB;AAC9BV,IAAAA,KAAK,CAACE,MAAN,CAAaS,IAAb,CAAkBD,KAAK,CAACZ,MAAxB;AACD,GANe;AAOhBe,EAAAA,iBAPgB,6BAOEb,KAPF,EAOSU,KAPT,EAOgB;AAC9BV,IAAAA,KAAK,CAACG,MAAN,CAAaQ,IAAb,CAAkBD,KAAK,CAACZ,MAAxB;AACD;AATe,CAAlB;AAYA,eAAe;AAAEE,EAAAA,KAAK,EAALA,KAAF;AAASI,EAAAA,OAAO,EAAPA,OAAT;AAAkBI,EAAAA,SAAS,EAATA;AAAlB,CAAf","sourcesContent":["let Airtable = require(\"airtable\")\n\nconst apiKey = process.env.VUE_APP_AIRTABLE_API_KEY\n\nAirtable.configure({\n  endpointUrl: \"https://api.airtable.com\",\n  apiKey: `${apiKey}`\n})\n\nlet base = Airtable.base(\"app6cmf6dU89OHtUP\")\n\nlet gatherRecords = function(commit, baseName, mutationName) {\n  base(baseName)\n    .select()\n    // firstPage() returns first 100 of records in each request\n    .all((err, records) => {\n      if (err) {\n        return\n      }\n      records.forEach(record => {\n        if (record.fields.active) commit(mutationName, record)\n      })\n    })\n}\n\nconst state = {\n  media: [],\n  videos: [],\n  events: []\n}\n\nconst actions = {\n  initCommunityMedia({ commit }) {\n    gatherRecords(commit, \"media\", \"addCommunityMedia\")\n  },\n  initCommunityVideos({ commit }) {\n    gatherRecords(commit, \"videos\", \"addCommunityVideo\")\n  },\n  initCommunityEvents({ commit }) {\n    gatherRecords(commit, \"events\", \"addCommunityEvent\")\n  }\n}\n\nconst mutations = {\n  addCommunityMedia(state, value) {\n    state.media.push(value.fields)\n  },\n  addCommunityVideo(state, value) {\n    state.videos.push(value.fields)\n  },\n  addCommunityEvent(state, value) {\n    state.events.push(value.fields)\n  }\n}\n\nexport default { state, actions, mutations }\n"]}]}