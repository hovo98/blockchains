{"remainingRequest":"C:\\xampp\\htdocs\\cosmos\\node_modules\\babel-loader\\lib\\index.js!C:\\xampp\\htdocs\\cosmos\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\xampp\\htdocs\\cosmos\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\cosmos\\src\\views\\Launch.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\xampp\\htdocs\\cosmos\\src\\views\\Launch.vue","mtime":1644920968000},{"path":"C:\\xampp\\htdocs\\cosmos\\babel.config.js","mtime":1644920968000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.split\";\nimport _defineProperty from \"C:/xampp/htdocs/cosmos/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport moment from \"moment\";\nimport { mapGetters } from \"vuex\";\nimport CardBlockExplorer from \"cards/CardBlockExplorer\";\nimport PrecommitsBar from \"common/PrecommitsBar\";\nimport SectionLogos from \"sections/SectionLogos\";\nimport TmBtn from \"common/TmBtn\";\nimport TmCountDown from \"common/TmCountDown\";\nimport TmCountDownLarge from \"common/TmCountDownLarge\";\nimport TmHeader from \"common/TmHeader\";\nimport TmSection from \"common/TmSection\";\nexport default {\n  name: \"page-launch\",\n  metaInfo: {\n    title: \"Cosmos Hub Launch\"\n  },\n  components: {\n    CardBlockExplorer: CardBlockExplorer,\n    SectionLogos: SectionLogos,\n    PrecommitsBar: PrecommitsBar,\n    TmBtn: TmBtn,\n    TmCountDown: TmCountDown,\n    TmCountDownLarge: TmCountDownLarge,\n    TmHeader: TmHeader,\n    TmSection: TmSection\n  },\n  computed: _objectSpread({}, mapGetters([\"launch\", \"media\", \"urls\"])),\n  data: function data() {\n    return {\n      consensusState: {},\n      precommits: 0.0,\n      block: {\n        height: \"-\",\n        round: 0,\n        step: 0\n      }\n    };\n  },\n  methods: {\n    fetchBlockchain: function fetchBlockchain() {\n      var _this = this;\n\n      fetch(\"https://rpc.nylira.net/consensus_state\").then(function (response) {\n        // Examine the text in the response\n        response.json().then(function (data) {\n          var consensus_state = data.result; // set block data\n\n          var block = consensus_state.round_state[\"height/round/step\"].split(\"/\");\n          _this.block = {\n            height: block[0],\n            round: block[1],\n            step: block[2]\n          }; // set precommits data\n\n          var precommitsBitArray = consensus_state.round_state.height_vote_set[0].precommits_bit_array;\n          _this.precommits = parseFloat(precommitsBitArray.split(\" \")[3]);\n        });\n      });\n    },\n    updateLaunchStep: function updateLaunchStep() {\n      if (moment(this.launch.countdown.genesis).isBefore(moment())) {\n        this.$store.commit(\"setLaunchStep\", 0);\n      }\n    },\n    showCountdown: function showCountdown() {\n      this.$store.commit(\"setLaunchCountdown\", true);\n    },\n    maybeHideCountdown: function maybeHideCountdown() {\n      if (moment(this.launch.countdown.genesis).isBefore(moment())) {\n        this.$store.commit(\"setLaunchCountdown\", false);\n      }\n    },\n    maybeShowCountdown: function maybeShowCountdown() {\n      var endDate = moment(this.launch.countdown.genesis);\n      var startDate = moment(endDate).subtract(1, \"hour\");\n\n      if (moment().isBetween(startDate, endDate)) {\n        this.$store.commit(\"setLaunchCountdownButton\", true);\n        this.$store.commit(\"setLaunchCountdown\", true);\n      } else {\n        this.$store.commit(\"setLaunchCountdownButton\", false);\n      }\n    }\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    this.maybeShowCountdown();\n    this.updateLaunchStep();\n    window.setInterval(function () {\n      _this2.$store.commit(\"updateNow\");\n\n      _this2.updateLaunchStep();\n\n      _this2.maybeHideCountdown();\n\n      _this2.fetchBlockchain();\n    }, 1000);\n    window.setInterval(function () {\n      _this2.maybeShowCountdown();\n    }, 1000 * 60 * 5);\n  }\n};",{"version":3,"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","names":["moment","mapGetters","CardBlockExplorer","PrecommitsBar","SectionLogos","TmBtn","TmCountDown","TmCountDownLarge","TmHeader","TmSection","name","metaInfo","title","components","computed","data","consensusState","precommits","block","height","round","step","methods","fetchBlockchain","fetch","then","response","json","consensus_state","result","round_state","split","precommitsBitArray","height_vote_set","precommits_bit_array","parseFloat","updateLaunchStep","launch","countdown","genesis","isBefore","$store","commit","showCountdown","maybeHideCountdown","maybeShowCountdown","endDate","startDate","subtract","isBetween","mounted","window","setInterval"],"sourceRoot":"src/views","sources":["C:/xampp/htdocs/cosmos/src/views/Launch.vue"],"sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport moment from \"moment\"\nimport { mapGetters } from \"vuex\"\nimport CardBlockExplorer from \"cards/CardBlockExplorer\"\nimport PrecommitsBar from \"common/PrecommitsBar\"\nimport SectionLogos from \"sections/SectionLogos\"\nimport TmBtn from \"common/TmBtn\"\nimport TmCountDown from \"common/TmCountDown\"\nimport TmCountDownLarge from \"common/TmCountDownLarge\"\nimport TmHeader from \"common/TmHeader\"\nimport TmSection from \"common/TmSection\"\nexport default {\n  name: \"page-launch\",\n  metaInfo: { title: \"Cosmos Hub Launch\" },\n  components: {\n    CardBlockExplorer,\n    SectionLogos,\n    PrecommitsBar,\n    TmBtn,\n    TmCountDown,\n    TmCountDownLarge,\n    TmHeader,\n    TmSection\n  },\n  computed: {\n    ...mapGetters([\"launch\", \"media\", \"urls\"])\n  },\n  data: () => ({\n    consensusState: {},\n    precommits: 0.0,\n    block: {\n      height: \"-\",\n      round: 0,\n      step: 0\n    }\n  }),\n  methods: {\n    fetchBlockchain() {\n      fetch(\"https://rpc.nylira.net/consensus_state\").then(response => {\n        // Examine the text in the response\n        response.json().then(data => {\n          let consensus_state = data.result\n\n          // set block data\n          let block = consensus_state.round_state[\"height/round/step\"].split(\n            \"/\"\n          )\n          this.block = {\n            height: block[0],\n            round: block[1],\n            step: block[2]\n          }\n\n          // set precommits data\n          let precommitsBitArray =\n            consensus_state.round_state.height_vote_set[0].precommits_bit_array\n          this.precommits = parseFloat(precommitsBitArray.split(\" \")[3])\n        })\n      })\n    },\n    updateLaunchStep() {\n      if (moment(this.launch.countdown.genesis).isBefore(moment())) {\n        this.$store.commit(\"setLaunchStep\", 0)\n      }\n    },\n    showCountdown() {\n      this.$store.commit(\"setLaunchCountdown\", true)\n    },\n    maybeHideCountdown() {\n      if (moment(this.launch.countdown.genesis).isBefore(moment())) {\n        this.$store.commit(\"setLaunchCountdown\", false)\n      }\n    },\n    maybeShowCountdown() {\n      let endDate = moment(this.launch.countdown.genesis)\n      let startDate = moment(endDate).subtract(1, \"hour\")\n      if (moment().isBetween(startDate, endDate)) {\n        this.$store.commit(\"setLaunchCountdownButton\", true)\n        this.$store.commit(\"setLaunchCountdown\", true)\n      } else {\n        this.$store.commit(\"setLaunchCountdownButton\", false)\n      }\n    }\n  },\n  mounted() {\n    this.maybeShowCountdown()\n    this.updateLaunchStep()\n\n    window.setInterval(() => {\n      this.$store.commit(\"updateNow\")\n      this.updateLaunchStep()\n      this.maybeHideCountdown()\n      this.fetchBlockchain()\n    }, 1000)\n\n    window.setInterval(() => {\n      this.maybeShowCountdown()\n    }, 1000 * 60 * 5)\n  }\n}\n"]}]}