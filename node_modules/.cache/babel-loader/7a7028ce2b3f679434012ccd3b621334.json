{"remainingRequest":"C:\\xampp\\htdocs\\cosmos\\node_modules\\babel-loader\\lib\\index.js!C:\\xampp\\htdocs\\cosmos\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\xampp\\htdocs\\cosmos\\src\\store\\modules\\media.js","dependencies":[{"path":"C:\\xampp\\htdocs\\cosmos\\src\\store\\modules\\media.js","mtime":1644920968000},{"path":"C:\\xampp\\htdocs\\cosmos\\babel.config.js","mtime":1644920968000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/web.dom.iterable\";\n\nvar Airtable = require(\"airtable\");\n\nvar apiKey = process.env.VUE_APP_AIRTABLE_API_KEY;\nAirtable.configure({\n  endpointUrl: \"https://api.airtable.com\",\n  apiKey: \"\".concat(apiKey)\n});\nvar base = Airtable.base(\"apphVC4IpCTi0JBCl\");\nvar state = [];\nvar actions = {\n  initializeMentions: function initializeMentions(_ref) {\n    var commit = _ref.commit;\n    base(\"mentions\").select().firstPage(function (err, records) {\n      if (err) {\n        return;\n      }\n\n      records.forEach(function (record) {\n        if (record.fields.active) commit(\"addMention\", record);\n      });\n    });\n  }\n};\nvar mutations = {\n  addMention: function addMention(state, value) {\n    var mentionExists = state.find(function (i) {\n      return i.id === value.fields.id;\n    });\n\n    if (!mentionExists) {\n      state.push(value.fields);\n    }\n  }\n};\nexport default {\n  state: state,\n  actions: actions,\n  mutations: mutations\n};",{"version":3,"sources":["C:/xampp/htdocs/cosmos/src/store/modules/media.js"],"names":["Airtable","require","apiKey","process","env","VUE_APP_AIRTABLE_API_KEY","configure","endpointUrl","base","state","actions","initializeMentions","commit","select","firstPage","err","records","forEach","record","fields","active","mutations","addMention","value","mentionExists","find","i","id","push"],"mappings":";;;AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AAEA,IAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,wBAA3B;AAEAL,QAAQ,CAACM,SAAT,CAAmB;AACjBC,EAAAA,WAAW,EAAE,0BADI;AAEjBL,EAAAA,MAAM,YAAKA,MAAL;AAFW,CAAnB;AAIA,IAAIM,IAAI,GAAGR,QAAQ,CAACQ,IAAT,CAAc,mBAAd,CAAX;AAEA,IAAMC,KAAK,GAAG,EAAd;AAEA,IAAMC,OAAO,GAAG;AACdC,EAAAA,kBADc,oCACiB;AAAA,QAAVC,MAAU,QAAVA,MAAU;AAC7BJ,IAAAA,IAAI,CAAC,UAAD,CAAJ,CACGK,MADH,GAEGC,SAFH,CAEa,UAACC,GAAD,EAAMC,OAAN,EAAkB;AAC3B,UAAID,GAAJ,EAAS;AACP;AACD;;AACDC,MAAAA,OAAO,CAACC,OAAR,CAAgB,UAAAC,MAAM,EAAI;AACxB,YAAIA,MAAM,CAACC,MAAP,CAAcC,MAAlB,EAA0BR,MAAM,CAAC,YAAD,EAAeM,MAAf,CAAN;AAC3B,OAFD;AAGD,KATH;AAUD;AAZa,CAAhB;AAeA,IAAMG,SAAS,GAAG;AAChBC,EAAAA,UADgB,sBACLb,KADK,EACEc,KADF,EACS;AACvB,QAAIC,aAAa,GAAGf,KAAK,CAACgB,IAAN,CAAW,UAAAC,CAAC;AAAA,aAAIA,CAAC,CAACC,EAAF,KAASJ,KAAK,CAACJ,MAAN,CAAaQ,EAA1B;AAAA,KAAZ,CAApB;;AACA,QAAI,CAACH,aAAL,EAAoB;AAClBf,MAAAA,KAAK,CAACmB,IAAN,CAAWL,KAAK,CAACJ,MAAjB;AACD;AACF;AANe,CAAlB;AASA,eAAe;AAAEV,EAAAA,KAAK,EAALA,KAAF;AAASC,EAAAA,OAAO,EAAPA,OAAT;AAAkBW,EAAAA,SAAS,EAATA;AAAlB,CAAf","sourcesContent":["let Airtable = require(\"airtable\")\n\nconst apiKey = process.env.VUE_APP_AIRTABLE_API_KEY\n\nAirtable.configure({\n  endpointUrl: \"https://api.airtable.com\",\n  apiKey: `${apiKey}`\n})\nlet base = Airtable.base(\"apphVC4IpCTi0JBCl\")\n\nconst state = []\n\nconst actions = {\n  initializeMentions({ commit }) {\n    base(\"mentions\")\n      .select()\n      .firstPage((err, records) => {\n        if (err) {\n          return\n        }\n        records.forEach(record => {\n          if (record.fields.active) commit(\"addMention\", record)\n        })\n      })\n  }\n}\n\nconst mutations = {\n  addMention(state, value) {\n    let mentionExists = state.find(i => i.id === value.fields.id)\n    if (!mentionExists) {\n      state.push(value.fields)\n    }\n  }\n}\n\nexport default { state, actions, mutations }\n"]}]}