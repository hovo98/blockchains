{"remainingRequest":"C:\\xampp\\htdocs\\cosmos\\node_modules\\babel-loader\\lib\\index.js!C:\\xampp\\htdocs\\cosmos\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\xampp\\htdocs\\cosmos\\src\\scripts\\helpers.js","dependencies":[{"path":"C:\\xampp\\htdocs\\cosmos\\src\\scripts\\helpers.js","mtime":1644920968000},{"path":"C:\\xampp\\htdocs\\cosmos\\babel.config.js","mtime":1644920968000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport moment from \"moment\";\nimport { truncate } from \"lodash\";\nimport \"twix\";\n\nfunction pastDate(date) {\n  return moment(date).isBefore(moment().subtract(1, \"d\"));\n}\n\nfunction isFlush(imgType) {\n  return imgType === \"flush\" || imgType === \"image/jpeg\";\n}\n\nfunction optionalImg(images) {\n  if (images && images.length > 0) {\n    return {\n      type: images[0].type,\n      src: images[0].url\n    };\n  }\n\n  return {\n    type: \"\",\n    src: \"\"\n  };\n}\n\nfunction date(date) {\n  return moment(date).format(\"MMM D, YYYY\");\n}\n\nfunction dates(start, end) {\n  return moment(start).twix(end, {\n    allDay: true\n  }).format({\n    monthFormat: \"MMMM\",\n    dayFormat: \"D\"\n  });\n}\n\nfunction blogImgSrc(txt) {\n  if (txt === \"placeholder\") {\n    return txt;\n  } // parse the raw HTML into a document\n\n\n  var parser = new DOMParser();\n  var htmlDoc = parser.parseFromString(txt, \"text/html\"); // retrieve the first blog image\n\n  var src = htmlDoc.querySelectorAll(\"img\")[0].src; // reduce the image size to 640px wide\n\n  return src.split(\"1024\").join(\"640\");\n}\n\nfunction blogContent(txt) {\n  var parser = new DOMParser();\n  var doc = parser.parseFromString(txt, \"text/html\"); // retrieve the first <p>\n\n  var text = doc.querySelectorAll(\"p\")[0].innerHTML;\n  var truncText = truncate(text, {\n    length: 180,\n    separator: \" \"\n  });\n  return truncText;\n}\n\nexport default {\n  pastDate: pastDate,\n  isFlush: isFlush,\n  optionalImg: optionalImg,\n  date: date,\n  dates: dates,\n  blogImgSrc: blogImgSrc,\n  blogContent: blogContent\n};",{"version":3,"sources":["C:/xampp/htdocs/cosmos/src/scripts/helpers.js"],"names":["moment","truncate","pastDate","date","isBefore","subtract","isFlush","imgType","optionalImg","images","length","type","src","url","format","dates","start","end","twix","allDay","monthFormat","dayFormat","blogImgSrc","txt","parser","DOMParser","htmlDoc","parseFromString","querySelectorAll","split","join","blogContent","doc","text","innerHTML","truncText","separator"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,OAAO,MAAP;;AAEA,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;AACtB,SAAOH,MAAM,CAACG,IAAD,CAAN,CAAaC,QAAb,CAAsBJ,MAAM,GAAGK,QAAT,CAAkB,CAAlB,EAAqB,GAArB,CAAtB,CAAP;AACD;;AAED,SAASC,OAAT,CAAiBC,OAAjB,EAA0B;AACxB,SAAOA,OAAO,KAAK,OAAZ,IAAuBA,OAAO,KAAK,YAA1C;AACD;;AAED,SAASC,WAAT,CAAqBC,MAArB,EAA6B;AAC3B,MAAIA,MAAM,IAAIA,MAAM,CAACC,MAAP,GAAgB,CAA9B,EAAiC;AAC/B,WAAO;AACLC,MAAAA,IAAI,EAAEF,MAAM,CAAC,CAAD,CAAN,CAAUE,IADX;AAELC,MAAAA,GAAG,EAAEH,MAAM,CAAC,CAAD,CAAN,CAAUI;AAFV,KAAP;AAID;;AACD,SAAO;AACLF,IAAAA,IAAI,EAAE,EADD;AAELC,IAAAA,GAAG,EAAE;AAFA,GAAP;AAID;;AAED,SAAST,IAAT,CAAcA,IAAd,EAAoB;AAClB,SAAOH,MAAM,CAACG,IAAD,CAAN,CAAaW,MAAb,CAAoB,aAApB,CAAP;AACD;;AAED,SAASC,KAAT,CAAeC,KAAf,EAAsBC,GAAtB,EAA2B;AACzB,SAAOjB,MAAM,CAACgB,KAAD,CAAN,CACJE,IADI,CACCD,GADD,EACM;AAAEE,IAAAA,MAAM,EAAE;AAAV,GADN,EAEJL,MAFI,CAEG;AACNM,IAAAA,WAAW,EAAE,MADP;AAENC,IAAAA,SAAS,EAAE;AAFL,GAFH,CAAP;AAMD;;AAED,SAASC,UAAT,CAAoBC,GAApB,EAAyB;AACvB,MAAIA,GAAG,KAAK,aAAZ,EAA2B;AACzB,WAAOA,GAAP;AACD,GAHsB,CAKvB;;;AACA,MAAIC,MAAM,GAAG,IAAIC,SAAJ,EAAb;AACA,MAAIC,OAAO,GAAGF,MAAM,CAACG,eAAP,CAAuBJ,GAAvB,EAA4B,WAA5B,CAAd,CAPuB,CASvB;;AACA,MAAIX,GAAG,GAAGc,OAAO,CAACE,gBAAR,CAAyB,KAAzB,EAAgC,CAAhC,EAAmChB,GAA7C,CAVuB,CAYvB;;AACA,SAAOA,GAAG,CAACiB,KAAJ,CAAU,MAAV,EAAkBC,IAAlB,CAAuB,KAAvB,CAAP;AACD;;AAED,SAASC,WAAT,CAAqBR,GAArB,EAA0B;AACxB,MAAIC,MAAM,GAAG,IAAIC,SAAJ,EAAb;AACA,MAAIO,GAAG,GAAGR,MAAM,CAACG,eAAP,CAAuBJ,GAAvB,EAA4B,WAA5B,CAAV,CAFwB,CAIxB;;AACA,MAAIU,IAAI,GAAGD,GAAG,CAACJ,gBAAJ,CAAqB,GAArB,EAA0B,CAA1B,EAA6BM,SAAxC;AACA,MAAIC,SAAS,GAAGlC,QAAQ,CAACgC,IAAD,EAAO;AAC7BvB,IAAAA,MAAM,EAAE,GADqB;AAE7B0B,IAAAA,SAAS,EAAE;AAFkB,GAAP,CAAxB;AAKA,SAAOD,SAAP;AACD;;AAED,eAAe;AACbjC,EAAAA,QAAQ,EAARA,QADa;AAEbI,EAAAA,OAAO,EAAPA,OAFa;AAGbE,EAAAA,WAAW,EAAXA,WAHa;AAIbL,EAAAA,IAAI,EAAJA,IAJa;AAKbY,EAAAA,KAAK,EAALA,KALa;AAMbO,EAAAA,UAAU,EAAVA,UANa;AAObS,EAAAA,WAAW,EAAXA;AAPa,CAAf","sourcesContent":["import moment from \"moment\"\nimport { truncate } from \"lodash\"\nimport \"twix\"\n\nfunction pastDate(date) {\n  return moment(date).isBefore(moment().subtract(1, \"d\"))\n}\n\nfunction isFlush(imgType) {\n  return imgType === \"flush\" || imgType === \"image/jpeg\"\n}\n\nfunction optionalImg(images) {\n  if (images && images.length > 0) {\n    return {\n      type: images[0].type,\n      src: images[0].url\n    }\n  }\n  return {\n    type: \"\",\n    src: \"\"\n  }\n}\n\nfunction date(date) {\n  return moment(date).format(\"MMM D, YYYY\")\n}\n\nfunction dates(start, end) {\n  return moment(start)\n    .twix(end, { allDay: true })\n    .format({\n      monthFormat: \"MMMM\",\n      dayFormat: \"D\"\n    })\n}\n\nfunction blogImgSrc(txt) {\n  if (txt === \"placeholder\") {\n    return txt\n  }\n\n  // parse the raw HTML into a document\n  let parser = new DOMParser()\n  let htmlDoc = parser.parseFromString(txt, \"text/html\")\n\n  // retrieve the first blog image\n  let src = htmlDoc.querySelectorAll(\"img\")[0].src\n\n  // reduce the image size to 640px wide\n  return src.split(\"1024\").join(\"640\")\n}\n\nfunction blogContent(txt) {\n  let parser = new DOMParser()\n  let doc = parser.parseFromString(txt, \"text/html\")\n\n  // retrieve the first <p>\n  let text = doc.querySelectorAll(\"p\")[0].innerHTML\n  let truncText = truncate(text, {\n    length: 180,\n    separator: \" \"\n  })\n\n  return truncText\n}\n\nexport default {\n  pastDate,\n  isFlush,\n  optionalImg,\n  date,\n  dates,\n  blogImgSrc,\n  blogContent\n}\n"]}]}