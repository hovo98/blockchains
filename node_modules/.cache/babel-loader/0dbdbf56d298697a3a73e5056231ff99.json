{"remainingRequest":"C:\\xampp\\htdocs\\cosmos\\node_modules\\thread-loader\\dist\\cjs.js!C:\\xampp\\htdocs\\cosmos\\node_modules\\babel-loader\\lib\\index.js!C:\\xampp\\htdocs\\cosmos\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\xampp\\htdocs\\cosmos\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\cosmos\\src\\components\\modals\\ModalDefinition.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\xampp\\htdocs\\cosmos\\src\\components\\modals\\ModalDefinition.vue","mtime":1644920968000},{"path":"C:\\xampp\\htdocs\\cosmos\\babel.config.js","mtime":1644920968000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"C:/xampp/htdocs/cosmos/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport MarkdownIt from \"markdown-it\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  name: \"modal-definition\",\n  computed: _objectSpread(_objectSpread({}, mapGetters([\"modals\"])), {}, {\n    def: function def() {\n      return this.modals.definition;\n    },\n    css: function css() {\n      return {\n        top: this.def.top + 10 + \"px\",\n        left: this.def.left - 16 + \"px\",\n        right: \"auto\",\n        bottom: \"auto\"\n      };\n    }\n  }),\n  data: function data() {\n    return {\n      md: new MarkdownIt()\n    };\n  },\n  methods: {\n    close: function close() {\n      this.$store.commit(\"closeDefinition\");\n    }\n  }\n};",{"version":3,"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,UAAP,MAAuB,aAAvB;AACA,SAASC,UAAT,QAA2B,MAA3B;AACA,eAAe;AACbC,MAAI,EAAE,kBADO;AAEbC,UAAQ,kCACHF,UAAU,CAAC,CAAC,QAAD,CAAD,CADP;AAENG,OAFM,iBAEA;AACJ,aAAO,KAAKC,MAAL,CAAYC,UAAnB;AACD,KAJK;AAKNC,OALM,iBAKA;AACJ,aAAO;AACLC,WAAG,EAAE,KAAKJ,GAAL,CAASI,GAAT,GAAe,EAAf,GAAoB,IADpB;AAELC,YAAI,EAAE,KAAKL,GAAL,CAASK,IAAT,GAAgB,EAAhB,GAAqB,IAFtB;AAGLC,aAAK,EAAE,MAHF;AAILC,cAAM,EAAE;AAJH,OAAP;AAMD;AAZK,IAFK;AAgBbC,MAAI,EAAE;AAAA,WAAO;AACXC,QAAE,EAAE,IAAIb,UAAJ;AADO,KAAP;AAAA,GAhBO;AAmBbc,SAAO,EAAE;AACPC,SADO,mBACC;AACN,WAAKC,MAAL,CAAYC,MAAZ,CAAmB,iBAAnB;AACD;AAHM;AAnBI,CAAf","names":["MarkdownIt","mapGetters","name","computed","def","modals","definition","css","top","left","right","bottom","data","md","methods","close","$store","commit"],"sourceRoot":"src/components/modals","sources":["C:/xampp/htdocs/cosmos/src/components/modals/ModalDefinition.vue"],"sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport MarkdownIt from \"markdown-it\"\nimport { mapGetters } from \"vuex\"\nexport default {\n  name: \"modal-definition\",\n  computed: {\n    ...mapGetters([\"modals\"]),\n    def() {\n      return this.modals.definition\n    },\n    css() {\n      return {\n        top: this.def.top + 10 + \"px\",\n        left: this.def.left - 16 + \"px\",\n        right: \"auto\",\n        bottom: \"auto\"\n      }\n    }\n  },\n  data: () => ({\n    md: new MarkdownIt()\n  }),\n  methods: {\n    close() {\n      this.$store.commit(\"closeDefinition\")\n    }\n  }\n}\n"]}]}