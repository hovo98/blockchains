{"remainingRequest":"C:\\xampp\\htdocs\\cosmos\\node_modules\\babel-loader\\lib\\index.js!C:\\xampp\\htdocs\\cosmos\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\xampp\\htdocs\\cosmos\\src\\store\\modules\\cwu.js","dependencies":[{"path":"C:\\xampp\\htdocs\\cosmos\\src\\store\\modules\\cwu.js","mtime":1644920968000},{"path":"C:\\xampp\\htdocs\\cosmos\\babel.config.js","mtime":1644920968000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\xampp\\htdocs\\cosmos\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\n\nvar Airtable = require(\"airtable\");\n\nvar apiKey = process.env.VUE_APP_AIRTABLE_API_KEY;\nAirtable.configure({\n  endpointUrl: \"https://api.airtable.com\",\n  apiKey: \"\".concat(apiKey)\n});\nvar base = Airtable.base(\"appGq4J4B7aGj2d3P\");\n\nvar gatherRecords = function gatherRecords(commit, baseName, mutationName) {\n  base(baseName).select().all(function (err, records) {\n    if (err) {\n      return;\n    }\n\n    records.forEach(function (record) {\n      if (record.fields.active) commit(mutationName, record);\n    });\n  });\n};\n\nvar state = {\n  cwu: []\n};\nvar actions = {\n  initCwuWorkshops: function initCwuWorkshops(_ref) {\n    var commit = _ref.commit;\n    gatherRecords(commit, \"cwu\", \"addCwuWorkshops\");\n  }\n};\nvar mutations = {\n  addCwuWorkshops: function addCwuWorkshops(state, value) {\n    state.cwu.push(value.fields);\n  }\n};\nexport default {\n  state: state,\n  actions: actions,\n  mutations: mutations\n};",{"version":3,"sources":["C:/xampp/htdocs/cosmos/src/store/modules/cwu.js"],"names":["Airtable","require","apiKey","process","env","VUE_APP_AIRTABLE_API_KEY","configure","endpointUrl","base","gatherRecords","commit","baseName","mutationName","select","all","err","records","forEach","record","fields","active","state","cwu","actions","initCwuWorkshops","mutations","addCwuWorkshops","value","push"],"mappings":";;AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AAEA,IAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,wBAA3B;AAEAL,QAAQ,CAACM,SAAT,CAAmB;AACjBC,EAAAA,WAAW,EAAE,0BADI;AAEjBL,EAAAA,MAAM,YAAKA,MAAL;AAFW,CAAnB;AAKA,IAAIM,IAAI,GAAGR,QAAQ,CAACQ,IAAT,CAAc,mBAAd,CAAX;;AAEA,IAAIC,aAAa,GAAG,SAAhBA,aAAgB,CAASC,MAAT,EAAiBC,QAAjB,EAA2BC,YAA3B,EAAyC;AAC3DJ,EAAAA,IAAI,CAACG,QAAD,CAAJ,CACGE,MADH,GAEGC,GAFH,CAEO,UAACC,GAAD,EAAMC,OAAN,EAAkB;AACrB,QAAID,GAAJ,EAAS;AACP;AACD;;AACDC,IAAAA,OAAO,CAACC,OAAR,CAAgB,UAAAC,MAAM,EAAI;AACxB,UAAIA,MAAM,CAACC,MAAP,CAAcC,MAAlB,EAA0BV,MAAM,CAACE,YAAD,EAAeM,MAAf,CAAN;AAC3B,KAFD;AAGD,GATH;AAUD,CAXD;;AAaA,IAAMG,KAAK,GAAG;AACZC,EAAAA,GAAG,EAAE;AADO,CAAd;AAIA,IAAMC,OAAO,GAAG;AACdC,EAAAA,gBADc,kCACe;AAAA,QAAVd,MAAU,QAAVA,MAAU;AAC3BD,IAAAA,aAAa,CAACC,MAAD,EAAS,KAAT,EAAgB,iBAAhB,CAAb;AACD;AAHa,CAAhB;AAMA,IAAMe,SAAS,GAAG;AAChBC,EAAAA,eADgB,2BACAL,KADA,EACOM,KADP,EACc;AAC5BN,IAAAA,KAAK,CAACC,GAAN,CAAUM,IAAV,CAAeD,KAAK,CAACR,MAArB;AACD;AAHe,CAAlB;AAMA,eAAe;AAAEE,EAAAA,KAAK,EAALA,KAAF;AAASE,EAAAA,OAAO,EAAPA,OAAT;AAAkBE,EAAAA,SAAS,EAATA;AAAlB,CAAf","sourcesContent":["let Airtable = require(\"airtable\")\n\nconst apiKey = process.env.VUE_APP_AIRTABLE_API_KEY\n\nAirtable.configure({\n  endpointUrl: \"https://api.airtable.com\",\n  apiKey: `${apiKey}`\n})\n\nlet base = Airtable.base(\"appGq4J4B7aGj2d3P\")\n\nlet gatherRecords = function(commit, baseName, mutationName) {\n  base(baseName)\n    .select()\n    .all((err, records) => {\n      if (err) {\n        return\n      }\n      records.forEach(record => {\n        if (record.fields.active) commit(mutationName, record)\n      })\n    })\n}\n\nconst state = {\n  cwu: []\n}\n\nconst actions = {\n  initCwuWorkshops({ commit }) {\n    gatherRecords(commit, \"cwu\", \"addCwuWorkshops\")\n  }\n}\n\nconst mutations = {\n  addCwuWorkshops(state, value) {\n    state.cwu.push(value.fields)\n  }\n}\n\nexport default { state, actions, mutations }\n"]}]}